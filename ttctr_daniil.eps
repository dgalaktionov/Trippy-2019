%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: ttctr_daniil.pdf
%%Creator: Adobe Acrobat 11.0.9
%%For: Daniil
%%CreationDate: 24/07/2018, 13:31:28
%%BoundingBox: 35 208 395 375
%%HiResBoundingBox: 0 0 425.2800 425.2800
%%CropBox: 0 0 425.2800 425.2800
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1028 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.4-c005 78.147326, 2012/08/23-13:03:03        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   pdf:Producer="Microsoft® PowerPoint® 2016"
   dc:format="application/pdf"
   xmp:CreatorTool="Microsoft® PowerPoint® 2016"
   xmp:CreateDate="2018-07-24T13:30:54-04:00"
   xmp:ModifyDate="2018-07-24T13:30:54-04:00"
   xmpMM:DocumentID="uuid:081DB052-81FB-4F9F-A35C-3D533FA96826"
   xmpMM:InstanceID="uuid:081DB052-81FB-4F9F-A35C-3D533FA96826">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Diapositiva 1</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>windows</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -425.28 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 425.28 li
425.28 425.28 li
425.28 0 li
cp
clp
gsave
0 425.28 mo
426 425.28 li
426 -.720001 li
0 -.720001 li
cp
clp
0 425.28 mo
425.28 425.28 li
425.28 -3.05176e-5 li
0 -3.05176e-5 li
cp
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
0 sep
ef
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+ArialNarrow-Bold Initial
ct_T42Dict begin
-0.137 -0.305 0.996 1.105
 256 array 0 1 255 {1 index exch /.notdef put} for  /PBAAAA+ArialNarrow-Bold
Type42DictBegin
[<00010000000c000c000c000c4f532f326ee399f2000000cc000000566376
742084704a2200000124000004ba6670676d51dd1010000005e0000004c4
676c7966fc08346b000033fc0000257e68656164cd39154500000aa40000
0036686865610e65065a00000adc00000024686d747887c90aef00000b00
000006a26c6f63615f0956ad000011a4000005326d61787007430b6c0000
16d8000000206e616d65affb541a000016f8000011f6707265706496ba00
000028f000000b0c676469720000000000000000000000000001032302bc
00030008059a053300000093059a05330000020b006602120805020b0706
02020203020400000287000008000000000000000000544d432000200020
201905d3fe51010d077601af2000009fdfd70000000005ba001905ba0019
05a60019042600190000ffe70000ffe70000ffe7fe6cffe705ba0019fe63
ffee02e7ffee05c1001202d7fff405c0000cffd6000002c0000c00000000
000000000000000000000000000000000000000000000000000000000000
0000023d023d00000000ffd7000000000000000000000000000000000000
00000000000000000000000000ea000000ea000000000000000000000000
000000000000000000000000004f003200d70000007f00f800e701190078
007b0002001700ec00430003009c004fffaf00f2000100fa00e2ffdd0035
00e6ffc7007700e5ff8f00020045007100fd0000001b009f00e000e5ffbd
004e00e100fa001300dc002c003e0091009d00a400a700d000dd00e20009
001a003b0077008900cc00e600f90105ffc4000000160019001b0029004a
007500b700bb00d600e400ffff8a000b001e00b700e700ed00f001120349
ffb2001d004a005c005f0076009900a4022b03520012008b00b100b300c9
00dd00e701020119ff5cff68ffd3ffd80015002300370038004900650070
0095009500a500b600bf00c900cf00d600d900e200e700f101190147015d
017401b80323032e0380ff80005b00890097009800b900cc00d500f700fd
010e012a012b015c0170019801b8027a001f0028002d004e006900730080
00800087009100b600c600e700f70101011c019a01b801e5024502fa030a
031f0398039903ba0401045f048d00020005000c0043004e005100520066
006b0075007b00810081008e00a300ae00b000ba00be00f100fb0104014b
016d01ff02c503140317036003efff9affb0ffd90001000d000f00270028
002b002f003600360038004000490058006300660068006a00700077007c
007e0081008500850095009b00a400a700ab00b000b700bb00bc00c400c6
00ca00d500d700db00dd00e100e600f600fb010201040105011401180119
012701370149014b01630167018e019201ad01d7020902fa034e036d0384
03bf03c603d103ed04170439043c04e80501053d062a068ffee7feefff32
ffb4ffbafff00002000300070009001d00210027002b002e004600460049
005a005b005f0067007300760076007a007f008400850087008800900092
00a700a700c900ca00d300d400db00dc00de00f200f200f600f700ff0100
010801110119011901190119011c0127013201330137013c014e01770194
01a701b901c501d201ee02100212022702310234024f0253026202630267
02930302030f0322032e033303380360042604580464048704b004bc04e8
05000510053e055205a405c3062d068400e900f400e80000000000000000
00000000000001190062008200000000005f082304b9013a027e0041004f
00a1009c01950186015e00e002200198000600e200c200aa00a7005e0351
fcb1fd060188012d015201d0018d0137021b025b007e0101030e010d0383
03c1048e0047030d0085016a020e01ba024503d703a5021301c902280314
00bb0355017d01ce0212053d05c302c500900025016301da0468002a0360
004b03ef0392033804170464043c034e03310352000b0239004601f20052
00a9003700d004e701e901f100430016022700dc00dc01a401a4004e0213
00b600e00154025802300183018301c20035001000c70096009b008200c8
03100000403b3f3e3a39383734333231302f2e2d2c2b2a29282726252423
2221201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a0908070605
04030201002c4523466020b02660b004262348482d2c452346236120b026
61b004262348482d2c45234660b0206120b04660b004262348482d2c4523
462361b0206020b02661b02061b004262348482d2c45234660b0406120b0
6660b004262348482d2c4523462361b0406020b02661b04061b004262348
482d2c0110203c003c2d2c20452320b0cd442320b8015a51582320b08d44
235920b0ed51582320b04d44235920b0042651582320b00d44235921212d
2c20204518684420b001602045b04676688a4560442d2c01b10b0a432343
650a2d2c00b10a0b4323430b2d2c00b0462370b101463e01b0462370b102
46453ab10200080d2d2c45b04a234445b04923442d2c2045b00325456164
b050515845441b2121592d2cb00143632362b0002342b00f2b2d2c2045b0
004360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a
8cb8100062602b0c642364615c58b00361592d2c45b0112bb0472344b047
7ae4182d2cb801a65458b00943b801005458b9004aff80b1498044445959
2d2cb01243588745b0112bb0472344b0477ae41b038a45186920b0472344
8a8a8720b0a05158b0112bb0472344b0477ae41b21b0477ae45959182d2c
2d2c4b52582145441b23458c20b00325455258441b212159592d2c01182f
2d2c20b0032545b049234445b04a23444565234520b00325606a20b00923
4223688a6a606120b01a8ab000527921b21a4a40b9ffe0004a45208a5458
2321b03f1b235961441cb114008a5279b34940204945208a54582321b03f
1b235961442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d4323
430b2d2cb10c0d432343650b2d2cb10e0f432343650b2d2cb11011432343
650b2d2c4b525845441b2121592d2c0120b003252349b04060b0206320b0
00525823b002253823b002256538008a63381b212121212159012d2c4569
b00943608a103a2d2c01b005251023208af500b0016023edec2d2c01b005
251023208af500b0016123edec2d2c01b0062510f500edec2d2c20b00160
0110203c003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b0
0743b006430b2d2c3eb02a2a2d2c352d2c76b04b23701020b04b4520b000
5058b00161593a2f182d2c21210c6423648bb84000622d2c21b08051580c
6423648bb82000621bb200402f2b59b002602d2c21b0c051580c6423648b
b81555621bb200802f2b59b002602d2c0c6423648bb84000626023212d2c
b4000100000015b00826b00826b00826b008260f10161345683ab001162d
2cb4000100000015b00826b00826b00826b008260f1016134568653ab001
162d2c4523204520b10405258a505826618a8b1b26608a8c59442d2c4623
46608a8a462320468a608a61b8ff8062232010238ab14b4b8a70456020b0
005058b00161b8ffc08b1bb0408c5968013a2d2cb0332bb02a2a2d2cb013
4358031b02592d2cb0134358021b03592d2c4b53234b515a58381b212159
2d2c01b00425b004254964234564696120b080626ab00225b00225618cb0
4a2344218a10b04af6212d2c01b0022510d023c101b00113b0001410b001
3cb001162d2c01b00013b001b0032549b0031738b001132d000100000002
6666acb243665f0f3cf5001f080000000000a31fb8bd00000000c3fdaab7
fee7fd8c07ff08df0001000b000200000000000000010000077cfe4e0000
086bfee7fee707ff0001000000000000000000000000000000b901d3002c
0000000001d3000001d30000022f0096031d005c0000000003a6003a0000
00000000000000000000022f0057022f0037028d00170000000000000000
0000000000000000000000000000000003a6008503a6002a03a6003f03a6
001f0000000000000000000000000000000000000000022f00a400000000
000000000000000000000000000000000000000004bc000004bc007a04bc
005004bc0079000000000000000000000000000000000000000003a6001d
000000000000000005770077000000000000000000000000000000000000
00000460003d000000000000000004600000063100050000000000000000
0000000000000000000000000000000000000000000000000000000003a6
003c0402006e03a600460402004503a60036022f00140000000000000000
01d30079000000000000000001d300790000000004020077040200430402
007200000000028d006f03a60028022f0019040200730000000000000000
0000000003a6000b00000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000001d3005d000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000003b003b003b003b008c00d1
00d101dd01dd01dd01dd021a026903160316031603160316031603160358
03bc046304cb04cb04cb04cb04cb04cb04fd04fd04fd04fd04fd04fd04fd
058b0618069b070d070d070d070d070d070d075307530753083108310831
08310831083109160916091609980a9c0a9c0a9c0a9c0a9c0a9c0a9c0a9c
0a9c0a9c0b730bdf0c5f0cc30d770de60de60de60e270e270e270e530e53
0eb80f180f8a0f8a0fe41117118511ea11ea11ea11ea1283128312831283
128312831283128312831283128312831283128312831283128312831283
128312831283128312831283128312831283128312831283128312831283
128312831283128312831283128312831283128312831283128312831283
128312831283128312831283128312831283128312831283128312831283
128312831283128312831283128312831283128312831283128312831283
12831283128312831283128312831283128312831283128312bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf00000001
00000298002f00030000000000020010002f0040000004570b0c00000000
0000004b038a0001000000000000003500000001000000000001000c0035
000100000000000200040042000100000000000300180035000100000000
0004001100350001000000000005000c004d000100000000000600100059
0001000000000007005d0069000100000000000800180081000100000000
0009002100c6000100000000000d015500e7000100000000001000050069
0001000000000011000b003b0003000104030002000e0256000300010403
00040028023c0003000104050002000a027e000300010405000400240264
0003000104060002000602a2000300010406000400200288000300010407
0002000802c20003000104070004002202a80003000104080002000c02e4
0003000104080004002602ca0003000104090000006a02f0000300010409
00010018035a00030001040900020008037400030001040900030030035a
00030001040900040022035a00030001040900050018038a000300010409
0006002003a2000300010409000700ba03c20003000104090008003003f2
00030001040900090042047c000300010409000a04fc04be000300010409
000d02aa09ba0003000104090010000a053e000300010409001100160366
00030001040a0002000e0c7e00030001040a000400280c6400030001040b
000200120ca600030001040b0004002c0c8c00030001040c000200080cd2
00030001040c000400220cb800030001040e000200100cfe00030001040e
0004002a0ce4000300010410000200120cd20003000104100004002c0cb8
000300010413000200060d28000300010413000400200d0e000300010414
0002000e0d48000300010414000400280d2e000300010415000200140d70
0003000104150004002e0d560003000104160002000e0d9e000300010416
000400280d84000300010419000200140dc60003000104190004002e0dac
00030001041b0002000a0df400030001041b000400240dda00030001041d
0002000602c200030001041d0004002002a800030001041f0002000a0e18
00030001041f000400240dfe0003000104240002000c0e3c000300010424
000400260e2200030001042d0002000a0e6200030001042d000400240e48
00030001080a0002000e0c7e00030001080a000400280c64000300010816
0002000e0d9e000300010816000400280d84000300010c0a0002000e0c7e
000300010c0a000400280c64000300010c0c000200080cd2000300010c0c
000400220cb8a9203230303820546865204d6f6e6f7479706520436f7270
6f726174696f6e2e20416c6c205269676874732052657365727665642e41
7269616c204e6172726f7720426f6c64203a203230303856657273696f6e
20322e3430417269616c4e6172726f772d426f6c64417269616c20697320
612074726164656d61726b206f6620546865204d6f6e6f7479706520436f
72706f726174696f6e20696e2074686520556e6974656420537461746573
20616e642f6f72206f7468657220636f756e74726965732e526f62696e20
4e6963686f6c61732c205061747269636961205361756e64657273596f75
206d617920757365207468697320666f6e7420746f20646973706c617920
616e64207072696e7420636f6e74656e74206173207065726d6974746564
20627920746865206c6963656e7365207465726d7320666f722074686520
70726f6475637420696e207768696368207468697320666f6e7420697320
696e636c756465642e20596f75206d6179206f6e6c792028692920656d62
6564207468697320666f6e7420696e20636f6e74656e7420617320706572
6d69747465642062792074686520656d62656464696e6720726573747269
6374696f6e7320696e636c7564656420696e207468697320666f6e743b20
616e6420286969292074656d706f726172696c7920646f776e6c6f616420
7468697320666f6e7420746f2061207072696e746572206f72206f746865
72206f75747075742064657669636520746f2068656c70207072696e7420
636f6e74656e742e0041007200690061006c0020004e006100720072006f
00770020004e0065006700720065007400610041007200690061006c0020
004e006100720072006f0077002000740075010d006e00e9004100720069
0061006c0020004e006100720072006f0077002000660065006400410072
00690061006c0020004e006100720072006f007700200046006500740074
0041007200690061006c0020004e006100720072006f00770020038803bd
03c403bf03bd03b100a90020003200300030003800200054006800650020
004d006f006e006f007400790070006500200043006f00720070006f0072
006100740069006f006e002e00200041006c006c00200052006900670068
00740073002000520065007300650072007600650064002e004100720069
0061006c0020004e006100720072006f007700200042006f006c00640020
003a0020003200300030003800560065007200730069006f006e00200032
002e003400300041007200690061006c004e006100720072006f0077002d
0042006f006c00640041007200690061006c002000690073002000610020
00740072006100640065006d00610072006b0020006f0066002000540068
00650020004d006f006e006f007400790070006500200043006f00720070
006f0072006100740069006f006e00200069006e00200074006800650020
0055006e0069007400650064002000530074006100740065007300200061
006e0064002f006f00720020006f007400680065007200200063006f0075
006e00740072006900650073002e0052006f00620069006e0020004e0069
00630068006f006c00610073002c00200050006100740072006900630069
00610020005300610075006e0064006500720073004d006f006e006f0074
007900700065002000440072006100770069006e00670020004f00660066
00690063006500200031003900380032002e0020004100200063006f006e
00740065006d0070006f0072006100720079002000730061006e00730020
00730065007200690066002000640065007300690067006e002c00200041
007200690061006c00200063006f006e007400610069006e00730020006d
006f00720065002000680075006d0061006e006900730074002000630068
006100720061006300740065007200690073007400690063007300200074
00680061006e0020006d0061006e00790020006f00660020006900740073
0020007000720065006400650063006500730073006f0072007300200061
006e0064002000610073002000730075006300680020006900730020006d
006f0072006500200069006e002000740075006e00650020007700690074
006800200074006800650020006d006f006f00640020006f006600200074
006800650020006c00610073007400200064006500630061006400650073
0020006f006600200074006800650020007400770065006e007400690065
00740068002000630065006e0074007500720079002e0020005400680065
0020006f0076006500720061006c006c002000740072006500610074006d
0065006e00740020006f0066002000630075007200760065007300200069
007300200073006f006600740065007200200061006e0064002000660075
006c006c006500720020007400680061006e00200069006e0020006d006f
0073007400200069006e0064007500730074007200690061006c002d0073
00740079006c0065002000730061006e0073002000730065007200690066
002000660061006300650073002e0020005400650072006d0069006e0061
006c0020007300740072006f006b00650073002000610072006500200063
007500740020006f006e002000740068006500200064006900610067006f
006e0061006c002000770068006900630068002000680065006c00700073
00200074006f002000670069007600650020007400680065002000660061
00630065002000610020006c0065007300730020006d0065006300680061
006e006900630061006c00200061007000700065006100720061006e0063
0065002e00200041007200690061006c00200069007300200061006e0020
00650078007400720065006d0065006c0079002000760065007200730061
00740069006c0065002000660061006d0069006c00790020006f00660020
007400790070006500660061006300650073002000770068006900630068
002000630061006e00200062006500200075007300650064002000770069
0074006800200065007100750061006c0020007300750063006300650073
007300200066006f00720020007400650078007400200073006500740074
0069006e006700200069006e0020007200650070006f007200740073002c
002000700072006500730065006e0074006100740069006f006e0073002c
0020006d006100670061007a0069006e006500730020006500740063002c
00200061006e006400200066006f007200200064006900730070006c0061
0079002000750073006500200069006e0020006e00650077007300700061
0070006500720073002c0020006100640076006500720074006900730069
006e006700200061006e0064002000700072006f006d006f00740069006f
006e0073002e0059006f00750020006d0061007900200075007300650020
007400680069007300200066006f006e007400200074006f002000640069
00730070006c0061007900200061006e00640020007000720069006e0074
00200063006f006e00740065006e00740020006100730020007000650072
006d0069007400740065006400200062007900200074006800650020006c
006900630065006e007300650020007400650072006d007300200066006f
00720020007400680065002000700072006f006400750063007400200069
006e0020007700680069006300680020007400680069007300200066006f
006e007400200069007300200069006e0063006c0075006400650064002e
00200059006f00750020006d006100790020006f006e006c007900200028
0069002900200065006d0062006500640020007400680069007300200066
006f006e007400200069006e00200063006f006e00740065006e00740020
006100730020007000650072006d00690074007400650064002000620079
002000740068006500200065006d00620065006400640069006e00670020
007200650073007400720069006300740069006f006e007300200069006e
0063006c007500640065006400200069006e002000740068006900730020
0066006f006e0074003b00200061006e0064002000280069006900290020
00740065006d0070006f0072006100720069006c007900200064006f0077
006e006c006f006100640020007400680069007300200066006f006e0074
00200074006f002000610020007000720069006e0074006500720020006f
00720020006f00740068006500720020006f007500740070007500740020
00640065007600690063006500200074006f002000680065006c00700020
007000720069006e007400200063006f006e00740065006e0074002e0041
007200690061006c0020004e006100720072006f00770020004e00650067
00720069007400610041007200690061006c0020004e006100720072006f
00770020004c0069006800610076006f0069007400750041007200690061
006c0020004e006100720072006f00770020004700720061007300730065
00740074006f0041007200690061006c0020004e006100720072006f0077
0020004600e9006c006b00f6007600e900720041007200690061006c0020
004e006100720072006f007700200056006500740041007200690061006c
0020004e006100720072006f0077002000480061006c0076006600650074
0041007200690061006c0020004e006100720072006f007700200050006f
00670072007500620069006f006e00790041007200690061006c0020004e
006100720072006f00770020004e00650067007200690074006f00410072
00690061006c0020004e006100720072006f00770020041f043e043b0443
043604380440043d044b04390041007200690061006c0020004e00610072
0072006f0077002000540075010d006e00e90041007200690061006c0020
004e006100720072006f00770020004b0061006c0131006e004100720069
0061006c0020004e006100720072006f00770020004b007200650070006b
006f0041007200690061006c0020004e006100720072006f00770020004c
006f006400690061000041ff00af025c00b0025c00e0025c00030000025c
00010074025b00010010024c0040024c0080024c000300a0024c00e0024c
00020020024a0030024a0070024a0080024a00c0024a00d0024a00060070
024f00010080025100010060025100a0025100d002510003006002500001
00c0025000f0025000020040025200500252000200100248002002480002
000002480010024800200248008002480090024800a00248000600500248
0060024800700248008002480090024800a0024800c0024800f002480008
0010024700200247003002470040024700b0024700c00247000600600247
008002470090024700a0024700b002470005000002470010024700200247
00300247000400b0024700c0024700d0024700e0024700f0024700050050
02470060024700700247008002470090024700a002470006003002460040
024600600246007002460080024600a00246000600000246002002460030
0246004002460060024600700246000600d0024600e0024600f002460003
0060024600700246008002460090024600b0024600c00246000600000246
001002460020024600300246004002460050024600060080024600900246
00a0024600c0024600d0024600e0024600f0024600070020024600400246
0050024600600246000400700242000100200242006002420070024200a0
024200b0024200f002420006411800200243006002430070024300a00243
0004002002430060024300a0024300e002430004001001b1002001b10030
01b1400b0320793079407970790470ba015b0080015b401602007a807a02
00578057020900750139f07501090d0bb80800b21f090bb80800409b1f00
0f100f200f300f0439900fa00fb00fc00fd00fe00ff00f07090f011f012f
013f0104399f01af01bf01cf01df01ef01ff0107090f051f052f053f0504
399f05af05bf05cf05df05ef05ff0507090f031f032f033f0304399f03af
03bf03cf03df03ef03ff030709000b100b200b300b040f071f072f073f07
0439900ba00bb00bc00bd00be00bf00b079f07af07bf07cf07df07ef07ff
070740b8022040b301008f108f208f308f408f508f608f708f808f908f0a
608ff08f02208f308f408fc08fd08fe08ff08f0720ca30cac0ca038b048b
05bb04bb05041b041b054b044b05043b043b05ab04ab05044f1f9f1f020f
1f1f1f024f1e9f1e020f1e1f1e02090f1e0f1f02086f19013f1940190200
191019026f18013f184018020018101802090018001902086f159015023f
1540150200151015026f149014023f144014020014101402090014001502
08b066061fb066bbfff40006001601c6b2d7071fb801c64017d753071655
60181f556011181600464600000012110840bb01dd0000000901acb27e2b
1fb801a8b27e601fb801a7b27ede1f410b01a20067029a001f01a1015404
a900a70016019a0154b2971616b901990154b2971616b8015eb27e161fb8
015bb27e2d1fb80158b27e861f410b0156007e0534001f01500154027900
590016014b0154b2df2016b9014901544009c91d16fc7e281ff95bbc029a
001f00f801540127b72a16e57e431fe47e410a01bc001f00d00154095201
4d001600cf015402ddb26716cdb90154019ab23a16cbb80154b3f42316ca
b80154b3c21c16c9b801544009901516bb7e2b1fb95bbc029a001f00b701
540143b22e16b5b80154b4b41a16a561b80534b21fa45bbb029a001f00a3
0154b4c91d169f7e410a010b001f009e015412ac029a0016009d01540255
b254169cb80154b4d81f16917e410a289e0534001600900154029a001f00
8f0154016fb2341689be01540952014d00160087015401afb23d1680b901
5403bcb286167dbe01540778010b0016007901540634b2de1670be015425
5f05340016006d0154029ab21f697e4110029a001f01a60075029a001f01
a5005a284b05340016019f0057014d001f0159b275a71fbd014d0057020c
004f00160145b357af1b16b8011fb275bf1f4110011d005a05c100bf0016
011c0057016400360016011b0057012e002e0016011ab357e42316b80119
b557d72116fa5ab9284b0534b216f757b8010db72916d375301fd17ab802
9ab21fce57b922ef0534b216ba75b8010bb61fb857de1fa65ab80507b3a7
169b57b80113400c2a169275a71f8857de1f6a7ab90c6201bc4011165c75
301f460b46054608550909090990b8010040320790e90790c50790590724
08220820081e081c081a08180816081408120810080e080c080a08080806
080408020800080029bf01dd003901dd004801dd00c801dd000401b01303
4b024b5342014bb0c063004b6220b0f65323b8010a515ab005234201b012
4b004b5442b0382b4bb8080052b0372b4bb007505b58b101018e59b00288
b801005458b80119b101018e851bb0124358b900010129858d1bb9000101
ff858d595901731800162b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b18
2b2b2b2b014b5079ba001f011e00072b4b5379ba0090011e00072b181db0
964b5358b0aa1d59b0324b5358b0ff1d594bb06f53205c58b901df01dd45
44b901de01dd45445958b9032101df455258b901df03214459594bb0a753
205c58b9006701de4544b9007e01de45445958b904f20067455258b90067
04f24459594bb8010b53205c58b9005b01df4544b9006101df45445958b9
0789005b455258b9005b07894459594bb8053453205c58b1d2674544b167
6745445958b9275200d2455258b900d227524459594bb8053453205c58b9
0154005b4544b15b5b45445958b925880154455258b90154258844595900
4bb03853205c58b17a7a4544b1757a45445958b9018a007a455258b9007a
018a4459594bb04753205c58b17a7a4544b15a7a45445958b901f5007a45
5258b9007a01f54459594bb06053205c58b17a7a4544b1577a45445958b9
02a8007a455258b9007a02a844595901704bb801f35358b2462146458b44
594bb803e75358b2466146458b4459b27e6746456823456044704bb801f3
5358b2462146458b44594bb803e75358b2466146458b4459b2615b464568
23456044704bb801f35358b2462146458b44594bb803e75358b246614645
8b4459ba00d201540046456823456044002b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
654201b35edb997b456523456023456560234560b08b766818b080622020
b199db4565234520b003266062636820b003266165b0db236544b0992344
20b15e7b4565234520b003266062636820b003266165b07b236544b05e23
44b1007b455458b17b406544b25e405e4523614459b35d71629345652345
6023456560234560b089766818b080622020b162714565234520b0032660
62636820b003266165b071236544b062234420b15d934565234520b00326
6062636820b003266165b093236544b05d2344b10093455458b193406544
b25d405d45236144590145695342014b5058b108004259435c58b1080042
59b3020b0a124358601b2159421610703eb0124358b93b21187e1bba0400
01a8000b2b59b00c2342b00d2342b0124358b92d412d411bba0400040000
0b2b59b00e2342b00f2342b0124358b9187e3b211bba01a80400000b2b59
b0102342b011234201012b2b2b2b2b2b00b0024568b801e84568b0408b60
b0202344b0064568b801e94568b0408b60b0222344b0004568b801eb4568
b0408b60b801ea2344005e735e7373737373735e735e7373737373735e73
5e73737373737474737374757375755e73735e755e735e755e735e755e73
5e755e732b2b5e755e735e74747573730173747374737374747475757373
74747573747575737473747374737473747300>
[9599 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 2454 29 <000200a40000018b042600030007003b401f070506040200035c0106065c
40040a05060001020306079080200430040204b90146000810f65d1aed17
39003f1aed3fed39391112393931301311331103113311a4e7e7e7030d01
19fee7fcf30119fee700>PBAAAA+ArialNarrow-Bold AddT42Char 
1 6534 72 <00020036ffe80364043e0016001e010040470f20018a0e96029606036902
790289028606850a057706760a7a0e9806046706660a6a0e038017801e02
17001e101e401e701e801ed01e06501e601e701ee01ef01e05101e011eb8
011a4020110f124f128f12036f12011f12011212151aef01ff01020181c0
0001b0000100b80216404950156015b715031215011557040b6f1a011d1a
011a570c071e122f003f00028d00dd00021e0001006101a12f173f170217
61301150116011701180119011b011f01108001140110211b80237b51261
6f080108b901f1001f10f65dedfd715ded5df4ed72715d1133003fed725d
3fed725df55d71e45d1112392f725d713cfd725d713c31300071015d5d5d
5d7101170e012322272611103736333217161107211e013332132e012322
0706170272e52ec28bc1697c7d6aa8bb6a7a01fdbf026d4d6f3203644549
32330101522fa09b8196010e010aa0878a9efecc207e8a01b47c7d414276
>PBAAAA+ArialNarrow-Bold AddT42Char 
1 7116 76 <000200790000016005ba00030007005ab10103b80228403406050607040a
6f09b009020306020700050102075b013004400450048004900405200430
04600470040420043004400450040404b90113000810f65d71723cfd3c12
3939111239395d003f3c3f3cf6ce3130131133110311331179e7e7e704b6
0104fefcfb4a0426fbda>PBAAAA+ArialNarrow-Bold AddT42Char 
1 7246 79 <000100790000016005ba00030040402902010003000a6f05b0050202035b
013000400050000320003000600070000420003000400050000400b90113
000410f65d71723cfd3c5d003f3c3f3c31303311331179e705bafa46>PBAAAA+ArialNarrow-Bold AddT42Char 
1 7334 81 <0001007700000391043e00160082404025143514021914791489149914a9
14b91406f914010f12010c0a0657120e0d0612070f0f0b0c015b2f000110
00012f004f005f008f00af00cf00df00ef000800b8020e40160b5b300c50
0c021f0c300c02200c300c400c500c040cb90113001710f65d7172edfd5d
7172ed1112392f003f3f3c10ed3f3c11393130005d01715d212311342e01
23220e011511231133153e0133321e01150391e71a472d3a5e26e7d6398f
57658b35021ea36c3a4b84b7fe1f04269c5a5a69a59c>PBAAAA+ArialNarrow-Bold AddT42Char 
1 7536 82 <00020043ffe803c6043e000d001900694037a608b60802c705d705020b01
0906060803177a04117a0b04070b0bd01b01146148075807600770079007
b007d007f007080007d0070207b80210400d0e61700080009000036f0001
00b901f1001a10f65d72edfd715ded71003f3f10ed10ed31300071015d00
5d1334123633321215140206232200131416333236353426232206437cc8
7dd2f07dcb79c2ff00ec7e59577c7e58577d02229c010080feb7dca4fef8
8501280103a1a5a6a29ea6a6>PBAAAA+ArialNarrow-Bold AddT42Char 
1 7728 83 <00020072fe6c03c4043e0010001c008640359706017606760a8706030706
5b035b0d6b036606660a7b03070100061a570507147a0b0b0f100e11020e
0117614f08680870080308b802384023100e0f5b10019d00003010012010
301040105010043010401050106010701090100610b90113001d10f6725d
713c10ed10fd3c10fd5ded11123939003f3c3fed3fed3f3c3130015d5d5d
1333153e0133321211100223222627112313141633323635342623220672
d72c905395d7d895457742e7e475534f6c6f50547004269c5460fee4fefb
feeefedd4358fde903b9b4aa9db2a9a19d00>PBAAAA+ArialNarrow-Bold AddT42Char 
1 8136 86 <00010028ffe80356043e002701ee40ca06000b0c050d870a8612851c8924
d01cd41dd31ed21fd320d3210d4a0a4d0b4d0c4d0d431d461e431f422045
21090b0d0527351e490d461d441e431f452045214727880b841d831e801f
83208321d80bd41dd31ed01fd320d32116250f390b3520451e551e721e72
1fa51eb51ec90bd90b0b1c0a1c0b1c0c1c0d141d131e101f132013215c0a
5c0b5c0c5c0d541d531e501f53205321129a0a9c0b9c0c9c0d941d931e90
1f93209321dc0adc0bdc0cdc0dd41dd31ed01fd320d321129d1601891901
3b0f010a091d1f1fb8020f40ad090b1409090bdb09010b0b890b020c0914
0923096a098d09a609b409dc09dc0b092a094909590903090b1f1d040114
17150003000112012001038201b401c40103c201d201020101031515035f
17011757115003010357250b11070f29010b1d091f04220e0d157c15022f
153f156f157f150415cf1402017301022001300160017001040161001414
2206d600019600a600b6000300000e280661221acf002201302260227022
9022b0220522b8020e400c6f0ee00e02d90e014f0e010eb901f1002810f6
72715ded5d71ed10ed7c1112392f185d717c1112392f1810ed5d7110ed5d
711112173971003f3fed5d10ed5d11392f11392f5d717212391112391217
395d717172870e2e2b0e7d10c4103c3130015d71720072725d7171711337
163332363534272627242726353436333216170726232206151417161716
171615140623222628e71e9c5352121338fee44d60bcb3abb224d91d8755
482121acc14544d3baa9d6012f2ba740332314140f4b44559494b2859431
80312723171830364d4d809ac8a7>PBAAAA+ArialNarrow-Bold AddT42Char 
1 8750 87 <00010019ffe8021a059d0018008d402e690e780e022a0e3a0e4a0e5a0e04
18140017031514001611121301161102130117030a0c0907161417077a0c
0b17b801b5402b14010f138f130213b8001406090a8b018f009f00020086
17035b16111413c6001120113011401150110511b90113001910f65df43c
103cfd3cfc5d3cf432003f3cfd713c10e43fed111239113311330f0f0f0f
3130015d5d01152311141716333237170623222627263511233533353711
02079d070e2b203c145065586a120e6a6ae70426e0fe548b16281bda2a54
4f3ab201cfe0d3a4fe89>PBAAAA+ArialNarrow-Bold AddT42Char 
1 0 0 <0002002c000001b1050000030007004db10504b80130b2000607bb013000
02000101d5b50303000a0605b80131b60303024a090704b80131b6010049
08566b182b4e10f43c4dfd3c4e10f63c4d10fd3c003f3c10fd3cfd3c10fd
3c313033112111252111212c0185feaa0128fed80500fb003504a000>PBAAAA+ArialNarrow-Bold AddT42Char 
PBAAAA+ArialNarrow-Bold /CharStrings get begin
/colon 29 def
/e 72 def
/i 76 def
/l 79 def
/n 81 def
/o 82 def
/p 83 def
/s 86 def
/t 87 def
end
PBAAAA+ArialNarrow-Bold /Encoding get
dup 58 /colon put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 115 /s put
dup 116 /t put
pop
end
%ADOEndSubsetFont
/ONVRII+ArialNarrow-Bold /PBAAAA+ArialNarrow-Bold findfont ct_VMDictPut
/ONVRII+ArialNarrow-Bold*1 
[58{/.notdef}rp /colon 42{/.notdef}rp /e 3{/.notdef}rp /i 2{/.notdef}rp /l 
/.notdef /n /o /p 2{/.notdef}rp /s /t 139{/.notdef}rp]
ONVRII+ArialNarrow-Bold nf
ONVRII+ArialNarrow-Bold*1 [6.96 0 0 -6.96 0 0 ]msf
36.456 64.37 mo
(stop:line)
[3.11803 1.90005 3.61229 3.59141 1.90005 1.69126 1.67038 3.59141 0 ]xsh
%ADOBeginSubsetFont: PBAAAA+ArialNarrow-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ONVRII+ArialNarrow-Bold gcheck setglobal} if
1 3610 45 <0001001dffe7031f05ba0011004c4029000209ef0afb0e75060911673002
cf02df020300021002200230024002500260028002b002d0020a02b8021f
b7200a300a020aa509b90184001210f6ed5dfd715ded003ffdf4e43f3130
013311140e01232226273716171633323635022cf35ab383adc401e5041d
274e4c4805bafc60e1dc76eef02081364a6bb800>ONVRII+ArialNarrow-Bold AddT42Char 
1 6078 70 <00010046ffe8037c043e001700ae4040850d950d02960e01860e89109910
0369147910791403060e06166910b502b40b050f19010081a001b0010209
0f01010801de035715070d81700c800c900c030cb8014e402b09570f0b2f
013f0102016100a12f0c3f0c020c61300d500d600d700d800d900db00dd0
0df00d09000d010db80237400cef19010f190106616f120112b901f10018
10f65ded5d5dfd715ded5df4ed5d003ffdf45de43ffdf45e5d5e5df43130
01715d5d5d5d005d01072623220615141633323637170221220235101233
32160370e3198455686857415412e346feb3d5cee9bd99c102ec32a790ab
bd9c59712ffe800144e40111011da200>ONVRII+ArialNarrow-Bold AddT42Char 
1 6334 71 <00020045ffe8039805ba0010001d006740426407740702990a01790a8906
890a035403540d64036906690a640d7906071b570b070f100001000a1557
050b1802010f0e5b019d104f0070000200b211616f080108b901f1001e10
f65dedfd5d3cedfd3c113939003fed3f3c3f3c3fed3130015d5d5d005d21
23350e0123220211101233321617113301141e0133323635342623220603
98d735904c92d9d49b497f35e7fd99315b394c706d5450709c5a5a012301
0e011001154a4a0210fc70908d47a4a5b7a19e00>ONVRII+ArialNarrow-Bold AddT42Char 
ONVRII+ArialNarrow-Bold /CharStrings get begin
/J 45 def
/c 70 def
/d 71 def
end
ONVRII+ArialNarrow-Bold /Encoding get
dup 74 /J put
dup 99 /c put
dup 100 /d put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ONVRII+ArialNarrow-Bold*1 
[58{/.notdef}rp /colon 15{/.notdef}rp /J 24{/.notdef}rp /c /d /e 
3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o /p 
2{/.notdef}rp /s /t 139{/.notdef}rp]
ONVRII+ArialNarrow-Bold nf
ONVRII+ArialNarrow-Bold*1 [6.96 0 0 -6.96 0 0 ]msf
41.016 75.77 mo
(Jcodes)
[3.11803 3.11804 3.59141 3.59141 3.11803 0 ]xsh
%ADOBeginSubsetFont: HIBBAA+ArialNarrow Initial
ct_T42Dict begin
-0.18 -0.305 0.996 1.086
 256 array 0 1 255 {1 index exch /.notdef put} for  /HIBBAA+ArialNarrow
Type42DictBegin
[<00010000000c000c000c000c4f532f326db798cb000000cc000000566376
74206ea1497a00000124000004626670676d703a7cd800000588000004bf
676c7966f89213e300002e9400002c7868656164ccd7151500000a480000
0036686865610e0905f700000a8000000024686d74789cef0fb100000aa4
0000069a6c6f63612c9c388500001140000005306d617870064c09b50000
1670000000206e616d65cd1f4f420000169000000eb27072657010dc48e5
000025440000094e67646972000000000000000000000000000102e50190
00030008059a053300000093059a05330000020b006602120805020b0606
02020203020400000287000008000000000000000000544d432000400020
202605d3fe51010d076001af2000009fdfd70000000005ba001905ba001a
05a70019042600180000ffe70000ffe80000ffe7fe69ffe805ba0019fe69
ffe802fcffee05c1001202ddffee05ba0012ffe1000002be001200000000
000000000000000000000000000000000000000000000000000000000000
0000036c036c00170000000005ba00000000000000000000000000000000
00000000000001ea00b60000009600000096000000000000000000000000
000000000000000000000000013300a30094002f00ad0048005c007c0093
008100a0009f01d7006c008000cd01690074009700a8011c0014005c0094
00a8ffb400350079007c0008000b0095009b00430051009400a4009300a6
0000009400feffe20000009700a8ff9b0097ff70ff8b009b00a8ffce001c
0055006b008202f400150019001a005f008c0094009f010f031affb0ffbf
002b007e008c009800b9ffa4ffb8000000130014006300b900f303170326
03c800020046004c0068006e0096009600a600aa00b700bdfff100050016
0048005f0093014a020502c2fff300000009001d004100460054005b0097
00b300b600c00185019f022a03b2ff740008000d000e0013002e00310066
008400a200d90118017c018f01c701d701ef022502be044effff00240032
0053006c006e0072008300930095009900a500b000b100cf00e400e500e7
015001c501c8047eff3dff4eff620005000e0013002a002d003200370055
0067008a008b009d00a300bf00e001010122012f015c016c01ab01ad01db
030703160380038c039503e2041804fdfef3ff1bff9fffceffd800010002
000300130013001700240028002b002f003000370038003f0047004b0052
0058005c005e0066006a006c0073007c007d007e008000840086008e0090
0094009d009f00a000a000a200a300aa00aa00aa00b900b900ba00bb00c5
00d400dc00f300ff0108011201150118013c014601560156015c01720176
017901860188018d018f019801ac01b601b601c101cf01db020502070212
0223023e02c502e102e30310032b033c035a03f10412044e049c04d60782
fe53fea4fec9ff8100020008000d0012001b0039003a004b005200520056
0058005c006300670068006c006c00750081008700880089008a008a008f
009400a100a300a300ae00b400b400c400cd00da00e500eb00fd01220127
0127012a0136013601450146014d014e01540155015c016b016c01850199
01a701c701d401d901eb01f601f601fb02010209021b021e021f0220022c
02420245024b024d025a025e0270027302820295029702a002ef02f402f5
030f03180322032e0340034703470361036b0381038103c1041004150464
0465048404b004d6050005440552055905af05f0060a060c061106340653
068f06f20823009500a000940000000000000000000000000000026a01af
019b00f400d400eb00c202bd0048002c00cd005a00640084016900fd0368
006d01940175fe8b03ff03ff02b600cd033002f400020458002d039501e5
00ae0053031c030705e9036105f0021a0519039504d5016702cb04080122
01c0014c0000403b3c3b3a39383734333231302f2e2d2c2b2a2928272625
24232221201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a090807
060504030201002c4523466020b02660b004262348482d2c452346236120
b02661b004262348482d2c45234660b0206120b04660b004262348482d2c
4523462361b0206020b02661b02061b004262348482d2c45234660b04061
20b06660b004262348482d2c4523462361b0406020b02661b04061b00426
2348482d2c0110203c003c2d2c20452320b0cd442320b8015a51582320b0
8d44235920b0ed51582320b04d44235920b0042651582320b00d44235921
212d2c20204518684420b001602045b04676688a4560442d2c01b10b0a43
2343650a2d2c00b10a0b4323430b2d2c00b0462370b101463e01b0462370
b10246453ab10200080d2d2c45b04a234445b04923442d2c2045b0032545
6164b050515845441b2121592d2cb00143632362b0002342b00f2b2d2c20
45b0004360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12c
c08a8cb8100062602b0c642364615c58b00361592d2c45b0112bb0472344
b0477ae4182d2cb801a65458b00943b801005458b9004aff80b149804444
59592d2cb01243588745b0112bb0472344b0477ae41b038a45186920b047
23448a8a8720b0a05158b0112bb0472344b0477ae41b21b0477ae4595918
2d2c2d2c4b52582145441b23458c20b00325455258441b212159592d2c01
182f2d2c20b0032545b049234445b04a23444565234520b00325606a20b0
09234223688a6a606120b01a8ab000527921b21a4a40b9ffe0004a45208a
54582321b03f1b235961441cb114008a5279b34940204945208a54582321
b03f1b235961442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d
4323430b2d2cb10c0d432343650b2d2cb10e0f432343650b2d2cb1101143
2343650b2d2c4b525845441b2121592d2c0120b003252349b04060b02063
20b000525823b002253823b002256538008a63381b212121212159012d2c
4569b00943608a103a2d2c01b005251023208af500b0016023edec2d2c01
b005251023208af500b0016123edec2d2c01b0062510f500edec2d2c20b0
01600110203c003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c
00b00743b006430b2d2c3eb02a2a2d2c352d2c76b04b23701020b04b4520
b0005058b00161593a2f182d2c21210c6423648bb84000622d2c21b08051
580c6423648bb82000621bb200402f2b59b002602d2c21b0c051580c6423
648bb81555621bb200802f2b59b002602d2c0c6423648bb8400062602321
2d2cb4000100000015b00826b00826b00826b008260f10161345683ab001
162d2cb4000100000015b00826b00826b00826b008260f1016134568653a
b001162d2c4523204520b10405258a505826618a8b1b26608a8c59442d2c
462346608a8a462320468a608a61b8ff8062232010238ab14b4b8a704560
20b0005058b00161b8ffc08b1bb0408c5968013a2d2cb0332bb02a2a2d2c
b0134358031b02592d2cb0134358021b03592d2c462346608a8a46232046
8a608a61b8ff8062232010238ab14b4b8a70456020b0005058b00161b8ff
ba8b1bb0468c59b0106068013a2d2c4b53234b515a5820458a60441b2121
592d2c4b53234b515a58381b2121592d2c19c5182d000001000000026666
36e0ae035f0f3cf5001b080000000000a31fb8bd00000000c3fdaab6fe8b
fd8c07ff08b00000000b000100000000000000010000077cfe4e0000086b
fe8bfe8707ff0001000000000000000000000000000000b601d3002c0000
000001d3000001d3000001d300940254004c0000000003a6003900000000
0000000000000000022f0065022f003d000000000000000001d3008e022f
003501d3009b0000000003a6004303a600b403a6002f03a6004403a60013
03a6004303a6003c03a6004d03a6004203a6004301d3009b000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000402008d000000000000000001d300a0000000000000
0000000000000577007d0000000000000000000000000000000000000000
000000000000000000000000046000080000000000000000000000000000
000000000000000000000000000000000000000000000000000003a6003a
03a6006b0348004103a6003703a6003a01d3001303a6003303a6006c0175
006c0000000003480070017500680577006e03a6006c03a6003503a6006c
00000000022f006c0348003401d3002103a600690000000004bc00020000
00000348001b000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000068f00c40000000000000000
0000000000000000000000000000000000000000022f0044022f003a0000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000022002200220022006a00bf00bf01ab01ab01ab01ab
01ef022e022e022e0267028b02ad02ad030c035203c6047504e10578061f
0656071a07bf07f307f307f307f307f307f307f307f307f307f307f307f3
083e083e083e0878087808780878095f095f095f095f095f095f095f095f
095f09e209e209e209e209e209e209e209e209e209e209e20aa90b460bc7
0c5a0cd70d4a0e230e810ec10ec10f4a0f77101a107810d61172117211e2
12ac131a137d137d14591459152d152d152d152d152d152d152d152d152d
152d152d152d152d152d152d152d152d152d152d152d152d152d152d152d
152d152d152d152d152d152d152d152d152d152d152d152d152d152d152d
152d152d152d152d152d152d152d152d152d152d152d152d152d152d152d
152d152d152d152d152d152d152d152d152d152d152d152d152d152d152d
152d152d152d152d152d152d152d152d152d152d15671567156715671567
15671567156715d4163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c00010000029700360003000000000002
0010002f003d00000364094e000000000000003102520001000000000000
003500000001000000000001000c00350001000000000002000700420001
000000000003001b00350001000000000004000c00350001000000000005
000c00500001000000000006000b005c0001000000000007005d00670001
0000000000080018007f0001000000000009002100c4000100000000000d
015500e50003000104030002000c023a00030001040500020010024a0003
000104060002000c025a0003000104070002001002660003000104080002
001002760003000104090000006a02860003000104090001001802f00003
000104090002000e030a0003000104090003003602f00003000104090004
001802f000030001040900050018032600030001040900060016033e0003
00010409000700ba03540003000104090008003003840003000104090009
0042040e000300010409000a04fc0450000300010409000d02aa094c0003
000104090010000a04d00003000104090011000c02fc00030001040a0002
000c023a00030001040b000200100bf600030001040c0002000c023a0003
0001040e0002000c0c060003000104100002000e0c160003000104130002
00120c240003000104140002000c023a00030001041500020010023a0003
000104160002000c023a0003000104190002000e0c3600030001041b0002
00100c0600030001041d0002000c023a00030001041f0002000c023a0003
000104240002000e0c4400030001042d0002000e0c5200030001080a0002
000c023a0003000108160002000c023a000300010c0a0002000c023a0003
00010c0c0002000c023aa9203230303820546865204d6f6e6f7479706520
436f72706f726174696f6e2e20416c6c2052696768747320526573657276
65642e417269616c204e6172726f7720526567756c6172203a2032303038
56657273696f6e20322e3430417269616c4e6172726f77417269616c2069
7320612074726164656d61726b206f6620546865204d6f6e6f7479706520
436f72706f726174696f6e20696e2074686520556e697465642053746174
657320616e642f6f72206f7468657220636f756e74726965732e526f6269
6e204e6963686f6c61732c205061747269636961205361756e6465727359
6f75206d617920757365207468697320666f6e7420746f20646973706c61
7920616e64207072696e7420636f6e74656e74206173207065726d697474
656420627920746865206c6963656e7365207465726d7320666f72207468
652070726f6475637420696e207768696368207468697320666f6e742069
7320696e636c756465642e20596f75206d6179206f6e6c79202869292065
6d626564207468697320666f6e7420696e20636f6e74656e742061732070
65726d69747465642062792074686520656d62656464696e672072657374
72696374696f6e7320696e636c7564656420696e207468697320666f6e74
3b20616e6420286969292074656d706f726172696c7920646f776e6c6f61
64207468697320666f6e7420746f2061207072696e746572206f72206f74
686572206f75747075742064657669636520746f2068656c70207072696e
7420636f6e74656e742e004e006f0072006d0061006c006e0079006f0062
0079010d0065006a006e00e9006e006f0072006d0061006c005300740061
006e0064006100720064039a03b103bd03bf03bd03b903ba03ac00a90020
003200300030003800200054006800650020004d006f006e006f00740079
0070006500200043006f00720070006f0072006100740069006f006e002e
00200041006c006c00200052006900670068007400730020005200650073
00650072007600650064002e0041007200690061006c0020004e00610072
0072006f007700200052006500670075006c006100720020003a00200032
00300030003800560065007200730069006f006e00200032002e00340030
0041007200690061006c004e006100720072006f00770041007200690061
006c00200069007300200061002000740072006100640065006d00610072
006b0020006f006600200054006800650020004d006f006e006f00740079
0070006500200043006f00720070006f0072006100740069006f006e0020
0069006e002000740068006500200055006e006900740065006400200053
0074006100740065007300200061006e0064002f006f00720020006f0074
00680065007200200063006f0075006e00740072006900650073002e0052
006f00620069006e0020004e006900630068006f006c00610073002c0020
005000610074007200690063006900610020005300610075006e00640065
00720073004d006f006e006f007400790070006500200044007200610077
0069006e00670020004f0066006600690063006500200031003900380032
002e0020004100200063006f006e00740065006d0070006f007200610072
0079002000730061006e0073002000730065007200690066002000640065
007300690067006e002c00200041007200690061006c00200063006f006e
007400610069006e00730020006d006f00720065002000680075006d0061
006e00690073007400200063006800610072006100630074006500720069
007300740069006300730020007400680061006e0020006d0061006e0079
0020006f0066002000690074007300200070007200650064006500630065
00730073006f0072007300200061006e0064002000610073002000730075
006300680020006900730020006d006f0072006500200069006e00200074
0075006e00650020007700690074006800200074006800650020006d006f
006f00640020006f006600200074006800650020006c0061007300740020
00640065006300610064006500730020006f006600200074006800650020
007400770065006e00740069006500740068002000630065006e00740075
00720079002e00200054006800650020006f0076006500720061006c006c
002000740072006500610074006d0065006e00740020006f006600200063
0075007200760065007300200069007300200073006f0066007400650072
00200061006e0064002000660075006c006c006500720020007400680061
006e00200069006e0020006d006f0073007400200069006e006400750073
0074007200690061006c002d007300740079006c0065002000730061006e
0073002000730065007200690066002000660061006300650073002e0020
005400650072006d0069006e0061006c0020007300740072006f006b0065
0073002000610072006500200063007500740020006f006e002000740068
006500200064006900610067006f006e0061006c00200077006800690063
0068002000680065006c0070007300200074006f00200067006900760065
002000740068006500200066006100630065002000610020006c00650073
00730020006d0065006300680061006e006900630061006c002000610070
00700065006100720061006e00630065002e00200041007200690061006c
00200069007300200061006e002000650078007400720065006d0065006c
007900200076006500720073006100740069006c0065002000660061006d
0069006c00790020006f0066002000740079007000650066006100630065
0073002000770068006900630068002000630061006e0020006200650020
00750073006500640020007700690074006800200065007100750061006c
0020007300750063006300650073007300200066006f0072002000740065
00780074002000730065007400740069006e006700200069006e00200072
00650070006f007200740073002c002000700072006500730065006e0074
006100740069006f006e0073002c0020006d006100670061007a0069006e
006500730020006500740063002c00200061006e006400200066006f0072
00200064006900730070006c00610079002000750073006500200069006e
0020006e006500770073007000610070006500720073002c002000610064
0076006500720074006900730069006e006700200061006e006400200070
0072006f006d006f00740069006f006e0073002e0059006f00750020006d
0061007900200075007300650020007400680069007300200066006f006e
007400200074006f00200064006900730070006c0061007900200061006e
00640020007000720069006e007400200063006f006e00740065006e0074
0020006100730020007000650072006d0069007400740065006400200062
007900200074006800650020006c006900630065006e0073006500200074
00650072006d007300200066006f00720020007400680065002000700072
006f006400750063007400200069006e0020007700680069006300680020
007400680069007300200066006f006e007400200069007300200069006e
0063006c0075006400650064002e00200059006f00750020006d00610079
0020006f006e006c0079002000280069002900200065006d006200650064
0020007400680069007300200066006f006e007400200069006e00200063
006f006e00740065006e00740020006100730020007000650072006d0069
0074007400650064002000620079002000740068006500200065006d0062
0065006400640069006e0067002000720065007300740072006900630074
0069006f006e007300200069006e0063006c007500640065006400200069
006e0020007400680069007300200066006f006e0074003b00200061006e
006400200028006900690029002000740065006d0070006f007200610072
0069006c007900200064006f0077006e006c006f00610064002000740068
0069007300200066006f006e007400200074006f00200061002000700072
0069006e0074006500720020006f00720020006f00740068006500720020
006f00750074007000750074002000640065007600690063006500200074
006f002000680065006c00700020007000720069006e007400200063006f
006e00740065006e0074002e004e006f0072006d00610061006c0069004e
006f0072006d00e1006c006e0065004e006f0072006d0061006c00650053
00740061006e00640061006100720064041e0431044b0447043d044b0439
004e0061007600610064006e006f0041007200720075006e007400610000
400b6f3201dbbb501f6d9c501fba022000600800b21fc960b80800b21f5f
6041290800001f0020022e0001002f0171009f017100af017100bf017100
df017100ef017100ff017100070000017100100171005f0171007f017100
8f017100af0171000600000171004f0171009f01710003021c4030f7361f
30f740f750f770f780f790f7a0f7c0f70810f740f76ff7d0f70400f710f7
30f750f780f7050910f760f702394f418d020b0090020b00a0020b00b002
0b00c0020b00e0020b00060020020b00010060021a0090021a0002001002
1a003f021a005f021a006f021a007f021a008f021a009f021a00df021a00
08001f021a0001003002190050021900600219008002190090021900a002
1900b0021900d0021900e0021900f00219000a0000021900100219002002
19000300b0021900c002190002006f0100007f0100008f0100009f010000
af010000bf0100000600400100000100bf010000cf01000002004f016c00
af016c00bf016c00ff016c0004002f016c009f016c00b0016c0003001f01
6c002f016c005f016c00a0016c0004002002110030021100400211005002
110004003f0211004002110002004f021100600211007002110080021140
1f041f054f058f05bf05041f044f048f04bf04043f05af05023f04af0402
0d09b80800b21f0b09b8080040411f09000910092009300904399009a009
b009c009d009e009f00907090f071f072f073f074f075f076f0707399f07
af07bf07cf07df07ef07ff070704052d1f0503b80800401a1f090f031f03
2f0303399f03af03bf03cf03df03ef03ff030778b8014b40630178930178
ed01787d01785901787b017887017857011f194f19021f184f1802001910
193f194019701905001810183f18401870180509001901001801085f158f
15025f148f1402001510153f15401504001410143f144014040900150100
140108c3b8011bb2051fc3bc011bffe40005001601c6b2ae031fb801c6b4
ae07031658b8014fb330081658b8014f400d300816004646000000121208
40b801f6b50009597b3e1fb801a1b279211fb8019fb279541fbc0199013f
029a001f014eb2791c1fb8014cb2793a1fb80149b279401fb80147b279de
1fb80146b279de1f410f01410060029a001f013e005d07f301bc00160139
005d0121004000160108400d79321fef79671fee796f1fea5db8029ab61f
c979301fc681b8029ab21fba5db8029ab61fb379471fb179b8029ab21faf
81b918890534b616a579401f9c5db80369b3bf169b5db80121b340169560
b8029ab21f8879b8014db21f8481b8029ab21f8279b8014db21f7a5d4109
029a001f0078013f029a001f0074013f0534b21f715db8010640093a1670
5dea34166879b8014db71f665dc12b16635db80142b347165f60410c0534
001f019d00590534001f019a007b0564010b0016014bb259671f4116013d
005703fe00de0016013800570108003a001601060087029a001f01050057
02a800940016010400570267b78616f059281fed7bb91af90534b216ec87
b90c95029a400b16c759de1fb459541f9457b8029ab21f9357b80300b3a7
167d57b8029ab21f6d7bb8029ab21f6c57b8029a40161f64592a1f5c57fe
3816460346044605551109110990bb01d100070090016f403d0790cc0790
a607907e079065079061079056079055072408220820081e081c081a0818
0816081408120810080e080c080a08080806080408020800080001b01303
4b024b5342014bb0c063004b6220b0f65323b8010a515ab005234201b012
4b004b544218b0382b4bb8080052b0372b4bb007505b58b101018e59b002
88b801005458b80119b101018e851bb0124358b900010122858d1bb90001
01ff858d595900162b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b182b2b
2b2b2b2b2b2b2b014b5079b9001f0152b6071ff2071f69072b2b2b4b5379
b900900152b60790f2079069072b2b2b181db0964b5358b0aa1d59b0324b
5358b0ff1d594bb06f53205c58b901f801f64544b901f701f645445958b9
020001f8455258b901f802004459594bb8010b53205c58b9006001f74544
b9007901f745445958b905320060455258b9006005324459594bb8014d53
205c58b9005d01f84544b9006701f845445958b90600005d455258b9005d
06004459594bb8029a53205c58b181674544b1676745445958b90c420081
455258b900810c424459594bb8053453205c58b9013f005d4544b15d5d45
445958b917e2013f455258b9013f17e2445959004bb03653205c58b15757
4544b1595745445958b1f557455258b157f54459594bb04a53205c58b157
574544b17b5745445958b901520057455258b9005701524459594bb0bf53
205c58b157574544b1875745445958b9036f0057455258b90057036f4459
5901704bb801f35358b2462146458b44594bb803e75358b2466146458b44
59b2796046456823456044704bb801f35358b2462146458b44594bb803e7
5358b2466146458b4459b2675d46456823456044704bb801f35358b24621
46458b44594bb803e75358b2466146458b4459ba0081013f004645682345
6044002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b6542b35ece8ba0456523456023456560234560b08b766818b0806220
20b18bce4565234520b003266062636820b003266165b0ce236544b08b23
4420b15ea04565234520b003266062636820b003266165b0a0236544b05e
2344b100a0455458b1a0406544b25e405e4523614459b362866f99456523
456023456560234560b089766818b080622020b16f864565234520b00326
6062636820b003266165b086236544b06f234420b162994565234520b003
266062636820b003266165b099236544b0622344b10099455458b1994065
44b262406245236144590145695342014b5058b108004259435c58b10800
4259b3020b0a124358601b2159421610703eb0124358b93b21187e1bba04
0001a8000b2b59b00c2342b00d2342b0124358b92d412d411bba04000400
000b2b59b00e2342b00f2342b0124358b9187e3b211bba01a80400000b2b
59b0102342b011234201012b2b2b2b2b2b005e73735e737374745e73735e
737374747575757575757575755e735e2b2b755e735e755e735e2b2b7373
74740175747375747375747375747375747375745e735e7574732b757473
732b2b2b2b2b00b0024568b8020c4568b0408b60b0202344b0064568b802
0d4568b0408b60b022234473000000>
[11385 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 3 <> HIBBAA+ArialNarrow AddT42Char 
1 854 11 <00010065fe5101f205d3000c004c4012160b260b020605110c001300700c
0570060cba020f0006020f401a0a8420038f039f03af03bf03053f037f03
025f039f030203920d10f672715dfde4e410ed10fd003f3c3f3c3130015d
01260211100133060a0115101301886eb501236a705531f6fe51ac01f801
1f01e601d9ebfefdfeca9dfe20fe1f00>HIBBAA+ArialNarrow AddT42Char 
1 4070 41 <0001008d000003b805ba0009006c401c060559078f08af08bf0803080800
0304590201020900080720060106b80130400a03cf02ef0202bf020102b8
0172401400040901096000001000021000ef0002df000100b90192000a10
f672715ded3c103c10fd715d3cf45d3c003f3c3f3cfd3c12392f5d3cfd3c
3130331121152111211521118d032bfd740234fdcc05baadfe3aadfd6600
>HIBBAA+ArialNarrow AddT42Char 
1 5060 68 <0002003affe8035c043e0022003000fc40299913a90fa827b90fb8270501
080009000a033032012a043a0475138513041d0800112c000a100a020aba
013d0025012d4009000c01000c100c020cb8013d404c402350236f23af23
bf23052323180315911f142f143f14df140414f41157180720210a2c5703
0b217a2020321e30230c031b1e0dfb1e5d000010009f0003000030006000
7000d000e0000600b80200401006147a159029675006010f0680060206b9
0208003110f6725dedf4ed10fd5d71ede5103c17391112392fed003fed3f
3c3fedfd5de41112392f5ded5d71f4ed5d111239313043794012191b0e10
0f2610190d55011a1b0e1a1155012b01103c2b2b8181015d7100715d250e
0123222635343e0137363f0134272623220607273e0133321e011d011416
1723260306070e0215141633323e013502a44aa05688a24c8486b4540127
3772676618911fbdb0899c29131c9a171351a05d4a295e534f8140834d4e
a48b5c8e50131a242e6d2c40557518ab9c679892f0fc833e3701de281c10
294b314c5b528983>HIBBAA+ArialNarrow AddT42Char 
1 7426 76 <0002006c000000ff05ba000300070059403300093009025009b009020003
f0020f0101010006050607040a02030306075d04010000050530045004a0
040390040110040104b90211000810f65d72713c103c103c10fd3c3c103c
003f3c3f3c3f5d3cfd3c3130015d7113353315031133116c93939304ebcf
cffb150426fbda00>HIBBAA+ArialNarrow AddT42Char 
1 8432 82 <00020035ffe80365043e000b0017006840137f19013708155703070f5709
0b126700060106b80219b20c6700b90100001810f6edfd5ded003fed3fed
31304379402a011710081255010e0a0c5500140412550116020c55001107
0f55000d0b0f5500130515550117011555012b2b2b2b012b2b2b2b81015d
13101233321211100223220213141633323635342623220635e7b1aeeae6
b2afe997966f6895966f6994021301130118fee8fef8fee2fee801190112
cec9cbcccdc9ca00>HIBBAA+ArialNarrow AddT42Char 
1 8620 83 <0002006cfe690360043e0011001d00d940267f1f011840150d1b40061b25
08100d03151b570607010615570d0b000e10120303021118670ab8021a40
290002731101115d300050006000700080009000a000b000c000d000f000
0b1000400090000310000100b90211001e10f65d7271ed3c10e410fded11
121739003f3fed3f3fed1139123931304379401a161a070c0825160c1855
011a07185501170b15550019091b55012b2b012b2b2b8181004954794010
1c1d04051d041b69051c05126900040301103c2b002b818100495479400e
0e14130f156904140e1269000f1001103c2b002b81015d131133153e0133
321e0115100223222627110314163332363534262322066c87327a4f67a6
65e39944762b0e8a625e8e8a635992fe6905bd8a564c7af9affef1fedb46
40fdfb03a4cec3cad3d0c8d7>HIBBAA+ArialNarrow AddT42Char 
1 8932 85 <0001006c00000245043e001100a4400f68097809022240060b03010b09ec
08ba0185000b014b4009060702010611000a09b8010040097008d008023f
080108b801ad40251103025d0110115d01100001300050006000a000b000
c000d00007000070009000d0000400b90211001210f672715d3cfd3c10fd
3c10f4715de4003f3c3f3c3fedfded11123931300049547940160c0f0405
0e0f0d0f02060f040b69050c05106900040301103c2b002b2a81815d3311
33153e013332170726232206070615116c853355354a4d3237342f4e101c
0426a170493aa727423b6774fdd4>HIBBAA+ArialNarrow AddT42Char 
1 9156 86 <00010034ffe70307043e0028011a40530b1004251b1014257422cb10c614
d702dc11d714e702ea11e7140d17220101212b0d20223b0d322145217402
85028b0d8a1895029b0d9a189722a502aa18b502ba18c80dc722c728da0d
e722f90c180a212020b8014940370c0a140c0c0a0c202103290a380a460a
560a6b0a7b0ac60ad40af40a095b0a6b0a7a0a890a9b0afd0a06590a010a
0a1904179180160116b801a9403619571207019110000100f40457270b17
7a5f160116902467100701000720076f07df070410074007a007b007c007
d007e007f0070807b8016c40161c670f90017a7f00af00bf00cf00df00ef
000600fe2910f45dedf4edf45d7172fdf472ed003fedfd5de43fedfd5de4
1112392f72715d1739870e2e2b0e7d10c4012e3130005d01715d13371e01
33323635342726272e0235343633321e0117072623220615141716171e02
151406232034920d746060692d1f77ac7440ae9a61934e0f9014a9605e2d
1b85b76c3cc1a7fec7013d1c706d5f493f231824354a7c4f88aa46766e18
ae4d3c3b22142c3b45775298bc00>HIBBAA+ArialNarrow AddT42Char 
1 0 0 <0002002c000001b1050000030007001b400b070104010005030904000810
d6cd10d6cd002f33cd2fcd313033112111252111212c0185feaa0128fed8
0500fb003504a000>HIBBAA+ArialNarrow AddT42Char 
HIBBAA+ArialNarrow /CharStrings get begin
/space 3 def
/parenleft 11 def
/F 41 def
/a 68 def
/i 76 def
/o 82 def
/p 83 def
/r 85 def
/s 86 def
end
HIBBAA+ArialNarrow /Encoding get
dup 32 /space put
dup 40 /parenleft put
dup 70 /F put
dup 97 /a put
dup 105 /i put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
pop
end
%ADOEndSubsetFont
/ONVRIJ+ArialNarrow /HIBBAA+ArialNarrow findfont ct_VMDictPut
/ONVRIJ+ArialNarrow*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft 29{/.notdef}rp /F 26{/.notdef}rp /a 
7{/.notdef}rp /i 5{/.notdef}rp /o /p /.notdef /r /s 
140{/.notdef}rp]
ONVRIJ+ArialNarrow nf
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
69.96 83.35 mo
(For pairs \()
[3.59141 3.11803 1.90005 1.69126 3.11803 3.11803 1.19717 1.90005 2.89539 1.91398 0 ]xsh
%ADOBeginSubsetFont: HIBBAA+ArialNarrow AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ONVRIJ+ArialNarrow gcheck setglobal} if
1 3966 29 <0002009b000001430426000300070043402706640403640106040a010002
0303060768050404c000f00002a0000170008000020049087585182b4e10
f472715d3c103c4dfd3c3c103c103c003f3fed10ed313013353315033533
159ba8a8a80359cdcdfca7cdcd00>ONVRIJ+ArialNarrow AddT42Char 
1 7828 79 <00010068000000fb05ba00030041402a000530054005035005b005020100
000a02035d0130005000a00003900001100020003000400050000500b901
35000410f45d72713cfd3c003f3f3130015d7133113311689305bafa4600
>ONVRIJ+ArialNarrow AddT42Char 
ONVRIJ+ArialNarrow /CharStrings get begin
/colon 29 def
/l 79 def
end
ONVRIJ+ArialNarrow /Encoding get
dup 58 /colon put
dup 108 /l put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ONVRIJ+ArialNarrow*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft 17{/.notdef}rp /colon 11{/.notdef}rp /F 
26{/.notdef}rp /a 7{/.notdef}rp /i 2{/.notdef}rp /l 2{/.notdef}rp /o 
/p /.notdef /r /s 140{/.notdef}rp]
ONVRIJ+ArialNarrow nf
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
96.384 83.35 mo
(s:l)
[2.8745 1.67038 0 ]xsh
%ADOBeginSubsetFont: QJJAAA+ArialNarrow Initial
ct_T42Dict begin
-0.18 -0.305 0.996 1.086
 256 array 0 1 255 {1 index exch /.notdef put} for  /QJJAAA+ArialNarrow
Type42DictBegin
[<00010000000c000c000c000c4f532f326db798cb000000cc000000566376
74206ea1497a00000124000004626670676d703a7cd800000588000004bf
676c7966f89213e300002e9400002c7868656164ccd7151500000a480000
0036686865610e0905f700000a8000000024686d74789cef0fb100000aa4
0000069a6c6f63612c9c388500001140000005306d617870064c09b50000
1670000000206e616d65cd1f4f420000169000000eb27072657010dc48e5
000025440000094e67646972000000000000000000000000000102e50190
00030008059a053300000093059a05330000020b006602120805020b0606
02020203020400000287000008000000000000000000544d432000400020
202605d3fe51010d076001af2000009fdfd70000000005ba001905ba001a
05a70019042600180000ffe70000ffe80000ffe7fe69ffe805ba0019fe69
ffe802fcffee05c1001202ddffee05ba0012ffe1000002be001200000000
000000000000000000000000000000000000000000000000000000000000
0000036c036c00170000000005ba00000000000000000000000000000000
00000000000001ea00b60000009600000096000000000000000000000000
000000000000000000000000013300a30094002f00ad0048005c007c0093
008100a0009f01d7006c008000cd01690074009700a8011c0014005c0094
00a8ffb400350079007c0008000b0095009b00430051009400a4009300a6
0000009400feffe20000009700a8ff9b0097ff70ff8b009b00a8ffce001c
0055006b008202f400150019001a005f008c0094009f010f031affb0ffbf
002b007e008c009800b9ffa4ffb8000000130014006300b900f303170326
03c800020046004c0068006e0096009600a600aa00b700bdfff100050016
0048005f0093014a020502c2fff300000009001d004100460054005b0097
00b300b600c00185019f022a03b2ff740008000d000e0013002e00310066
008400a200d90118017c018f01c701d701ef022502be044effff00240032
0053006c006e0072008300930095009900a500b000b100cf00e400e500e7
015001c501c8047eff3dff4eff620005000e0013002a002d003200370055
0067008a008b009d00a300bf00e001010122012f015c016c01ab01ad01db
030703160380038c039503e2041804fdfef3ff1bff9fffceffd800010002
000300130013001700240028002b002f003000370038003f0047004b0052
0058005c005e0066006a006c0073007c007d007e008000840086008e0090
0094009d009f00a000a000a200a300aa00aa00aa00b900b900ba00bb00c5
00d400dc00f300ff0108011201150118013c014601560156015c01720176
017901860188018d018f019801ac01b601b601c101cf01db020502070212
0223023e02c502e102e30310032b033c035a03f10412044e049c04d60782
fe53fea4fec9ff8100020008000d0012001b0039003a004b005200520056
0058005c006300670068006c006c00750081008700880089008a008a008f
009400a100a300a300ae00b400b400c400cd00da00e500eb00fd01220127
0127012a0136013601450146014d014e01540155015c016b016c01850199
01a701c701d401d901eb01f601f601fb02010209021b021e021f0220022c
02420245024b024d025a025e0270027302820295029702a002ef02f402f5
030f03180322032e0340034703470361036b0381038103c1041004150464
0465048404b004d6050005440552055905af05f0060a060c061106340653
068f06f20823009500a000940000000000000000000000000000026a01af
019b00f400d400eb00c202bd0048002c00cd005a00640084016900fd0368
006d01940175fe8b03ff03ff02b600cd033002f400020458002d039501e5
00ae0053031c030705e9036105f0021a0519039504d5016702cb04080122
01c0014c0000403b3c3b3a39383734333231302f2e2d2c2b2a2928272625
24232221201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a090807
060504030201002c4523466020b02660b004262348482d2c452346236120
b02661b004262348482d2c45234660b0206120b04660b004262348482d2c
4523462361b0206020b02661b02061b004262348482d2c45234660b04061
20b06660b004262348482d2c4523462361b0406020b02661b04061b00426
2348482d2c0110203c003c2d2c20452320b0cd442320b8015a51582320b0
8d44235920b0ed51582320b04d44235920b0042651582320b00d44235921
212d2c20204518684420b001602045b04676688a4560442d2c01b10b0a43
2343650a2d2c00b10a0b4323430b2d2c00b0462370b101463e01b0462370
b10246453ab10200080d2d2c45b04a234445b04923442d2c2045b0032545
6164b050515845441b2121592d2cb00143632362b0002342b00f2b2d2c20
45b0004360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12c
c08a8cb8100062602b0c642364615c58b00361592d2c45b0112bb0472344
b0477ae4182d2cb801a65458b00943b801005458b9004aff80b149804444
59592d2cb01243588745b0112bb0472344b0477ae41b038a45186920b047
23448a8a8720b0a05158b0112bb0472344b0477ae41b21b0477ae4595918
2d2c2d2c4b52582145441b23458c20b00325455258441b212159592d2c01
182f2d2c20b0032545b049234445b04a23444565234520b00325606a20b0
09234223688a6a606120b01a8ab000527921b21a4a40b9ffe0004a45208a
54582321b03f1b235961441cb114008a5279b34940204945208a54582321
b03f1b235961442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d
4323430b2d2cb10c0d432343650b2d2cb10e0f432343650b2d2cb1101143
2343650b2d2c4b525845441b2121592d2c0120b003252349b04060b02063
20b000525823b002253823b002256538008a63381b212121212159012d2c
4569b00943608a103a2d2c01b005251023208af500b0016023edec2d2c01
b005251023208af500b0016123edec2d2c01b0062510f500edec2d2c20b0
01600110203c003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c
00b00743b006430b2d2c3eb02a2a2d2c352d2c76b04b23701020b04b4520
b0005058b00161593a2f182d2c21210c6423648bb84000622d2c21b08051
580c6423648bb82000621bb200402f2b59b002602d2c21b0c051580c6423
648bb81555621bb200802f2b59b002602d2c0c6423648bb8400062602321
2d2cb4000100000015b00826b00826b00826b008260f10161345683ab001
162d2cb4000100000015b00826b00826b00826b008260f1016134568653a
b001162d2c4523204520b10405258a505826618a8b1b26608a8c59442d2c
462346608a8a462320468a608a61b8ff8062232010238ab14b4b8a704560
20b0005058b00161b8ffc08b1bb0408c5968013a2d2cb0332bb02a2a2d2c
b0134358031b02592d2cb0134358021b03592d2c462346608a8a46232046
8a608a61b8ff8062232010238ab14b4b8a70456020b0005058b00161b8ff
ba8b1bb0468c59b0106068013a2d2c4b53234b515a5820458a60441b2121
592d2c4b53234b515a58381b2121592d2c19c5182d000001000000026666
36e0ae035f0f3cf5001b080000000000a31fb8bd00000000c3fdaab6fe8b
fd8c07ff08b00000000b000100000000000000010000077cfe4e0000086b
fe8bfe8707ff0001000000000000000000000000000000b601d3002c0000
000001d3000001d3000001d300940254004c0000000003a6003900000000
0000000000000000022f0065022f003d000000000000000001d3008e022f
003501d3009b0000000003a6004303a600b403a6002f03a6004403a60013
03a6004303a6003c03a6004d03a6004203a6004301d3009b000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000402008d000000000000000001d300a0000000000000
0000000000000577007d0000000000000000000000000000000000000000
000000000000000000000000046000080000000000000000000000000000
000000000000000000000000000000000000000000000000000003a6003a
03a6006b0348004103a6003703a6003a01d3001303a6003303a6006c0175
006c0000000003480070017500680577006e03a6006c03a6003503a6006c
00000000022f006c0348003401d3002103a600690000000004bc00020000
00000348001b000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000068f00c40000000000000000
0000000000000000000000000000000000000000022f0044022f003a0000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000022002200220022006a00bf00bf01ab01ab01ab01ab
01ef022e022e022e0267028b02ad02ad030c035203c6047504e10578061f
0656071a07bf07f307f307f307f307f307f307f307f307f307f307f307f3
083e083e083e0878087808780878095f095f095f095f095f095f095f095f
095f09e209e209e209e209e209e209e209e209e209e209e20aa90b460bc7
0c5a0cd70d4a0e230e810ec10ec10f4a0f77101a107810d61172117211e2
12ac131a137d137d14591459152d152d152d152d152d152d152d152d152d
152d152d152d152d152d152d152d152d152d152d152d152d152d152d152d
152d152d152d152d152d152d152d152d152d152d152d152d152d152d152d
152d152d152d152d152d152d152d152d152d152d152d152d152d152d152d
152d152d152d152d152d152d152d152d152d152d152d152d152d152d152d
152d152d152d152d152d152d152d152d152d152d15671567156715671567
15671567156715d4163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c163c163c163c163c163c163c163c163c
163c163c163c163c163c163c163c00010000029700360003000000000002
0010002f003d00000364094e000000000000003102520001000000000000
003500000001000000000001000c00350001000000000002000700420001
000000000003001b00350001000000000004000c00350001000000000005
000c00500001000000000006000b005c0001000000000007005d00670001
0000000000080018007f0001000000000009002100c4000100000000000d
015500e50003000104030002000c023a00030001040500020010024a0003
000104060002000c025a0003000104070002001002660003000104080002
001002760003000104090000006a02860003000104090001001802f00003
000104090002000e030a0003000104090003003602f00003000104090004
001802f000030001040900050018032600030001040900060016033e0003
00010409000700ba03540003000104090008003003840003000104090009
0042040e000300010409000a04fc0450000300010409000d02aa094c0003
000104090010000a04d00003000104090011000c02fc00030001040a0002
000c023a00030001040b000200100bf600030001040c0002000c023a0003
0001040e0002000c0c060003000104100002000e0c160003000104130002
00120c240003000104140002000c023a00030001041500020010023a0003
000104160002000c023a0003000104190002000e0c3600030001041b0002
00100c0600030001041d0002000c023a00030001041f0002000c023a0003
000104240002000e0c4400030001042d0002000e0c5200030001080a0002
000c023a0003000108160002000c023a000300010c0a0002000c023a0003
00010c0c0002000c023aa9203230303820546865204d6f6e6f7479706520
436f72706f726174696f6e2e20416c6c2052696768747320526573657276
65642e417269616c204e6172726f7720526567756c6172203a2032303038
56657273696f6e20322e3430417269616c4e6172726f77417269616c2069
7320612074726164656d61726b206f6620546865204d6f6e6f7479706520
436f72706f726174696f6e20696e2074686520556e697465642053746174
657320616e642f6f72206f7468657220636f756e74726965732e526f6269
6e204e6963686f6c61732c205061747269636961205361756e6465727359
6f75206d617920757365207468697320666f6e7420746f20646973706c61
7920616e64207072696e7420636f6e74656e74206173207065726d697474
656420627920746865206c6963656e7365207465726d7320666f72207468
652070726f6475637420696e207768696368207468697320666f6e742069
7320696e636c756465642e20596f75206d6179206f6e6c79202869292065
6d626564207468697320666f6e7420696e20636f6e74656e742061732070
65726d69747465642062792074686520656d62656464696e672072657374
72696374696f6e7320696e636c7564656420696e207468697320666f6e74
3b20616e6420286969292074656d706f726172696c7920646f776e6c6f61
64207468697320666f6e7420746f2061207072696e746572206f72206f74
686572206f75747075742064657669636520746f2068656c70207072696e
7420636f6e74656e742e004e006f0072006d0061006c006e0079006f0062
0079010d0065006a006e00e9006e006f0072006d0061006c005300740061
006e0064006100720064039a03b103bd03bf03bd03b903ba03ac00a90020
003200300030003800200054006800650020004d006f006e006f00740079
0070006500200043006f00720070006f0072006100740069006f006e002e
00200041006c006c00200052006900670068007400730020005200650073
00650072007600650064002e0041007200690061006c0020004e00610072
0072006f007700200052006500670075006c006100720020003a00200032
00300030003800560065007200730069006f006e00200032002e00340030
0041007200690061006c004e006100720072006f00770041007200690061
006c00200069007300200061002000740072006100640065006d00610072
006b0020006f006600200054006800650020004d006f006e006f00740079
0070006500200043006f00720070006f0072006100740069006f006e0020
0069006e002000740068006500200055006e006900740065006400200053
0074006100740065007300200061006e0064002f006f00720020006f0074
00680065007200200063006f0075006e00740072006900650073002e0052
006f00620069006e0020004e006900630068006f006c00610073002c0020
005000610074007200690063006900610020005300610075006e00640065
00720073004d006f006e006f007400790070006500200044007200610077
0069006e00670020004f0066006600690063006500200031003900380032
002e0020004100200063006f006e00740065006d0070006f007200610072
0079002000730061006e0073002000730065007200690066002000640065
007300690067006e002c00200041007200690061006c00200063006f006e
007400610069006e00730020006d006f00720065002000680075006d0061
006e00690073007400200063006800610072006100630074006500720069
007300740069006300730020007400680061006e0020006d0061006e0079
0020006f0066002000690074007300200070007200650064006500630065
00730073006f0072007300200061006e0064002000610073002000730075
006300680020006900730020006d006f0072006500200069006e00200074
0075006e00650020007700690074006800200074006800650020006d006f
006f00640020006f006600200074006800650020006c0061007300740020
00640065006300610064006500730020006f006600200074006800650020
007400770065006e00740069006500740068002000630065006e00740075
00720079002e00200054006800650020006f0076006500720061006c006c
002000740072006500610074006d0065006e00740020006f006600200063
0075007200760065007300200069007300200073006f0066007400650072
00200061006e0064002000660075006c006c006500720020007400680061
006e00200069006e0020006d006f0073007400200069006e006400750073
0074007200690061006c002d007300740079006c0065002000730061006e
0073002000730065007200690066002000660061006300650073002e0020
005400650072006d0069006e0061006c0020007300740072006f006b0065
0073002000610072006500200063007500740020006f006e002000740068
006500200064006900610067006f006e0061006c00200077006800690063
0068002000680065006c0070007300200074006f00200067006900760065
002000740068006500200066006100630065002000610020006c00650073
00730020006d0065006300680061006e006900630061006c002000610070
00700065006100720061006e00630065002e00200041007200690061006c
00200069007300200061006e002000650078007400720065006d0065006c
007900200076006500720073006100740069006c0065002000660061006d
0069006c00790020006f0066002000740079007000650066006100630065
0073002000770068006900630068002000630061006e0020006200650020
00750073006500640020007700690074006800200065007100750061006c
0020007300750063006300650073007300200066006f0072002000740065
00780074002000730065007400740069006e006700200069006e00200072
00650070006f007200740073002c002000700072006500730065006e0074
006100740069006f006e0073002c0020006d006100670061007a0069006e
006500730020006500740063002c00200061006e006400200066006f0072
00200064006900730070006c00610079002000750073006500200069006e
0020006e006500770073007000610070006500720073002c002000610064
0076006500720074006900730069006e006700200061006e006400200070
0072006f006d006f00740069006f006e0073002e0059006f00750020006d
0061007900200075007300650020007400680069007300200066006f006e
007400200074006f00200064006900730070006c0061007900200061006e
00640020007000720069006e007400200063006f006e00740065006e0074
0020006100730020007000650072006d0069007400740065006400200062
007900200074006800650020006c006900630065006e0073006500200074
00650072006d007300200066006f00720020007400680065002000700072
006f006400750063007400200069006e0020007700680069006300680020
007400680069007300200066006f006e007400200069007300200069006e
0063006c0075006400650064002e00200059006f00750020006d00610079
0020006f006e006c0079002000280069002900200065006d006200650064
0020007400680069007300200066006f006e007400200069006e00200063
006f006e00740065006e00740020006100730020007000650072006d0069
0074007400650064002000620079002000740068006500200065006d0062
0065006400640069006e0067002000720065007300740072006900630074
0069006f006e007300200069006e0063006c007500640065006400200069
006e0020007400680069007300200066006f006e0074003b00200061006e
006400200028006900690029002000740065006d0070006f007200610072
0069006c007900200064006f0077006e006c006f00610064002000740068
0069007300200066006f006e007400200074006f00200061002000700072
0069006e0074006500720020006f00720020006f00740068006500720020
006f00750074007000750074002000640065007600690063006500200074
006f002000680065006c00700020007000720069006e007400200063006f
006e00740065006e0074002e004e006f0072006d00610061006c0069004e
006f0072006d00e1006c006e0065004e006f0072006d0061006c00650053
00740061006e00640061006100720064041e0431044b0447043d044b0439
004e0061007600610064006e006f0041007200720075006e007400610000
400b6f3201dbbb501f6d9c501fba022000600800b21fc960b80800b21f5f
6041290800001f0020022e0001002f0171009f017100af017100bf017100
df017100ef017100ff017100070000017100100171005f0171007f017100
8f017100af0171000600000171004f0171009f01710003021c4030f7361f
30f740f750f770f780f790f7a0f7c0f70810f740f76ff7d0f70400f710f7
30f750f780f7050910f760f702394f418d020b0090020b00a0020b00b002
0b00c0020b00e0020b00060020020b00010060021a0090021a0002001002
1a003f021a005f021a006f021a007f021a008f021a009f021a00df021a00
08001f021a0001003002190050021900600219008002190090021900a002
1900b0021900d0021900e0021900f00219000a0000021900100219002002
19000300b0021900c002190002006f0100007f0100008f0100009f010000
af010000bf0100000600400100000100bf010000cf01000002004f016c00
af016c00bf016c00ff016c0004002f016c009f016c00b0016c0003001f01
6c002f016c005f016c00a0016c0004002002110030021100400211005002
110004003f0211004002110002004f021100600211007002110080021140
1f041f054f058f05bf05041f044f048f04bf04043f05af05023f04af0402
0d09b80800b21f0b09b8080040411f09000910092009300904399009a009
b009c009d009e009f00907090f071f072f073f074f075f076f0707399f07
af07bf07cf07df07ef07ff070704052d1f0503b80800401a1f090f031f03
2f0303399f03af03bf03cf03df03ef03ff030778b8014b40630178930178
ed01787d01785901787b017887017857011f194f19021f184f1802001910
193f194019701905001810183f18401870180509001901001801085f158f
15025f148f1402001510153f15401504001410143f144014040900150100
140108c3b8011bb2051fc3bc011bffe40005001601c6b2ae031fb801c6b4
ae07031658b8014fb330081658b8014f400d300816004646000000121208
40b801f6b50009597b3e1fb801a1b279211fb8019fb279541fbc0199013f
029a001f014eb2791c1fb8014cb2793a1fb80149b279401fb80147b279de
1fb80146b279de1f410f01410060029a001f013e005d07f301bc00160139
005d0121004000160108400d79321fef79671fee796f1fea5db8029ab61f
c979301fc681b8029ab21fba5db8029ab61fb379471fb179b8029ab21faf
81b918890534b616a579401f9c5db80369b3bf169b5db80121b340169560
b8029ab21f8879b8014db21f8481b8029ab21f8279b8014db21f7a5d4109
029a001f0078013f029a001f0074013f0534b21f715db8010640093a1670
5dea34166879b8014db71f665dc12b16635db80142b347165f60410c0534
001f019d00590534001f019a007b0564010b0016014bb259671f4116013d
005703fe00de0016013800570108003a001601060087029a001f01050057
02a800940016010400570267b78616f059281fed7bb91af90534b216ec87
b90c95029a400b16c759de1fb459541f9457b8029ab21f9357b80300b3a7
167d57b8029ab21f6d7bb8029ab21f6c57b8029a40161f64592a1f5c57fe
3816460346044605551109110990bb01d100070090016f403d0790cc0790
a607907e079065079061079056079055072408220820081e081c081a0818
0816081408120810080e080c080a08080806080408020800080001b01303
4b024b5342014bb0c063004b6220b0f65323b8010a515ab005234201b012
4b004b544218b0382b4bb8080052b0372b4bb007505b58b101018e59b002
88b801005458b80119b101018e851bb0124358b900010122858d1bb90001
01ff858d595900162b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b182b2b
2b2b2b2b2b2b2b014b5079b9001f0152b6071ff2071f69072b2b2b4b5379
b900900152b60790f2079069072b2b2b181db0964b5358b0aa1d59b0324b
5358b0ff1d594bb06f53205c58b901f801f64544b901f701f645445958b9
020001f8455258b901f802004459594bb8010b53205c58b9006001f74544
b9007901f745445958b905320060455258b9006005324459594bb8014d53
205c58b9005d01f84544b9006701f845445958b90600005d455258b9005d
06004459594bb8029a53205c58b181674544b1676745445958b90c420081
455258b900810c424459594bb8053453205c58b9013f005d4544b15d5d45
445958b917e2013f455258b9013f17e2445959004bb03653205c58b15757
4544b1595745445958b1f557455258b157f54459594bb04a53205c58b157
574544b17b5745445958b901520057455258b9005701524459594bb0bf53
205c58b157574544b1875745445958b9036f0057455258b90057036f4459
5901704bb801f35358b2462146458b44594bb803e75358b2466146458b44
59b2796046456823456044704bb801f35358b2462146458b44594bb803e7
5358b2466146458b4459b2675d46456823456044704bb801f35358b24621
46458b44594bb803e75358b2466146458b4459ba0081013f004645682345
6044002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b6542b35ece8ba0456523456023456560234560b08b766818b0806220
20b18bce4565234520b003266062636820b003266165b0ce236544b08b23
4420b15ea04565234520b003266062636820b003266165b0a0236544b05e
2344b100a0455458b1a0406544b25e405e4523614459b362866f99456523
456023456560234560b089766818b080622020b16f864565234520b00326
6062636820b003266165b086236544b06f234420b162994565234520b003
266062636820b003266165b099236544b0622344b10099455458b1994065
44b262406245236144590145695342014b5058b108004259435c58b10800
4259b3020b0a124358601b2159421610703eb0124358b93b21187e1bba04
0001a8000b2b59b00c2342b00d2342b0124358b92d412d411bba04000400
000b2b59b00e2342b00f2342b0124358b9187e3b211bba01a80400000b2b
59b0102342b011234201012b2b2b2b2b2b005e73735e737374745e73735e
737374747575757575757575755e735e2b2b755e735e755e735e2b2b7373
74740175747375747375747375747375747375745e735e7574732b757473
732b2b2b2b2b00b0024568b8020c4568b0408b60b0202344b0064568b802
0d4568b0408b60b022234473000000>
[11385 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 3 <> QJJAAA+ArialNarrow AddT42Char 
1 990 12 <0001003dfe5101ca05d3000c004440161902290202080711000113087007
00700101070a8403b8020f400dc007d00702c007d007e0070307b9012900
0d10f65d71f4ed103c10ed10ed003f3c3f3c3130015d13231211340a0127
3300111002a76af53154706a0123aefe5101e101e09d01360103ebfe27fe
1afee9fe0900>QJJAAA+ArialNarrow AddT42Char 
1 5060 68 <0002003affe8035c043e0022003000fc40299913a90fa827b90fb8270501
080009000a033032012a043a0475138513041d0800112c000a100a020aba
013d0025012d4009000c01000c100c020cb8013d404c402350236f23af23
bf23052323180315911f142f143f14df140414f41157180720210a2c5703
0b217a2020321e30230c031b1e0dfb1e5d000010009f0003000030006000
7000d000e0000600b80200401006147a159029675006010f0680060206b9
0208003110f6725dedf4ed10fd5d71ede5103c17391112392fed003fed3f
3c3fedfd5de41112392f5ded5d71f4ed5d111239313043794012191b0e10
0f2610190d55011a1b0e1a1155012b01103c2b2b8181015d7100715d250e
0123222635343e0137363f0134272623220607273e0133321e011d011416
1723260306070e0215141633323e013502a44aa05688a24c8486b4540127
3772676618911fbdb0899c29131c9a171351a05d4a295e534f8140834d4e
a48b5c8e50131a242e6d2c40557518ab9c679892f0fc833e3701de281c10
294b314c5b528983>QJJAAA+ArialNarrow AddT42Char 
1 6030 71 <00020037ffe8032b05ba0011001d00c7402b7f1f014f1f011b4015041b40
0b1b28080e0b01150f001b570b07000a1557040b01180e030f730010005d
11b8021a400f12674f07ef07020f079f07df070307b90100001e10f67271
edfded3c10e41739003fed3f3fed3f1139113931304379401c1c1d131405
0a092614051255001c0a12550013061555001d081b55012b2b012b2b2b81
8181004954794010191a0c0d190d1b69051a0c1869010d0e01103c2b002b
81810049547940101617020317021569041603186901020101103c2b002b
818101715d21350e0123220211343e013332161711331101141633323635
342623220602a1287e499ae164a766497d2994fda38f5f5e8a8a695d8686
4d5101230108b5fc7a4d45020efa460212cec8c0c2dfcdc5>QJJAAA+ArialNarrow AddT42Char 
1 6324 72 <0002003affe8035d043e0013001b009640367f1da710b710037903890399
030331081500140114930e0f0f0419570a07009110010101f41257040b14
150f007a0173157a000e010eb80219b20f7a07b90100001c10f6edfd5ded
f4ed111239003fedfd5de43fed12392f3cfd713c313043794024161b0511
172611050f5500180b1555011a091455001006125500160c1955011b0819
55012b2b2b012b2b2b2b8181005d015d01170e0123220211101233321211
07211e013332012126272623220602c09826c793b9e5e7b1a9e201fd7609
946aa6fe5c01e60a31476e638c015617aaad0119010901130121fee4fef3
30b3b601fd8a4463a500>QJJAAA+ArialNarrow AddT42Char 
1 7238 75 <0001006c0000033105ba0013007b4025150825083608031b40060f031302
01000f8706070a0b0b1313000a03120213090a0c0a5d0bb8016c400a0002
1301135d10000100b90211001410f65ded3c103c10f4ed3c103c11123939
003f3c103c103c3fed3f3c113931300049547940101011040511040f6905
1005126900040301103c2b002b8181005d331133113e0133321615112311
342623220615116c9334834f8ba1936256608705bafdf24949b1ecfd5f02
a18a789ac4fdbb00>QJJAAA+ArialNarrow AddT42Char 
1 7426 76 <0002006c000000ff05ba000300070059403300093009025009b009020003
f0020f0101010006050607040a02030306075d04010000050530045004a0
040390040110040104b90211000810f65d72713c103c103c10fd3c3c103c
003f3c3f3c3f5d3cfd3c3130015d7113353315031133116c93939304ebcf
cffb150426fbda00>QJJAAA+ArialNarrow AddT42Char 
1 7554 78 <000100700000034105ba000b00db40879f0490060248095809c603d603e8
09fa0a068a0a01140356039c099c0a0405300d4a048b0403060607090a09
080a050908087807061407070603040478050a1405050a0a09060304040b
01000504060b0808070a0a090806050403070b9f07011f07012f0701090f
07010807bd0020020b5d0110005f0002300050007000a000044000900002
00b90211000c10f672715d3cfd3c1a1910ed015e5d5e5d71721117390018
3f3c103c3f3c3f1112173987052e2b047d10c487052e182b0e7d10c40708
103c083c313001714358b2cc0401015d590072715d017233113311013309
01230107117093015ebffeb3016eb5fedf6805bafcbc01b0fe76fd64021f
7afe5b00>QJJAAA+ArialNarrow AddT42Char 
1 7828 79 <00010068000000fb05ba00030041402a000530054005035005b005020100
000a02035d0130005000a00003900001100020003000400050000500b901
35000410f45d72713cfd3c003f3f3130015d7133113311689305bafa4600
>QJJAAA+ArialNarrow AddT42Char 
1 7918 80 <0001006e0000050a043e002300de405526042708250a260e36043708350a
360e46044708450a470e0c102540256f258f259f25bf250600253f250203
09231f870616870c0c06070201061011111a1a1b1b2323000a09191c0302
230f105d12101190110211b80169400b1b191a5d1c101b901b021bb80169
403500027322235d01100020003000400050008f009f00bf00d000091000
3f00500060009000a000d000074f0070009000a000d0000500b901350024
10f472715d3cfd3ce410f45d3cfd3c10f45d3cfd3c111239111239003f3c
103c103c103c103c3f3c3f3c10ed10ed113939313001715d005d33113315
3e01333216173e0133321615112311342e01232206151123113426232206
15116e842c8a525c7f1b3487527d9093214a2e5f78945147657504269553
5a5f5b5d5daabbfd27029d725f3497a2fd9702b2846ca3d8fdd9>QJJAAA+ArialNarrow AddT42Char 
1 8244 81 <0001006c00000330043e001600744022160826083608031b400612031612
8706070201060c0d0d16000a0302160a0c5d0e0db8016c400a000273165d
0110000100b90211001710f65d3cfde410f43cfd3c111239003f3c3c103c
3f3c3fed1139313000495479401013140405140412690513051569000403
01103c2b002b8181005d331133153e0133321e0215112311342e01232206
15116c85308b5a46774924942855386a7e042697585737598e93fd730286
756c3b9ec0fdbc00>QJJAAA+ArialNarrow AddT42Char 
1 8932 85 <0001006c00000245043e001100a4400f68097809022240060b03010b09ec
08ba0185000b014b4009060702010611000a09b8010040097008d008023f
080108b801ad40251103025d0110115d01100001300050006000a000b000
c000d00007000070009000d0000400b90211001210f672715d3cfd3c10fd
3c10f4715de4003f3c3f3c3fedfded11123931300049547940160c0f0405
0e0f0d0f02060f040b69050c05106900040301103c2b002b2a81815d3311
33153e013332170726232206070615116c853355354a4d3237342f4e101c
0426a170493aa727423b6774fdd4>QJJAAA+ArialNarrow AddT42Char 
1 9156 86 <00010034ffe70307043e0028011a40530b1004251b1014257422cb10c614
d702dc11d714e702ea11e7140d17220101212b0d20223b0d322145217402
85028b0d8a1895029b0d9a189722a502aa18b502ba18c80dc722c728da0d
e722f90c180a212020b8014940370c0a140c0c0a0c202103290a380a460a
560a6b0a7b0ac60ad40af40a095b0a6b0a7a0a890a9b0afd0a06590a010a
0a1904179180160116b801a9403619571207019110000100f40457270b17
7a5f160116902467100701000720076f07df070410074007a007b007c007
d007e007f0070807b8016c40161c670f90017a7f00af00bf00cf00df00ef
000600fe2910f45dedf4edf45d7172fdf472ed003fedfd5de43fedfd5de4
1112392f72715d1739870e2e2b0e7d10c4012e3130005d01715d13371e01
33323635342726272e0235343633321e0117072623220615141716171e02
151406232034920d746060692d1f77ac7440ae9a61934e0f9014a9605e2d
1b85b76c3cc1a7fec7013d1c706d5f493f231824354a7c4f88aa46766e18
ae4d3c3b22142c3b45775298bc00>QJJAAA+ArialNarrow AddT42Char 
1 9560 87 <00010021fff201c905990017009040122019301940195019701980199019
a019080cb8019040210d1009930f0a0600ec01c01687030b0e110d120b08
0c070f1010019000eb120a09b801354023070d120c125d000710078f07c0
0704000710072007300740075007bf07e007f0070907b90196001810f65d
71ed3c103c10fc3c10f6e43c103c1112393911123939003fedf5ed3f3cfd
3c2fe4313001015d25170623222626351123353311371133152311141716
333201b5143d314d5e236c6c9395950d133419a19f103d6a9e02638c0107
6cfe8d8cfd9356192400>QJJAAA+ArialNarrow AddT42Char 
1 9978 90 <00010002000004ad04260011016e405d9d009d059a0695079208910d9c0e
9311080910081119101811040f132f133f138013bf13cf13ff1307480fda
00db05db06d407d508d50dd90e081404100953099004900905020402090f
104304430983048309d304d30909ed10060720b8ff23b3090e0d20b8ff20
406304001120000402027801001401010007100e0e9b0907140909070d09
0b0b780c0d140c0c0d061011119b0406140404060991041010010404000c
0b0b0707060602020106110e0e0d0d000a07100b0c0902010610040d0e09
110004300c400c500c030cb80159400a203f09af09022f090109b8015140
092f10013f10af100210b801514009403004400450040304b80159b420bf
010101b90181001210f65d1a19fd5d1a18fd715dfd5d711a19ed5d113333
1133331112391239111239123900183f3c103c103c3f3c103c103c103c10
3c12392f11392f10e487052e2b877dc4872e182b877dc4872e182b877dc4
872e182b877dc42b2b2b313000717201715d5d7221013313173713331317
3713330123032703010cfef6998a332e8a98822c329590feef998b21b004
26fd9be4db026efd98cbcd0266fbda027cb5fccf>QJJAAA+ArialNarrow AddT42Char 
1 10958 179 <0002004403da01ee05ba000a0015008f4016271237124712571267120512
0b110700060d0c64400bb8010b4009118011060201644000b8010b402c06
001211700e07067003801747474a01030a77020001680f021f020202920c
0e15770d0b0c680d49165a6e182b4e10f44dfd3c10ed3c10f65dfd3c10ed
3c4e10456544e61a4d10fd3210fd32003ffc1afd3c103c1a10fc1afd3c11
12391112393130017101152335343637170e010723152335343637170e01
0701e19f4443252a2e03b19e4344252a2e0304abd1a58d88264715585bd1
a58d88264715575c>QJJAAA+ArialNarrow AddT42Char 
1 0 0 <0002002c000001b1050000030007001b400b070104010005030904000810
d6cd10d6cd002f33cd2fcd313033112111252111212c0185feaa0128fed8
0500fb003504a000>QJJAAA+ArialNarrow AddT42Char 
QJJAAA+ArialNarrow /CharStrings get begin
/space 3 def
/parenright 12 def
/a 68 def
/d 71 def
/e 72 def
/h 75 def
/i 76 def
/k 78 def
/l 79 def
/m 80 def
/n 81 def
/r 85 def
/s 86 def
/t 87 def
/w 90 def
/quotedblleft 179 def
end
QJJAAA+ArialNarrow /Encoding get
dup 32 /space put
dup 41 /parenright put
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 119 /w put
dup 147 /quotedblleft put
pop
end
%ADOEndSubsetFont
/ONVRIK+ArialNarrow /QJJAAA+ArialNarrow findfont ct_VMDictPut
/ONVRIK+ArialNarrow*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 55{/.notdef}rp /a 2{/.notdef}rp /d 
/e 2{/.notdef}rp /h /i /.notdef /k /l /m 
/n 3{/.notdef}rp /r /s /t 2{/.notdef}rp /w 27{/.notdef}rp 
/quotedblleft 108{/.notdef}rp]
ONVRIK+ArialNarrow nf
ONVRIK+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
101.9 83.35 mo
(\) where the line is marked with an \223)
[1.90005 1.69125 4.07854 3.11807 3.11806 1.90004 3.13889 1.91396 1.67033 3.11806 3.11806 1.91396 
.960495 1.1972 3.11806 3.11807 2.15057 1.1972 2.87454 1.67033 4.79541 3.11806 1.90005 2.89536 
3.11807 3.35468 1.67035 4.07854 1.19722 1.67032 3.11807 1.91396 3.11806 3.11807 1.67033 0 
]xsh
%ADOBeginSubsetFont: PBAAAA+ArialNarrow-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ONVRII+ArialNarrow-Bold gcheck setglobal} if
1 1234 13 <000100170318026a05d3001a00fb408c1917191896019918040a0405161a
0415162a0425163a02c900d900d9170a16091c159b1403040a0914140a1a
14240a2a143a164a165a166507750785038407960aa60ab60ac20aca14c8
17d50ad914155c146c14ac14b304bc14b316c304cc14c316d50ae50a0b0f
1010111213141516171717191a0e180e0102050405060708090a0b0c0c0d
18634f000100b8012340250e0d01101112131516171717180a140c0b0f10
1a19060e0001020504050607090a0a0d0814b80152b20e840db80152400b
5f086f087f080350080108b9012d001b10f65d71f4fde411121739111739
121739003f3cfd5de4121739111217393130005d71720171721327363f01
26272627371617263733140737363717060717072706c97c27254f146244
1730685814019116474b3d2c5c77917d702e031875362d5e041d150ab034
41a16947c527291db51918ca65df6700>ONVRII+ArialNarrow-Bold AddT42Char 
ONVRII+ArialNarrow-Bold /CharStrings get begin
/asterisk 13 def
end
ONVRII+ArialNarrow-Bold /Encoding get
dup 42 /asterisk put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ONVRII+ArialNarrow-Bold*1 
[42{/.notdef}rp /asterisk 15{/.notdef}rp /colon 15{/.notdef}rp /J 24{/.notdef}rp /c 
/d /e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n 
/o /p 2{/.notdef}rp /s /t 139{/.notdef}rp]
ONVRII+ArialNarrow-Bold nf
ONVRII+ArialNarrow-Bold*1 [6.96 0 0 -6.96 0 0 ]msf
191.47 83.35 mo
(*)sh
191.36 84.5 mo
193.52 84.5 li
193.52 84.02 li
191.36 84.02 li
cp
ef
%ADOBeginSubsetFont: QJJAAA+ArialNarrow AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ONVRIK+ArialNarrow gcheck setglobal} if
1 1116 15 <0001008efede014000cd000a0047b10706b8010b402580026440000a0706
c603800a770202036801c000f00002a00001700080000200490b7585182b
4e10f472715d3c4dfd3c10ed1a10fd32003f1aed1afc3931303335331514
0607273e013798a84643292d2e02cdcd7787244d185f5e00>ONVRIK+ArialNarrow AddT42Char 
1 1302 17 <0001009b0000014300cd0003002d401b0264000a02036801c000f00002a0
000170008000020049047585182b4e10f472715d3c4dfd3c003fed313033
3533159ba8cdcd00>ONVRIK+ArialNarrow AddT42Char 
1 5772 70 <00010041ffe80338043e001900ac40206f1b7b0f7b19038b0f8b1902170c
9b0f9b190322080e910df411570a07009101b8015e40431757040b0e7a0d
73007a1001b001c001d0010400011001200130019001a001c00107100140
01600170019001c001d001e001f00109018e146780079007a007b0070407
b90100001a10f65dedfd5d7172edf4ed003fedfde43fedfde43130437940
181216050916051455001209145500150617550013081155012b2b012b2b
8181015d5d5d01170e0123220211101233321617072e0123220615141633
323602a79119c98dabdddfaf87b91a8f1568496d8f896b5477018517bec8
0119011301150115a8a81b6c6bc1d2d9c281>ONVRIK+ArialNarrow AddT42Char 
1 6574 73 <000100130000021005d3001600a2401520183018401850187018ff180680
189018a018030cb8012140550e0ba20e8709011415150101029303131212
0404000301030616000a0c0b0b1314d71602e900111605165d0000100020
00300040005000c000d000e00009a000b000c00003700080009000030960
000139000018171112392f5e5d5e72715ded3c103c10e410f43c322f3900
3f3c3f5d3c103c103c10fd3c103c103c3fede510e43130015d5d33112335
3335343e0133321707262322061d0133152311968383346b513f4b162e29
4239aaaa039a8c717d7d42129d0a4561628cfc66>ONVRIK+ArialNarrow AddT42Char 
1 8432 82 <00020035ffe80365043e000b0017006840137f19013708155703070f5709
0b126700060106b80219b20c6700b90100001810f6edfd5ded003fed3fed
31304379402a011710081255010e0a0c5500140412550116020c55001107
0f55000d0b0f5500130515550117011555012b2b2b2b012b2b2b2b81015d
13101233321211100223220213141633323635342623220635e7b1aeeae6
b2afe997966f6895966f6994021301130118fee8fef8fee2fee801190112
cec9cbcccdc9ca00>ONVRIK+ArialNarrow AddT42Char 
1 8620 83 <0002006cfe690360043e0011001d00d940267f1f011840150d1b40061b25
08100d03151b570607010615570d0b000e10120303021118670ab8021a40
290002731101115d300050006000700080009000a000b000c000d000f000
0b1000400090000310000100b90211001e10f65d7271ed3c10e410fded11
121739003f3fed3f3fed1139123931304379401a161a070c0825160c1855
011a07185501170b15550019091b55012b2b012b2b2b8181004954794010
1c1d04051d041b69051c05126900040301103c2b002b818100495479400e
0e14130f156904140e1269000f1001103c2b002b81015d131133153e0133
321e0115100223222627110314163332363534262322066c87327a4f67a6
65e39944762b0e8a625e8e8a635992fe6905bd8a564c7af9affef1fedb46
40fdfb03a4cec3cad3d0c8d7>ONVRIK+ArialNarrow AddT42Char 
1 9780 88 <00010069ffe8032b04260016007d4027190628063806870d970d051e400f
04010a1514140a0a090616000a0f87040b011415165d147300b8016c400a
080a0b090b5d10080108b90211001710f65ded3c103c10f4e4fd3c123900
3fed3f3c3f3c103c103c1139313000495479401210120203112512020f69
041003136901020101103c2b002b2b8181005d21350e0123222e01351133
11141e01333237363511331102a7338a57679231932159396a443a949c5a
5a6faa930292fdb3a46f43574bc80239fbda>ONVRIK+ArialNarrow AddT42Char 
1 11176 180 <0002003a03da01e405ba0009001400894010381148115811681104110a10
07000610b8010b4009800a64400c0b0b0206b8010b402e80006440020100
1110700d07067003801647474a14770d0c680a0f0b1f0b020b9209770202
0368010049155a6e182b4e10f43c4dfd3c10edf65d3cfd3ced4e456544e6
1a4d10fd3210fd32003f3c1afd1aec103c103c1afd1aec11123911123931
3001711335331514060727363733353315140607273e0137479f44442456
04b19f434425292f0304e8d2a58e8825462c9cd2a58e882546155a59>ONVRIK+ArialNarrow AddT42Char 
ONVRIK+ArialNarrow /CharStrings get begin
/comma 15 def
/period 17 def
/c 70 def
/f 73 def
/o 82 def
/p 83 def
/u 88 def
/quotedblright 180 def
end
ONVRIK+ArialNarrow /Encoding get
dup 44 /comma put
dup 46 /period put
dup 99 /c put
dup 102 /f put
dup 111 /o put
dup 112 /p put
dup 117 /u put
dup 148 /quotedblright put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ONVRIK+ArialNarrow*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 2{/.notdef}rp /comma /.notdef /period 
50{/.notdef}rp /a /.notdef /c /d /e /f /.notdef 
/h /i /.notdef /k /l /m /n /o 
/p /.notdef /r /s /t /u /.notdef /w 
27{/.notdef}rp /quotedblleft /quotedblright 107{/.notdef}rp]
ONVRIK+ArialNarrow nf
ONVRIK+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
193.63 83.35 mo
(\224, stop \223s\224 corresponds to the last stop of an user trip.)
[1.67734 1.67033 2.15057 2.87454 1.67033 3.11807 3.11807 1.91396 1.67734 2.87454 1.67735 1.91396 
2.87454 3.11806 1.90005 1.93488 3.11807 2.87454 3.11807 3.11806 3.11807 3.35468 2.87456 2.15057 
1.67032 3.11807 1.67035 1.67032 3.11807 3.11804 1.67035 .96048 3.11807 2.87454 1.67032 2.15057 
2.87457 1.67032 3.11807 3.11807 1.67032 3.11807 1.67032 1.67035 3.11804 3.1181 1.91394 3.11807 
2.87454 3.11807 1.90005 1.93488 1.67032 1.90005 1.21802 3.11804 0 ]xsh
.24024 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
181.8 106.92 mo
190.2 106.92 li
190.2 98.04 li
181.8 98.04 li
cp
@
%ADOBeginSubsetFont: HIBBAA+ArialNarrow AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ONVRIJ+ArialNarrow gcheck setglobal} if
1 1560 20 <000100b40000026f05c0000a005fb389070102bd01ac00090006019d0005
01c2400b0a090500010c090a020605b801a7b2010a00b8013f4010020001
30014001700104d0010101490bba0168017d00182b4e10f4715d3c4dfd3c
10f63c111239003f3c3f3cfded10ed3130015d2123110e0107353e013733
026f9433ac487abb2660047b3c7d20ae46ca6000>ONVRIJ+ArialNarrow AddT42Char 
ONVRIJ+ArialNarrow /CharStrings get begin
/one 20 def
end
ONVRIJ+ArialNarrow /Encoding get
dup 49 /one put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ONVRIJ+ArialNarrow*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft 8{/.notdef}rp /one 8{/.notdef}rp /colon 
11{/.notdef}rp /F 26{/.notdef}rp /a 7{/.notdef}rp /i 2{/.notdef}rp /l 
2{/.notdef}rp /o /p /.notdef /r /s 140{/.notdef}rp]
ONVRIJ+ArialNarrow nf
ONVRIJ+ArialNarrow*1 [5.544 0 0 -5.544 0 0 ]msf
182.78 104.52 mo
(1:1)
[2.40051 1.19749 0 ]xsh
190.2 106.92 mo
198.36 106.92 li
198.36 98.04 li
190.2 98.04 li
cp
@
%ADOBeginSubsetFont: HIBBAA+ArialNarrow AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ONVRIJ+ArialNarrow gcheck setglobal} if
1 1700 21 <0001002f0000034d05c0001b008d401a08100156066a0d7b0d8917930705
160819170506040b1b0efd0fb80165400d0b7d1205001bed01020c088115
b8017f4016004a1d0eba0fb7901ba01bb01b03601b701b801b031bb8020a
b502491c7698182b4e10f44ded5d5df4ed4e10f64df4ed003f3cfd3c3fed
fde41112173931304379400e1314090a0a1308650109140b65012b012b81
81005d015d2515212612373e0135342623220615273e0133321615140207
0e0107034dfce50385b1cf80836067849810cfa9b8bd94cf844d18adad69
0104b1cee161708d988e13d3d5f89e8cfeffd6876231>ONVRIJ+ArialNarrow AddT42Char 
ONVRIJ+ArialNarrow /CharStrings get begin
/two 21 def
end
ONVRIJ+ArialNarrow /Encoding get
dup 50 /two put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ONVRIJ+ArialNarrow*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft 8{/.notdef}rp /one /two 7{/.notdef}rp 
/colon 11{/.notdef}rp /F 26{/.notdef}rp /a 7{/.notdef}rp /i 2{/.notdef}rp 
/l 2{/.notdef}rp /o /p /.notdef /r /s 140{/.notdef}rp]
ONVRIJ+ArialNarrow nf
ONVRIJ+ArialNarrow*1 [5.52 0 0 -5.52 0 0 ]msf
191.14 104.47 mo
(1:2)
[2.40117 1.19781 0 ]xsh
198.36 106.92 mo
206.76 106.92 li
206.76 98.04 li
198.36 98.04 li
cp
@
ONVRIJ+ArialNarrow*1 [5.52 0 0 -5.52 0 0 ]msf
199.46 104.47 mo
(2:1)
[2.40117 1.19781 0 ]xsh
207 106.92 mo
215.16 106.92 li
215.16 98.04 li
207 98.04 li
cp
@
%ADOBeginSubsetFont: HIBBAA+ArialNarrow AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ONVRIJ+ArialNarrow gcheck setglobal} if
1 2498 24 <00010043ffe7036005a6001d00ce401573028202871c0337134602560264
02042308121313b8013e401b0e0f140e13140e0f130a0d0e040a7d15151b
1112ed100f0401d100b801b6b7047d401b0d12d413b8014740170e201110
d407811f185f1802bf18cf18df1803184a1f0fb80191400c0dba0eb701ba
00491e7698182b4e10f44dedf4ede44e10f671724dedf43c1a1910fde400
183f1aedfde43f3cfd3c12392fed123939123987082e2b057d10c4313018
43794018161a05090916076501051a07650108170a65010619046500002b
2b012b2b8181015d005d13371e0133323635342623220607271321152103
36333212151402232226439b127f546998936f4375228b750255fe21416b
7897dfdfbc9cd70180108c89c1a79dad4b431602f1acfe765cfeffdad7fe
cdd9>ONVRIJ+ArialNarrow AddT42Char 
1 2800 25 <0002003cffe7035605c0001b002700cf401f690379038c039c030420400c
254308091f0c7d2525131901d10f001f000200b8010e4015057d19051f7d
130d091c1601ba00b722810f4a291cb80146b51649287698182b4e10f44d
ed4e10f64dedf4ed111239003fed3fedfd5de41112392fed123931304379
40321d240d18060807251126061809650020122265011e141c6500240d22
6501081705650121101f65001d151f6500230e2565012b2b2b2b012b2b2b
2b2b2b81818100495479b626270a0b270a25b80152b305260b1cb80152b2
000a0901103c2b002b8181005d010726272623220706033e013332121514
0e0123220211101233321601141633323635342623220603419315293b53
814e4301339a568fd56ba865b6ecf2bd89b9fdb9966357898862608f0453
0e713046a08afef26063fefdd993ef720148017f01a90169bbfcd69fc1b6
9f9cacab>ONVRIJ+ArialNarrow AddT42Char 
1 3134 26 <0001004d0000035705a7000b0039400a0b00ed02010406070c0bb80147b7
0303024a0d068107b80107b500490c7698182b4e10f44df4ed4e10f63c4d
10ed003f3c3f3cfd3c31301335211506000323361a01374d030aaefef814
98036fc27004faad8ce2fd2bfe9cb801ea01bc9c>ONVRIJ+ArialNarrow AddT42Char 
1 3244 27 <00030042ffe7035a05c000170023002f00fc405673080c001b2d000c1e18
1b7d2d2d12217d0605277d120d1e810f0901cf09df09ef09ff090409d40f
09092a81af0fbf0fdf0f031f0f5f0f020f4a311881000301c003d003e003
f0030403d415030324811549307698182b4e10f44ded392f10f45d71ed4e
10f672714ded392f10f45d71ed003fed3fed12392fed0111123939001112
3939313043794058012f28112a6501261324650020071e65012205186500
1a011865022e172465021c0b1e65032c0d2a650329102765002514276500
1f08216501230421650119021b6500012f162d650117001d0a1b65000b2b
0e2d65010d0c103c2b3c2b103c2b3c2b2b2b2b2b012b2b2b2b2b2b2b2b81
012e01353436333216151406071e01151406232226353436131416333236
3534262322060314163332363534262322060126595bc59596c758596d75
e3a8aae3794f7253517275505073319165668e9266658d031b28956fa7d2
d6a96a93292bc08ec4f7f7c993bf01536c807e64678380fcfb87a5a08687
a5a4>ONVRIJ+ArialNarrow AddT42Char 
1 3636 28 <00020043ffe7035a05c0001b002700cc4022640274028202920204204025
0b4608081f0b7d2525191f7d110501d1000010000200b8010eb5037d190d
081cb80146400f154a2901ba00b722810e49287698182b4e10f44dedf4ed
4e10f64dfd39003fedfd5de43fed12392fed12393130437940341d240c18
0406172605251325240c22650004180765011e121c65012010226500230d
25650006160365001d141f6501210f1f65012b2b2b2b012b2b2b2b2b2b2b
81818100495479b62627090a270925b80152b304260a1cb80152b2010908
01103c2b002b8181005d133716333236123d010e01232202353412333216
1211100206232226013426232206151416333236598e22a64a79542e9c51
93d5dd9e70c26a72c37989b8024b8c5b5f958e636288015310e8650102ac
2459680101dfe6010994fee0fef1fed2feb29abb03389db4c0a090abac00
>ONVRIJ+ArialNarrow AddT42Char 
ONVRIJ+ArialNarrow /CharStrings get begin
/five 24 def
/six 25 def
/seven 26 def
/eight 27 def
/nine 28 def
end
ONVRIJ+ArialNarrow /Encoding get
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ONVRIJ+ArialNarrow*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft 8{/.notdef}rp /one /two 2{/.notdef}rp 
/five /six /seven /eight /nine /colon 11{/.notdef}rp /F 
26{/.notdef}rp /a 7{/.notdef}rp /i 2{/.notdef}rp /l 2{/.notdef}rp /o 
/p /.notdef /r /s 140{/.notdef}rp]
ONVRIJ+ArialNarrow nf
ONVRIJ+ArialNarrow*1 [5.52 0 0 -5.52 0 0 ]msf
207.89 104.47 mo
(2:2)
[2.40117 1.19781 0 ]xsh
ONVRIJ+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
183.53 95.95 mo
(15)
[2.63997 0 ]xsh
191.93 95.95 mo
(16)
[2.63997 0 ]xsh
200.28 95.95 mo
(17)
[2.63997 0 ]xsh
208.63 95.95 mo
(18)
[2.63997 0 ]xsh
217.03 95.95 mo
(19)
[2.66396 0 ]xsh
215.16 106.92 mo
223.56 106.92 li
223.56 98.04 li
215.16 98.04 li
cp
@
%ADOBeginSubsetFont: HIBBAA+ArialNarrow AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ONVRIJ+ArialNarrow gcheck setglobal} if
1 1932 22 <00010044ffe6035705c0002900e2401d641575027415b702044602570264
02034a0820100c7d0909271a16fd17b8010eb6137d1a0501fd00b801b640
39037d270d0cb70b0b24001081cf1ddf1def1dff1d040f1d4f1d021d1d06
81bf24cf24df24031f245f2402244a2b16ba17b701ba00492a7698182b4e
10f44dedf4ed4e10f672714ded392f715ded1112392fe4003fedfde43fed
fde41112392ffd0111393130437940351b260e12040822250e25121b1065
01042606650108210665010d1f106501111c136501052503650007230965
01210f1e0c65001f2000103c2b3c2b2b2b012b2b2b2b2b2b818181015d5d
1337123332363534262322073717323635342623220607273e0133321615
1406071e0215140223222644942ebb659488632a3e11176d887252557510
931cc48b92cc574e485e3aeea69ad6018318fee0ab88809c149e02867067
7d838520bcc0d8a4649a2c145c9a5fcafeffe000>ONVRIJ+ArialNarrow AddT42Char 
ONVRIJ+ArialNarrow /CharStrings get begin
/three 22 def
end
ONVRIJ+ArialNarrow /Encoding get
dup 51 /three put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ONVRIJ+ArialNarrow*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft 8{/.notdef}rp /one /two /three 
/.notdef /five /six /seven /eight /nine /colon 11{/.notdef}rp 
/F 26{/.notdef}rp /a 7{/.notdef}rp /i 2{/.notdef}rp /l 2{/.notdef}rp 
/o /p /.notdef /r /s 140{/.notdef}rp]
ONVRIJ+ArialNarrow nf
ONVRIJ+ArialNarrow*1 [5.52 0 0 -5.52 0 0 ]msf
216.24 104.47 mo
(3:1)
[2.40117 1.19781 0 ]xsh
223.56 106.92 mo
231.96 106.92 li
231.96 98.04 li
223.56 98.04 li
cp
@
%ADOBeginSubsetFont: HIBBAA+ArialNarrow AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ONVRIJ+ArialNarrow gcheck setglobal} if
1 1370 19 <00020043ffe7035305c0000c0018006640173a08167d0305107d0a0d1381
074a1a0d810049197698182b4e10f44ded4e10f64ded003fed3fed313043
79402c0118052511091365010f0b0d6500150413650117020d6500120810
65000e0c106500140616650118011665012b2b2b2b012b2b2b2b2b811310
123332171611100223220213101633323611102623220643c7c2ac6378c6
c3acdb97896b6588896d648702d30171017c9abafe67fe91fe830150019c
fe9bf3f601620166f2f6>ONVRIJ+ArialNarrow AddT42Char 
ONVRIJ+ArialNarrow /CharStrings get begin
/zero 19 def
end
ONVRIJ+ArialNarrow /Encoding get
dup 48 /zero put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ONVRIJ+ArialNarrow*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft 7{/.notdef}rp /zero /one /two 
/three /.notdef /five /six /seven /eight /nine /colon 
11{/.notdef}rp /F 26{/.notdef}rp /a 7{/.notdef}rp /i 2{/.notdef}rp /l 
2{/.notdef}rp /o /p /.notdef /r /s 140{/.notdef}rp]
ONVRIJ+ArialNarrow nf
ONVRIJ+ArialNarrow*1 [5.52 0 0 -5.52 0 0 ]msf
224.64 104.47 mo
(3:2)
[2.42325 1.19781 0 ]xsh
ONVRIJ+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
225.38 95.95 mo
(20)
[2.63997 0 ]xsh
%ADOBeginSubsetFont: QJJAAA+ArialNarrow AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ONVRIK+ArialNarrow gcheck setglobal} if
1 10842 171 <000300c4000005cc00cd00030007000b0048400b0a0602640804030a0b68
08b8015fb2076804b8015f401c03684f007f009f00c000042f003f007f00
8f00045f00df000200c80c10f672715dfdf6fdf6ed003f3c3cfd3c3c3130
333533152135331521353315c4a80188a80188a8cdcdcdcdcdcd>ONVRIK+ArialNarrow AddT42Char 
ONVRIK+ArialNarrow /CharStrings get begin
/ellipsis 171 def
end
ONVRIK+ArialNarrow /Encoding get
dup 133 /ellipsis put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ONVRIK+ArialNarrow*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 2{/.notdef}rp /comma /.notdef /period 
50{/.notdef}rp /a /.notdef /c /d /e /f /.notdef 
/h /i /.notdef /k /l /m /n /o 
/p /.notdef /r /s /t /u /.notdef /w 
13{/.notdef}rp /ellipsis 13{/.notdef}rp /quotedblleft /quotedblright 107{/.notdef}rp]
ONVRIK+ArialNarrow nf
ONVRIK+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
234.05 95.95 mo
(\205)sh
ONVRIK+ArialNarrow*1 [5.52 0 0 -5.52 0 0 ]msf
233.66 104.45 mo
(\205)sh
240.12 106.92 mo
248.52 106.92 li
248.52 98.04 li
240.12 98.04 li
cp
@
ONVRIJ+ArialNarrow*1 [5.52 0 0 -5.52 0 0 ]msf
241.2 104.45 mo
(5:2)
[2.40117 1.19781 0 ]xsh
248.52 106.92 mo
256.92 106.92 li
256.92 98.04 li
248.52 98.04 li
cp
@
ONVRIJ+ArialNarrow*1 [5.52 0 0 -5.52 0 0 ]msf
249.55 104.45 mo
(6:1)
[2.40117 1.19781 0 ]xsh
256.92 106.92 mo
265.32 106.92 li
265.32 98.04 li
256.92 98.04 li
cp
@
ONVRIJ+ArialNarrow*1 [5.52 0 0 -5.52 0 0 ]msf
257.98 104.45 mo
(6:2)
[2.40115 1.19785 0 ]xsh
265.32 106.92 mo
273.72 106.92 li
273.72 98.04 li
265.32 98.04 li
cp
@
ONVRIJ+ArialNarrow*1 [5.52 0 0 -5.52 0 0 ]msf
266.3 104.45 mo
(7:1)
[2.40115 1.19785 0 ]xsh
273.72 106.92 mo
281.88 106.92 li
281.88 98.04 li
273.72 98.04 li
cp
@
ONVRIJ+ArialNarrow*1 [5.52 0 0 -5.52 0 0 ]msf
274.66 104.45 mo
(7:2)
[2.40115 1.19785 0 ]xsh
282.12 106.92 mo
290.28 106.92 li
290.28 98.04 li
282.12 98.04 li
cp
@
ONVRIJ+ArialNarrow*1 [5.52 0 0 -5.52 0 0 ]msf
283.08 104.45 mo
(8:1)
[2.40115 1.19785 0 ]xsh
290.28 106.92 mo
298.68 106.92 li
298.68 98.04 li
290.28 98.04 li
cp
@
ONVRIJ+ArialNarrow*1 [5.52 0 0 -5.52 0 0 ]msf
291.41 104.45 mo
(8:2)
[2.40115 1.19785 0 ]xsh
298.68 106.92 mo
307.08 106.92 li
307.08 98.04 li
298.68 98.04 li
cp
@
ONVRIJ+ArialNarrow*1 [5.52 0 0 -5.52 0 0 ]msf
299.76 104.45 mo
(9:1)
[2.40115 1.19785 0 ]xsh
307.08 106.92 mo
315.48 106.92 li
315.48 98.04 li
307.08 98.04 li
cp
@
%ADOBeginSubsetFont: HIBBAA+ArialNarrow AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ONVRIJ+ArialNarrow gcheck setglobal} if
1 2282 23 <000200130000035305ba000a000d009e40090a04060c02040c0d0db80139
401b0304140303040c0403070ded0802020504050a000c0d0204000708bb
01070005000a013fb30c000302b801c04033091f0001398f00bf00ff0003
1f002f003f005f006f007f008f009f00af00090f001f002f005f009f00bf
00cf00df000800000e12392f72715d5e5d5ef43c103cfd3cf43c12391139
003f3c3f3c392f3cfd3c39113987052e2b877dc43130015d211121350133
1133152311031101021cfdf7022578a3a394fe88015fa503b6fc4aa5fea1
02040295fd6b>ONVRIJ+ArialNarrow AddT42Char 
ONVRIJ+ArialNarrow /CharStrings get begin
/four 23 def
end
ONVRIJ+ArialNarrow /Encoding get
dup 52 /four put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ONVRIJ+ArialNarrow*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft 7{/.notdef}rp /zero /one /two 
/three /four /five /six /seven /eight /nine /colon 
11{/.notdef}rp /F 26{/.notdef}rp /a 7{/.notdef}rp /i 2{/.notdef}rp /l 
2{/.notdef}rp /o /p /.notdef /r /s 140{/.notdef}rp]
ONVRIJ+ArialNarrow nf
ONVRIJ+ArialNarrow*1 [5.52 0 0 -5.52 0 0 ]msf
308.18 104.45 mo
(9:2)
[2.40115 1.19785 0 ]xsh
ONVRIJ+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
241.94 95.95 mo
(24)
[2.63997 0 ]xsh
250.37 95.95 mo
(25)
[2.63997 0 ]xsh
258.7 95.95 mo
(26)
[2.63995 0 ]xsh
267.12 95.95 mo
(27)
[2.63995 0 ]xsh
275.47 95.95 mo
(28)
[2.63995 0 ]xsh
283.8 95.95 mo
(29)
[2.63995 0 ]xsh
292.22 95.95 mo
(30)
[2.63995 0 ]xsh
300.58 95.95 mo
(31)
[2.63995 0 ]xsh
308.9 95.95 mo
(32)
[2.63995 0 ]xsh
318.17 95.95 mo
(33)
[2.63995 0 ]xsh
315.48 106.92 mo
325.32 106.92 li
325.32 98.04 li
315.48 98.04 li
cp
@
ONVRIJ+ArialNarrow*1 [5.52 0 0 -5.52 0 0 ]msf
316.34 104.45 mo
(10:1)
[2.40115 2.40118 1.19781 0 ]xsh
325.32 106.92 mo
335.16 106.92 li
335.16 98.04 li
325.32 98.04 li
cp
@
ONVRIJ+ArialNarrow*1 [5.52 0 0 -5.52 0 0 ]msf
326.18 104.45 mo
(10:2)
[2.40115 2.40118 1.19781 0 ]xsh
ONVRIJ+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
327.94 95.95 mo
(34)
[2.63995 0 ]xsh
42.12 106.92 mo
51.48 106.92 li
51.48 98.04 li
42.12 98.04 li
cp
@
%ADOBeginSubsetFont: HIBBAA+ArialNarrow AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ONVRIJ+ArialNarrow gcheck setglobal} if
1 382 7 <00030039ff2d035506410028002e003501314022662d74077b2b8e1c8722
8b2b9e1c9e2b08161d1e352f272813292e0a0901002e1e1eb80220401f35
0a1435350a0a0b0c1e2e058f35a935b935c43504353529091bfd0f1a011a
b8010eb2161514b80189b3131dd129b80104400916130306fd00050105b8
0165b2010028b8019eb2012f09b80104401427d1010d01090a2e2913272f
351e1d160c151528b8018a40201400000100002c1bba1a1a32811f242f24
6024b024d024e02406002420240224b80222402205ba06062c81400f500f
700f800f900f05c00fd00fe00ff00f04100f9f0fdf0f030fb90221003610
f672715ded392ffdfd715dfd392fed11392f5d3cfd3c121739003ff4fd3c
10f43c10fd5de43f3cfde410fc3c10fd5de41112392f5d1739872e2b7d10
c4030e103c3c0e3c3c3c3c103c0e3c3c3c3c3c3130005d05352e0227371e
01171126272e0135343e01373533151e02170726271116171e0215140607
15030e01151417133e0135342627019f788a5c089513734b6260404a5488
70585d7f560e98198f651d426139ca94585465b95853735571d3b41361bc
8622a29509023d16462ea56e71b9600e56560b5499711cc924fdf91f0e1f
669960c3f209b60628108467b245fd160d977b63762c>ONVRIJ+ArialNarrow AddT42Char 
ONVRIJ+ArialNarrow /CharStrings get begin
/dollar 7 def
end
ONVRIJ+ArialNarrow /Encoding get
dup 36 /dollar put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ONVRIJ+ArialNarrow*1 
[32{/.notdef}rp /space 3{/.notdef}rp /dollar 3{/.notdef}rp /parenleft 7{/.notdef}rp /zero 
/one /two /three /four /five /six /seven /eight 
/nine /colon 11{/.notdef}rp /F 26{/.notdef}rp /a 7{/.notdef}rp /i 
2{/.notdef}rp /l 2{/.notdef}rp /o /p /.notdef /r /s 
140{/.notdef}rp]
ONVRIJ+ArialNarrow nf
ONVRIJ+ArialNarrow*1 [5.52 0 0 -5.52 0 0 ]msf
45.36 104.47 mo
($)sh
51.48 106.92 mo
60.6 106.92 li
60.6 98.04 li
51.48 98.04 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
51.48 106.92 mo
60.6 106.92 li
60.6 98.04 li
51.48 98.04 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [5.52 0 0 -5.52 0 0 ]msf
53.208 104.47 mo
(1:)
[2.40009 0 ]xsh
ONVRII+ArialNarrow-Bold*1 [5.52 0 0 -5.52 0 0 ]msf
56.808 104.47 mo
(*)sh
56.781 105.36 mo
58.461 105.36 li
58.461 104.88 li
56.781 104.88 li
cp
ef
60.84 106.92 mo
69.96 106.92 li
69.96 98.04 li
60.84 98.04 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
60.84 106.92 mo
69.96 106.92 li
69.96 98.04 li
60.84 98.04 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [5.52 0 0 -5.52 0 0 ]msf
62.592 104.47 mo
(2:)
[2.40008 0 ]xsh
ONVRII+ArialNarrow-Bold*1 [5.52 0 0 -5.52 0 0 ]msf
66.192 104.47 mo
(*)sh
66.147 105.36 mo
67.827 105.36 li
67.827 104.88 li
66.147 104.88 li
cp
ef
69.96 106.92 mo
79.32 106.92 li
79.32 98.04 li
69.96 98.04 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
69.96 106.92 mo
79.32 106.92 li
79.32 98.04 li
69.96 98.04 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [5.52 0 0 -5.52 0 0 ]msf
71.88 104.47 mo
(3:)
[2.40009 0 ]xsh
ONVRII+ArialNarrow-Bold*1 [5.52 0 0 -5.52 0 0 ]msf
75.48 104.47 mo
(*)sh
75.432 105.36 mo
77.112 105.36 li
77.112 104.88 li
75.432 104.88 li
cp
ef
79.32 106.92 mo
88.68 106.92 li
88.68 98.04 li
79.32 98.04 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
79.32 106.92 mo
88.68 106.92 li
88.68 98.04 li
79.32 98.04 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [5.52 0 0 -5.52 0 0 ]msf
81.168 104.47 mo
(4:)
[2.40009 0 ]xsh
ONVRII+ArialNarrow-Bold*1 [5.52 0 0 -5.52 0 0 ]msf
84.768 104.47 mo
(*)sh
84.716 105.36 mo
86.396 105.36 li
86.396 104.88 li
84.716 104.88 li
cp
ef
88.68 106.92 mo
98.04 106.92 li
98.04 98.04 li
88.68 98.04 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
88.68 106.92 mo
98.04 106.92 li
98.04 98.04 li
88.68 98.04 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [5.52 0 0 -5.52 0 0 ]msf
90.528 104.47 mo
(5:)
[2.40009 0 ]xsh
ONVRII+ArialNarrow-Bold*1 [5.52 0 0 -5.52 0 0 ]msf
94.128 104.47 mo
(*)sh
94.083 105.36 mo
95.763 105.36 li
95.763 104.88 li
94.083 104.88 li
cp
ef
98.04 106.92 mo
107.16 106.92 li
107.16 98.04 li
98.04 98.04 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
98.04 106.92 mo
107.16 106.92 li
107.16 98.04 li
98.04 98.04 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [5.52 0 0 -5.52 0 0 ]msf
99.816 104.47 mo
(6:)
[2.42399 0 ]xsh
ONVRII+ArialNarrow-Bold*1 [5.52 0 0 -5.52 0 0 ]msf
103.44 104.47 mo
(*)sh
103.37 105.36 mo
105.05 105.36 li
105.05 104.88 li
103.37 104.88 li
cp
ef
107.4 106.92 mo
116.52 106.92 li
116.52 98.04 li
107.4 98.04 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
107.4 106.92 mo
116.52 106.92 li
116.52 98.04 li
107.4 98.04 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [5.52 0 0 -5.52 0 0 ]msf
109.2 104.47 mo
(7:)
[2.40009 0 ]xsh
ONVRII+ArialNarrow-Bold*1 [5.52 0 0 -5.52 0 0 ]msf
112.8 104.47 mo
(*)sh
112.73 105.36 mo
114.41 105.36 li
114.41 104.88 li
112.73 104.88 li
cp
ef
116.52 106.92 mo
125.88 106.92 li
125.88 98.04 li
116.52 98.04 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
116.52 106.92 mo
125.88 106.92 li
125.88 98.04 li
116.52 98.04 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [5.52 0 0 -5.52 0 0 ]msf
118.49 104.47 mo
(8:)
[2.40009 0 ]xsh
ONVRII+ArialNarrow-Bold*1 [5.52 0 0 -5.52 0 0 ]msf
122.09 104.47 mo
(*)sh
122.02 105.36 mo
123.7 105.36 li
123.7 104.88 li
122.02 104.88 li
cp
ef
125.88 106.92 mo
135.24 106.92 li
135.24 98.04 li
125.88 98.04 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
125.88 106.92 mo
135.24 106.92 li
135.24 98.04 li
125.88 98.04 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [5.52 0 0 -5.52 0 0 ]msf
127.78 104.47 mo
(9:)
[2.40009 0 ]xsh
ONVRII+ArialNarrow-Bold*1 [5.52 0 0 -5.52 0 0 ]msf
131.38 104.47 mo
(*)sh
131.3 105.36 mo
132.98 105.36 li
132.98 104.88 li
131.3 104.88 li
cp
ef
135.24 106.92 mo
144.6 106.92 li
144.6 98.04 li
135.24 98.04 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
135.24 106.92 mo
144.6 106.92 li
144.6 98.04 li
135.24 98.04 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [5.52 0 0 -5.52 0 0 ]msf
135.96 104.47 mo
(10:)
[2.40009 2.40009 0 ]xsh
ONVRII+ArialNarrow-Bold*1 [5.52 0 0 -5.52 0 0 ]msf
141.96 104.47 mo
(*)sh
141.87 105.36 mo
143.55 105.36 li
143.55 104.88 li
141.87 104.88 li
cp
ef
144.6 106.92 mo
153.72 106.92 li
153.72 98.04 li
144.6 98.04 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
144.6 106.92 mo
153.72 106.92 li
153.72 98.04 li
144.6 98.04 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [5.52 0 0 -5.52 0 0 ]msf
145.25 104.47 mo
(11:)
[2.40009 2.40009 0 ]xsh
ONVRII+ArialNarrow-Bold*1 [5.52 0 0 -5.52 0 0 ]msf
151.25 104.47 mo
(*)sh
151.15 105.36 mo
152.83 105.36 li
152.83 104.88 li
151.15 104.88 li
cp
ef
153.96 106.92 mo
163.08 106.92 li
163.08 98.04 li
153.96 98.04 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
153.96 106.92 mo
163.08 106.92 li
163.08 98.04 li
153.96 98.04 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [5.52 0 0 -5.52 0 0 ]msf
154.61 104.47 mo
(12:)
[2.40009 2.40009 0 ]xsh
ONVRII+ArialNarrow-Bold*1 [5.52 0 0 -5.52 0 0 ]msf
160.61 104.47 mo
(*)sh
160.52 105.36 mo
162.2 105.36 li
162.2 104.88 li
160.52 104.88 li
cp
ef
163.08 106.92 mo
172.44 106.92 li
172.44 98.04 li
163.08 98.04 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
163.08 106.92 mo
172.44 106.92 li
172.44 98.04 li
163.08 98.04 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [5.52 0 0 -5.52 0 0 ]msf
163.9 104.47 mo
(13:)
[2.40009 2.40009 0 ]xsh
ONVRII+ArialNarrow-Bold*1 [5.52 0 0 -5.52 0 0 ]msf
169.9 104.47 mo
(*)sh
169.8 105.36 mo
171.48 105.36 li
171.48 104.88 li
169.8 104.88 li
cp
ef
172.44 106.92 mo
181.8 106.92 li
181.8 98.04 li
172.44 98.04 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
172.44 106.92 mo
181.8 106.92 li
181.8 98.04 li
172.44 98.04 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [5.52 0 0 -5.52 0 0 ]msf
173.18 104.47 mo
(14:)
[2.40009 2.40009 0 ]xsh
ONVRII+ArialNarrow-Bold*1 [5.52 0 0 -5.52 0 0 ]msf
179.21 104.47 mo
(*)sh
179.09 105.36 mo
180.77 105.36 li
180.77 104.88 li
179.09 104.88 li
cp
ef
ONVRIJ+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
55.032 95.95 mo
(1)sh
64.32 95.95 mo
(2)sh
73.68 95.95 mo
(3)sh
82.968 95.95 mo
(4)sh
92.256 95.95 mo
(5)sh
101.64 95.95 mo
(6)sh
110.93 95.95 mo
(7)sh
120.29 95.95 mo
(8)sh
129.58 95.95 mo
(9)sh
137.42 95.95 mo
(10)
[2.66396 0 ]xsh
146.81 95.95 mo
(11)
[2.63997 0 ]xsh
156.1 95.95 mo
(12)
[2.63997 0 ]xsh
165.48 95.95 mo
(13)
[2.63997 0 ]xsh
174.77 95.95 mo
(14)
[2.63997 0 ]xsh
45.36 95.95 mo
(0)sh
335.16 106.92 mo
345 106.92 li
345 98.04 li
335.16 98.04 li
cp
@
ONVRIJ+ArialNarrow*1 [5.52 0 0 -5.52 0 0 ]msf
336.02 104.54 mo
(11:1)
[2.40115 2.40118 1.19781 0 ]xsh
ONVRIK+ArialNarrow*1 [5.52 0 0 -5.52 0 0 ]msf
347.74 104.47 mo
(\205)sh
ONVRIJ+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
337.78 95.95 mo
(35)
[2.63995 0 ]xsh
ONVRIK+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
347.88 95.95 mo
(\205)sh
ONVRIJ+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
356.38 95.95 mo
(39)
[2.63995 0 ]xsh
353.64 106.92 mo
363.48 106.92 li
363.48 98.04 li
353.64 98.04 li
cp
@
ONVRIJ+ArialNarrow*1 [5.52 0 0 -5.52 0 0 ]msf
354.55 104.47 mo
(13:1)
[2.40115 2.40118 1.19781 0 ]xsh
363.48 106.92 mo
373.32 106.92 li
373.32 98.04 li
363.48 98.04 li
cp
@
ONVRIJ+ArialNarrow*1 [5.52 0 0 -5.52 0 0 ]msf
364.42 104.47 mo
(13:2)
[2.40115 2.40118 1.19781 0 ]xsh
ONVRIJ+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
366.17 95.95 mo
(40)
[2.63995 0 ]xsh
376.03 95.95 mo
(41)
[2.63995 0 ]xsh
373.32 106.92 mo
383.16 106.92 li
383.16 98.04 li
373.32 98.04 li
cp
@
ONVRIJ+ArialNarrow*1 [5.52 0 0 -5.52 0 0 ]msf
374.14 104.45 mo
(14:1)
[2.40115 2.40118 1.19781 0 ]xsh
383.16 106.92 mo
392.76 106.92 li
392.76 98.04 li
383.16 98.04 li
cp
@
ONVRIJ+ArialNarrow*1 [5.52 0 0 -5.52 0 0 ]msf
383.93 104.45 mo
(14:2)
[2.40115 2.40118 1.19781 0 ]xsh
ONVRIJ+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
385.75 95.95 mo
(42)
[2.63995 0 ]xsh
%ADOBeginSubsetFont: PBAAAA+ArialNarrow-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ONVRII+ArialNarrow-Bold gcheck setglobal} if
1 4652 57 <000100000000045f05ba000600d84073100350039003d003048003012f03
350130033505d00305080518052a0024063c003306060908050108060304
046905061405050600030202690100140101000300050404020102060008
6008010406050002015b059b05db05030b0510054b057b058b05eb050634
0560059b05a405db050505b8021e402254039403d4030304031003440374
038403e403062003340360039403a403d4030603b80219b120012f1a19fd
5d7172ed5d71721239391239395d00183f3c3f3c3c103c123987052e2b87
7dc4872e182b877dc43130015e5d5e5d005d71722101210901210101adfe
530107013001260102fe5205bafbc3043dfa4600>ONVRII+ArialNarrow-Bold AddT42Char 
ONVRII+ArialNarrow-Bold /CharStrings get begin
/V 57 def
end
ONVRII+ArialNarrow-Bold /Encoding get
dup 86 /V put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ONVRII+ArialNarrow-Bold*1 
[42{/.notdef}rp /asterisk 15{/.notdef}rp /colon 15{/.notdef}rp /J 11{/.notdef}rp /V 
12{/.notdef}rp /c /d /e 3{/.notdef}rp /i 2{/.notdef}rp /l 
/.notdef /n /o /p 2{/.notdef}rp /s /t 139{/.notdef}rp]
ONVRII+ArialNarrow-Bold nf
ONVRII+ArialNarrow-Bold*1 [6.96 0 0 -6.96 0 0 ]msf
35.904 104.88 mo
(V)sh
181.8 115.32 mo
190.2 115.32 li
190.2 106.92 li
181.8 106.92 li
cp
@
ONVRIJ+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
184.46 113.26 mo
(1)sh
190.2 115.32 mo
198.36 115.32 li
198.36 106.92 li
190.2 106.92 li
cp
@
ONVRIJ+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
192.82 113.26 mo
(0)sh
198.36 115.32 mo
206.76 115.32 li
206.76 106.92 li
198.36 106.92 li
cp
@
%ADOBeginSubsetFont: PBAAAA+ArialNarrow-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ONVRII+ArialNarrow-Bold gcheck setglobal} if
1 1580 20 <000100850000029505c00009005ab53f054f050205b801a6401104e24002
01020608090501000c02010900b80154401a80010101010b050004f00402
10042004400450049004e0040604b90215000a10f65d713c11392f5dfd3c
103c003f3c3f3c3f5df4ed5d31302123110607353e0137330295e681a960
ce28ba04239144ff27c98300>ONVRII+ArialNarrow-Bold AddT42Char 
ONVRII+ArialNarrow-Bold /CharStrings get begin
/one 20 def
end
ONVRII+ArialNarrow-Bold /Encoding get
dup 49 /one put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ONVRII+ArialNarrow-Bold*1 
[42{/.notdef}rp /asterisk 6{/.notdef}rp /one 8{/.notdef}rp /colon 15{/.notdef}rp /J 
11{/.notdef}rp /V 12{/.notdef}rp /c /d /e 3{/.notdef}rp /i 
2{/.notdef}rp /l /.notdef /n /o /p 2{/.notdef}rp /s 
/t 139{/.notdef}rp]
ONVRII+ArialNarrow-Bold nf
ONVRII+ArialNarrow-Bold*1 [6 0 0 -6 0 0 ]msf
201.14 113.26 mo
(1)sh
207 115.32 mo
215.16 115.32 li
215.16 106.92 li
207 106.92 li
cp
@
ONVRIJ+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
209.57 113.26 mo
(0)sh
215.16 115.32 mo
223.56 115.32 li
223.56 106.92 li
215.16 106.92 li
cp
@
ONVRII+ArialNarrow-Bold*1 [6 0 0 -6 0 0 ]msf
217.92 113.26 mo
(1)sh
223.56 115.32 mo
231.96 115.32 li
231.96 106.92 li
223.56 106.92 li
cp
@
ONVRIJ+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
226.34 113.26 mo
(0)sh
ONVRIK+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
233.66 113.26 mo
(\205)sh
240.12 115.32 mo
248.52 115.32 li
248.52 106.92 li
240.12 106.92 li
cp
@
ONVRIJ+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
242.88 113.26 mo
(0)sh
248.52 115.32 mo
256.92 115.32 li
256.92 106.92 li
248.52 106.92 li
cp
@
ONVRIJ+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
251.23 113.26 mo
(0)sh
256.92 115.32 mo
265.32 115.32 li
265.32 106.92 li
256.92 106.92 li
cp
@
ONVRII+ArialNarrow-Bold*1 [6 0 0 -6 0 0 ]msf
259.66 113.26 mo
(1)sh
265.32 115.32 mo
273.72 115.32 li
273.72 106.92 li
265.32 106.92 li
cp
@
ONVRIJ+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
267.98 113.26 mo
(0)sh
273.72 115.32 mo
281.88 115.32 li
281.88 106.92 li
273.72 106.92 li
cp
@
ONVRIJ+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
276.34 113.26 mo
(0)sh
282.12 115.32 mo
290.28 115.32 li
290.28 106.92 li
282.12 106.92 li
cp
@
ONVRIJ+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
284.76 113.26 mo
(0)sh
290.28 115.32 mo
298.68 115.32 li
298.68 106.92 li
290.28 106.92 li
cp
@
ONVRIJ+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
293.09 113.26 mo
(0)sh
298.68 115.32 mo
307.08 115.32 li
307.08 106.92 li
298.68 106.92 li
cp
@
ONVRII+ArialNarrow-Bold*1 [6 0 0 -6 0 0 ]msf
301.44 113.26 mo
(1)sh
307.08 115.32 mo
315.48 115.32 li
315.48 106.92 li
307.08 106.92 li
cp
@
ONVRIJ+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
309.86 113.26 mo
(0)sh
315.48 115.32 mo
325.32 115.32 li
325.32 106.92 li
315.48 106.92 li
cp
@
ONVRIJ+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
319.22 113.26 mo
(0)sh
325.32 115.32 mo
335.16 115.32 li
335.16 106.92 li
325.32 106.92 li
cp
@
ONVRII+ArialNarrow-Bold*1 [6 0 0 -6 0 0 ]msf
329.06 113.26 mo
(1)sh
42.12 115.32 mo
51.48 115.32 li
51.48 106.92 li
42.12 106.92 li
cp
@
ONVRII+ArialNarrow-Bold*1 [6 0 0 -6 0 0 ]msf
45.36 113.26 mo
(1)sh
51.48 115.32 mo
60.6 115.32 li
60.6 106.92 li
51.48 106.92 li
cp
@
ONVRIJ+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
54.648 113.26 mo
(0)sh
60.84 115.32 mo
69.96 115.32 li
69.96 106.92 li
60.84 106.92 li
cp
@
ONVRIJ+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
64.032 113.26 mo
(0)sh
69.96 115.32 mo
79.32 115.32 li
79.32 106.92 li
69.96 106.92 li
cp
@
ONVRIJ+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
73.32 113.26 mo
(0)sh
79.32 115.32 mo
88.68 115.32 li
88.68 106.92 li
79.32 106.92 li
cp
@
ONVRIJ+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
82.608 113.26 mo
(0)sh
88.68 115.32 mo
98.04 115.32 li
98.04 106.92 li
88.68 106.92 li
cp
@
ONVRIJ+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
91.968 113.26 mo
(0)sh
98.04 115.32 mo
107.16 115.32 li
107.16 106.92 li
98.04 106.92 li
cp
@
ONVRIJ+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
101.28 113.26 mo
(0)sh
107.4 115.32 mo
116.52 115.32 li
116.52 106.92 li
107.4 106.92 li
cp
@
ONVRII+ArialNarrow-Bold*1 [6 0 0 -6 0 0 ]msf
110.64 113.26 mo
(1)sh
116.52 115.32 mo
125.88 115.32 li
125.88 106.92 li
116.52 106.92 li
cp
@
ONVRIJ+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
119.93 113.26 mo
(0)sh
125.88 115.32 mo
135.24 115.32 li
135.24 106.92 li
125.88 106.92 li
cp
@
ONVRIJ+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
129.22 113.26 mo
(0)sh
135.24 115.32 mo
144.6 115.32 li
144.6 106.92 li
135.24 106.92 li
cp
@
ONVRIJ+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
138.6 113.26 mo
(0)sh
144.6 115.32 mo
153.72 115.32 li
153.72 106.92 li
144.6 106.92 li
cp
@
ONVRII+ArialNarrow-Bold*1 [6 0 0 -6 0 0 ]msf
147.89 113.26 mo
(1)sh
153.96 115.32 mo
163.08 115.32 li
163.08 106.92 li
153.96 106.92 li
cp
@
ONVRII+ArialNarrow-Bold*1 [6 0 0 -6 0 0 ]msf
157.25 113.26 mo
(1)sh
163.08 115.32 mo
172.44 115.32 li
172.44 106.92 li
163.08 106.92 li
cp
@
ONVRIJ+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
166.54 113.26 mo
(0)sh
172.44 115.32 mo
181.8 115.32 li
181.8 106.92 li
172.44 106.92 li
cp
@
ONVRIJ+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
175.82 113.26 mo
(1)sh
335.16 115.32 mo
345 115.32 li
345 106.92 li
335.16 106.92 li
cp
@
ONVRIJ+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
338.9 113.26 mo
(0)sh
ONVRIK+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
347.5 113.26 mo
(\205)sh
353.64 115.32 mo
363.48 115.32 li
363.48 106.92 li
353.64 106.92 li
cp
@
ONVRIJ+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
357.43 113.26 mo
(0)sh
363.48 115.32 mo
373.32 115.32 li
373.32 106.92 li
363.48 106.92 li
cp
@
ONVRII+ArialNarrow-Bold*1 [6 0 0 -6 0 0 ]msf
367.3 113.26 mo
(1)sh
373.32 115.32 mo
383.16 115.32 li
383.16 106.92 li
373.32 106.92 li
cp
@
ONVRIJ+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
377.02 113.26 mo
(0)sh
383.16 115.32 mo
392.76 115.32 li
392.76 106.92 li
383.16 106.92 li
cp
@
ONVRIJ+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
386.81 113.26 mo
(0)sh
%ADOBeginSubsetFont: PBAAAA+ArialNarrow-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ONVRII+ArialNarrow-Bold gcheck setglobal} if
1 2838 37 <0003007a0000046905ba0011001d002800994042050c01090e9603960499
26a602c926e9260709090e01081e13120814135a282f1e011e1e111d125a
010002201f5a10110808051912001f1119a50505247e700b010bb8023040
181f6730115011020011101120110300111011201130110411b901920029
10f672715dedfd5ded7c392f18ed11123939111239003f3cfd3c3f3cfd3c
12392f5d3cfd3c390305103c3c3130005e5d5e5d711321321e0115140607
1e011514060706290113113332373e0135342e0123031133323e0135342e
01237a01e1c5a06e5e4b6b799a6949fef6fe67f2a090223e463951c08ce1
9454393d659c05ba48b6736aab2926b884a0dd1a1204c6fead050a554941
5114fdb9fe781f5b46485d23>ONVRII+ArialNarrow-Bold AddT42Char 
ONVRII+ArialNarrow-Bold /CharStrings get begin
/B 37 def
end
ONVRII+ArialNarrow-Bold /Encoding get
dup 66 /B put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ONVRII+ArialNarrow-Bold*1 
[42{/.notdef}rp /asterisk 6{/.notdef}rp /one 8{/.notdef}rp /colon 7{/.notdef}rp /B 
7{/.notdef}rp /J 11{/.notdef}rp /V 12{/.notdef}rp /c /d /e 
3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o /p 
2{/.notdef}rp /s /t 139{/.notdef}rp]
ONVRII+ArialNarrow-Bold nf
ONVRII+ArialNarrow-Bold*1 [6.96 0 0 -6.96 0 0 ]msf
35.664 114.05 mo
(B)sh
35.4 125.16 mo
(V)sh
43.08 126.84 mo
57.48 126.84 li
57.48 117.96 li
43.08 117.96 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
48.528 125.18 mo
($)sh
57.48 126.84 mo
71.88 126.84 li
71.88 117.96 li
57.48 117.96 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
57.48 126.84 mo
71.88 126.84 li
71.88 117.96 li
57.48 117.96 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
61.008 125.18 mo
(7:)
[3.11992 0 ]xsh
ONVRII+ArialNarrow-Bold*1 [6.96 0 0 -6.96 0 0 ]msf
65.808 125.18 mo
(*)sh
65.78 126.31 mo
67.94 126.31 li
67.94 125.83 li
65.78 125.83 li
cp
ef
72.12 126.84 mo
86.52 126.84 li
86.52 117.96 li
72.12 117.96 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
72.12 126.84 mo
86.52 126.84 li
86.52 117.96 li
72.12 117.96 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
74.112 125.18 mo
(11:)
[3.11992 3.11991 0 ]xsh
ONVRII+ArialNarrow-Bold*1 [6.96 0 0 -6.96 0 0 ]msf
82.056 125.18 mo
(*)sh
81.995 126.31 mo
84.155 126.31 li
84.155 125.83 li
81.995 125.83 li
cp
ef
86.52 126.84 mo
100.92 126.84 li
100.92 117.96 li
86.52 117.96 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
86.52 126.84 mo
100.92 126.84 li
100.92 117.96 li
86.52 117.96 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
88.536 125.18 mo
(12:)
[3.11992 3.11991 0 ]xsh
ONVRII+ArialNarrow-Bold*1 [6.96 0 0 -6.96 0 0 ]msf
96.456 125.18 mo
(*)sh
96.404 126.31 mo
98.564 126.31 li
98.564 125.83 li
96.404 125.83 li
cp
ef
100.92 126.84 mo
115.32 126.84 li
115.32 117.96 li
100.92 117.96 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
100.92 126.84 mo
115.32 126.84 li
115.32 117.96 li
100.92 117.96 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
102.96 125.18 mo
(14:)
[3.11992 3.11991 0 ]xsh
ONVRII+ArialNarrow-Bold*1 [6.96 0 0 -6.96 0 0 ]msf
110.88 125.18 mo
(*)sh
110.81 126.31 mo
112.97 126.31 li
112.97 125.83 li
110.81 125.83 li
cp
ef
115.32 126.84 mo
129.72 126.84 li
129.72 117.96 li
115.32 117.96 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
118.46 125.18 mo
(1:1)
[3.11803 1.67038 0 ]xsh
129.72 126.84 mo
144.12 126.84 li
144.12 117.96 li
129.72 117.96 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
132.86 125.18 mo
(2:1)
[3.11804 1.67036 0 ]xsh
144.36 126.84 mo
158.76 126.84 li
158.76 117.96 li
144.36 117.96 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
147.41 125.18 mo
(3:1)
[3.11804 1.67038 0 ]xsh
158.76 126.84 mo
173.16 126.84 li
173.16 117.96 li
158.76 117.96 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
161.83 125.18 mo
(6:2)
[3.11804 1.67036 0 ]xsh
173.16 126.84 mo
187.56 126.84 li
187.56 117.96 li
173.16 117.96 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
176.26 125.18 mo
(9:1)
[3.11804 1.67036 0 ]xsh
187.56 126.84 mo
201.96 126.84 li
201.96 117.96 li
187.56 117.96 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
189.36 125.18 mo
(10:2)
[3.11804 3.11803 1.67038 0 ]xsh
201.96 126.84 mo
216.6 126.84 li
216.6 117.96 li
201.96 117.96 li
cp
@
%ADOBeginSubsetFont: HIBBAA+ArialNarrow AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ONVRIJ+ArialNarrow gcheck setglobal} if
1 4220 44 <000100a00000013f05ba0003005b40442005700580059005a005c005d005
e005f0050910054005020201020300080203600100001000022000c000d0
00e000f000051000a000b000c000047000900002000005041112392f7271
5d5d3cfd3c003f3c3f3c313001715d33113311a09f05bafa4600>ONVRIJ+ArialNarrow AddT42Char 
1 4798 57 <000100080000045305ba000a00d1402b000c100c02500c600c900caf0cdf
0c05870388079800970a040603090746034907d104de060610041f0602b8
ff5a402005000a200001015f0205140202050a09095f0805140808050908
080202010205b8019a400c0a400a00080706080403020aba018700000187
b5052008af4009b801c4b5052002a54001b801c4400e206005df05021005
5005c0050305b901c5000b1910f4715d1afd1a18ed1a1910fd1a18ed1a19
10eded12393912393900183f3c1a10ed3f3c103c103c87052e2b7d10c487
2e182b7d10c42b0172715d5d71210133011617363701330101dafe2eac01
39241b1c240145a2fe2a05bafbd77c7479770429fa46>ONVRIJ+ArialNarrow AddT42Char 
1 5458 69 <0002006bffe8035e05ba0011001e00da40267f20011b40160e1b40071c25
080407111602001c570707010a16570e0b11120403030019670bb8021a40
270103730002005d300150016001700180019001a001b001c001d001f001
0b100140010210010101b90211001f10f65d7271ed3c10e410fded111217
39003fed3f3fed3f1139113931304379401a171b080d0925170d1955011b
08195501180c1655001a0a1c55012b2b012b2b2b81810049547940101d1e
05061e051c69051d06126900050401103c2b002b81810049547940100f15
14261310166904150f126900101101103c2b002b2b81015d33231133113e
0133321e011510022322262703141e01333236353426232206f489932f77
4966a764e2974c792c023c6e435b8d88635b8f05bafdf548477af8b1fef2
fedb4f4e0196a5a456cdccd1c4cd>ONVRIJ+ArialNarrow AddT42Char 
1 5772 70 <00010041ffe80338043e001900ac40206f1b7b0f7b19038b0f8b1902170c
9b0f9b190322080e910df411570a07009101b8015e40431757040b0e7a0d
73007a1001b001c001d0010400011001200130019001a001c00107100140
01600170019001c001d001e001f00109018e146780079007a007b0070407
b90100001a10f65dedfd5d7172edf4ed003fedfde43fedfde43130437940
181216050916051455001209145500150617550013081155012b2b012b2b
8181015d5d5d01170e0123220211101233321617072e0123220615141633
323602a79119c98dabdddfaf87b91a8f1568496d8f896b5477018517bec8
0119011301150115a8a81b6c6bc1d2d9c281>ONVRIJ+ArialNarrow AddT42Char 
1 6030 71 <00020037ffe8032b05ba0011001d00c7402b7f1f014f1f011b4015041b40
0b1b28080e0b01150f001b570b07000a1557040b01180e030f730010005d
11b8021a400f12674f07ef07020f079f07df070307b90100001e10f67271
edfded3c10e41739003fed3f3fed3f1139113931304379401c1c1d131405
0a092614051255001c0a12550013061555001d081b55012b2b012b2b2b81
8181004954794010191a0c0d190d1b69051a0c1869010d0e01103c2b002b
81810049547940101617020317021569041603186901020101103c2b002b
818101715d21350e0123220211343e013332161711331101141633323635
342623220602a1287e499ae164a766497d2994fda38f5f5e8a8a695d8686
4d5101230108b5fc7a4d45020efa460212cec8c0c2dfcdc5>ONVRIJ+ArialNarrow AddT42Char 
1 6324 72 <0002003affe8035d043e0013001b009640367f1da710b710037903890399
030331081500140114930e0f0f0419570a07009110010101f41257040b14
150f007a0173157a000e010eb80219b20f7a07b90100001c10f6edfd5ded
f4ed111239003fedfd5de43fed12392f3cfd713c313043794024161b0511
172611050f5500180b1555011a091455001006125500160c1955011b0819
55012b2b2b012b2b2b2b8181005d015d01170e0123220211101233321211
07211e013332012126272623220602c09826c793b9e5e7b1a9e201fd7609
946aa6fe5c01e60a31476e638c015617aaad0119010901130121fee4fef3
30b3b601fd8a4463a500>ONVRIJ+ArialNarrow AddT42Char 
1 6574 73 <000100130000021005d3001600a2401520183018401850187018ff180680
189018a018030cb8012140550e0ba20e8709011415150101029303131212
0404000301030616000a0c0b0b1314d71602e900111605165d0000100020
00300040005000c000d000e00009a000b000c00003700080009000030960
000139000018171112392f5e5d5e72715ded3c103c10e410f43c322f3900
3f3c3f5d3c103c103c10fd3c103c103c3fede510e43130015d5d33112335
3335343e0133321707262322061d0133152311968383346b513f4b162e29
4239aaaa039a8c717d7d42129d0a4561628cfc66>ONVRIJ+ArialNarrow AddT42Char 
1 6804 74 <00020033fe510332043e0020002c012e4042302e4f2ed02e037f2e017602
86029602a502b502051b40240c1b40142a4708090c17242a571407191806
24570c0a0191100020003000d0000400f404571e0f277318b80181403909
5d1a1a6019901902101901198e10017a009021676f107f108f109f10af10
bf10cf10df10ef1009ef10010f102f103f109f10df100510fe2d10f67271
5dedf4ed10fd715d3c10fdf6e4003fedfd5de43fed3f3c3fed1139123931
30437940342b2c22231b1d0d1305080e251c260708060802061226230d21
5500051d0955012b13215500220f245500081b0455002c112a55012b2b2b
012b2b2b2b2a2b2b81818181810049547940102829151628162a69052915
276901161701103c2b002b818100495479401025260a0b260a246904250b
2769010a0901103c2b002b8181005d015d711f011e013332363736350e01
232227263534123633321617353311140e01232226131416333236353426
23220650900a64596173150d3078499c677668a9694d7f318850b680a9b6
7e8a64648c90675c8b581a55535d5c38b445468498ffab0100784c4c80fc
6af5d179b6031fd1c0bccdc8c3c3>ONVRIJ+ArialNarrow AddT42Char 
1 7238 75 <0001006c0000033105ba0013007b4025150825083608031b40060f031302
01000f8706070a0b0b1313000a03120213090a0c0a5d0bb8016c400a0002
1301135d10000100b90211001410f65ded3c103c10f4ed3c103c11123939
003f3c103c103c3fed3f3c113931300049547940101011040511040f6905
1005126900040301103c2b002b8181005d331133113e0133321615112311
342623220615116c9334834f8ba1936256608705bafdf24949b1ecfd5f02
a18a789ac4fdbb00>ONVRIJ+ArialNarrow AddT42Char 
1 8244 81 <0001006c00000330043e001600744022160826083608031b400612031612
8706070201060c0d0d16000a0302160a0c5d0e0db8016c400a000273165d
0110000100b90211001710f65d3cfde410f43cfd3c111239003f3c3c103c
3f3c3fed1139313000495479401013140405140412690513051569000403
01103c2b002b8181005d331133153e0133321e0215112311342e01232206
15116c85308b5a46774924942855386a7e042697585737598e93fd730286
756c3b9ec0fdbc00>ONVRIJ+ArialNarrow AddT42Char 
1 9560 87 <00010021fff201c905990017009040122019301940195019701980199019
a019080cb8019040210d1009930f0a0600ec01c01687030b0e110d120b08
0c070f1010019000eb120a09b801354023070d120c125d000710078f07c0
0704000710072007300740075007bf07e007f0070907b90196001810f65d
71ed3c103c10fc3c10f6e43c103c1112393911123939003fedf5ed3f3cfd
3c2fe4313001015d25170623222626351123353311371133152311141716
333201b5143d314d5e236c6c9395950d133419a19f103d6a9e02638c0107
6cfe8d8cfd9356192400>ONVRIJ+ArialNarrow AddT42Char 
1 9780 88 <00010069ffe8032b04260016007d4027190628063806870d970d051e400f
04010a1514140a0a090616000a0f87040b011415165d147300b8016c400a
080a0b090b5d10080108b90211001710f65ded3c103c10f4e4fd3c123900
3fed3f3c3f3c103c103c1139313000495479401210120203112512020f69
041003136901020101103c2b002b2b8181005d21350e0123222e01351133
11141e01333237363511331102a7338a57679231932159396a443a949c5a
5a6faa930292fdb3a46f43574bc80239fbda>ONVRIJ+ArialNarrow AddT42Char 
1 9978 90 <00010002000004ad04260011016e405d9d009d059a0695079208910d9c0e
9311080910081119101811040f132f133f138013bf13cf13ff1307480fda
00db05db06d407d508d50dd90e081404100953099004900905020402090f
104304430983048309d304d30909ed10060720b8ff23b3090e0d20b8ff20
406304001120000402027801001401010007100e0e9b0907140909070d09
0b0b780c0d140c0c0d061011119b0406140404060991041010010404000c
0b0b0707060602020106110e0e0d0d000a07100b0c0902010610040d0e09
110004300c400c500c030cb80159400a203f09af09022f090109b8015140
092f10013f10af100210b801514009403004400450040304b80159b420bf
010101b90181001210f65d1a19fd5d1a18fd715dfd5d711a19ed5d113333
1133331112391239111239123900183f3c103c103c3f3c103c103c103c10
3c12392f11392f10e487052e2b877dc4872e182b877dc4872e182b877dc4
872e182b877dc42b2b2b313000717201715d5d7221013313173713331317
3713330123032703010cfef6998a332e8a98822c329590feef998b21b004
26fd9be4db026efd98cbcd0266fbda027cb5fccf>ONVRIJ+ArialNarrow AddT42Char 
1 10418 92 <0001001bfe510339042600170151406b2f193f19490549134f1959055913
6805691378057913870b9905970b9813f70bf80f11870b890fd50bd80edb
0f056019a019bf19f019040019401902440d820dd20d03160d560d900d03
120808090d100d0a10070d0a0d0f0a780908140909080710107811121411
11120db8010f400d080a1110100a0a090600911601ba01830003014b400a
160f121007080d007301b801ad40150d117a001010107f10038f10a01002
0f101f100210b8015040160d097a400f0a1f0a700a03800aaf0a02000a10
0a020ab80150402b100d600df00d03000d400d500d900da00de00df00d07
300d400d500d700d800dd00d0609100d600d02390db8010fb118201a1910
fd5e5d5e72715df472715d1a18ed1910f472715d18ed1910f418e4123939
1139003ffde610e43f3c103c103c3fed87052e2b0e7d10c487052e182b08
7d10c4870810c408c4002e313000727101715d715d132716333236373637
013313161736371333010e022322681031232f3d140733feb59fb6221d19
23ba94feb5414b5f3c2afe67a91026280ea20428fd9973837c76026bfbc8
d28d3e00>ONVRIJ+ArialNarrow AddT42Char 
ONVRIJ+ArialNarrow /CharStrings get begin
/I 44 def
/V 57 def
/b 69 def
/c 70 def
/d 71 def
/e 72 def
/f 73 def
/g 74 def
/h 75 def
/n 81 def
/t 87 def
/u 88 def
/w 90 def
/y 92 def
end
ONVRIJ+ArialNarrow /Encoding get
dup 73 /I put
dup 86 /V put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 110 /n put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 121 /y put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ONVRIJ+ArialNarrow*1 
[32{/.notdef}rp /space 3{/.notdef}rp /dollar 3{/.notdef}rp /parenleft 7{/.notdef}rp /zero 
/one /two /three /four /five /six /seven /eight 
/nine /colon 11{/.notdef}rp /F 2{/.notdef}rp /I 12{/.notdef}rp /V 
10{/.notdef}rp /a /b /c /d /e /f /g 
/h /i 2{/.notdef}rp /l /.notdef /n /o /p 
/.notdef /r /s /t /u /.notdef /w /.notdef 
/y 134{/.notdef}rp]
ONVRIJ+ArialNarrow nf
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
203.76 125.18 mo
(13:2)
[3.14587 3.14587 1.69823 0 ]xsh
ONVRIJ+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
63.744 132.46 mo
(1)sh
78.168 132.46 mo
(2)sh
92.712 132.46 mo
(3)sh
107.14 132.46 mo
(4)sh
121.54 132.46 mo
(5)sh
136.08 132.46 mo
(6)sh
150.5 132.46 mo
(7)sh
165.05 132.46 mo
(8)sh
179.47 132.46 mo
(9)sh
192.67 132.46 mo
(10)
[2.63997 0 ]xsh
207.22 132.46 mo
(11)
[2.63997 0 ]xsh
48.768 132.46 mo
(0)sh
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
219.1 125.11 mo
(Vocabulary with no holes)
[3.83495 3.11803 2.87451 3.11803 3.11804 3.11804 .960526 3.11804 1.90004 2.65874 2.87447 4.07852 
1.19717 1.67036 3.11804 1.67038 3.11804 3.11804 1.91397 3.11804 3.11801 .960541 3.11804 0 
]xsh
%ADOBeginSubsetFont: PBAAAA+ArialNarrow-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ONVRII+ArialNarrow-Bold gcheck setglobal} if

1 0 3 <> ONVRII+ArialNarrow-Bold AddT42Char 
1 418 7 <0003003aff33035c0630001f0025002b0188403e7616840402901f014f00
4f014f204f258f008f018f208f25085f005f015f205f259f009f019f209f
2508012b1025042000190818071ca2701d01001d011dbb0223001a000001
0b4009502601002601266a18ba014a001a010bb4170d0ca20dbb02220009
000f010b40135f20010f2001206a0f074f07025f079f070207b80138400b
090605172b0f081a012008b801904075060f071f072f0703070714032f0d
3f0d4f0d5f0d6f0dcf0ddf0d070c0d019f0d010dcd0c0c2f293f294f295f
296f29cf29df29070c290129cd14201d301d401d501d601dc01dd01d0703
1d011dcd1c1c2c20233023402350236023c023d0230703230123cd2f1460
147f148f14040014019f140114b80214401d200330034003500370038003
06e00301400360038003b0030490030103b9013b002c10f672715d5ded72
715ded715d7c12392f18ed715d10fd715d7c392f18ed72715d1112392f72
3ced3c3c3c103c3c3c003f3cec7271fd715de410f5e43fe4ecfd715de410
f5715de4111239391112173931300172715d005d25112411343637353315
1e011707262711161716151406071523352403371e01130e01151417133e
013534270192fec9af88767f9e15cf1350bf4451b89c76fed931d60d482d
2e3c6a763c4f8bd901a36c0151acd810636313af9a217729fe793f5c6ea9
bcf21bbbb62b01871c4f750400135e397838fd320d6d4d8e3100>ONVRII+ArialNarrow-Bold AddT42Char 
1 7956 85 <0001006f000002a3043e0010007b401e000400050250056005700503df12
010f121f12020a090701000a0203060cb80159402c07070a09000901080d
09df09020909128f120110005b0101039d5002900202e002012002300240
0250020402b90113001110f65d7172ed3c10fd3c5d11332f715e5d5e3300
3fed3f3c3f3c1133323130015d71005d7121231133153e01333217072623
220e01150156e7d63757394f484839333049200426976a4535f52e47baf9
>ONVRII+ArialNarrow-Bold AddT42Char 
1 8970 88 <00010073ffe8038b042600160080403d2a063a06ca06da0604750601f407
01100701010416000a0f57040b1514140a09060101135b2f16011016012f
164f165f168f16af16cf16df16ef160816b8020e40160b5b30085008021f
0830080220083008400850080408b90113001710f65d7172edfd5d7172fd
392f003f3c3c103c3fed3f3c1139313000715d01715d21350e0123222e01
35113311141e0133323e013511331102b5309c55568843e71548333a621f
e69f56615aa69e02a0fe18d1713e517fd801c0fbda00>ONVRII+ArialNarrow-Bold AddT42Char 
ONVRII+ArialNarrow-Bold /CharStrings get begin
/space 3 def
/dollar 7 def
/r 85 def
/u 88 def
end
ONVRII+ArialNarrow-Bold /Encoding get
dup 32 /space put
dup 36 /dollar put
dup 114 /r put
dup 117 /u put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ONVRII+ArialNarrow-Bold*1 
[32{/.notdef}rp /space 3{/.notdef}rp /dollar 5{/.notdef}rp /asterisk 6{/.notdef}rp /one 
8{/.notdef}rp /colon 7{/.notdef}rp /B 7{/.notdef}rp /J 11{/.notdef}rp /V 
12{/.notdef}rp /c /d /e 3{/.notdef}rp /i 2{/.notdef}rp /l 
/.notdef /n /o /p /.notdef /r /s /t 
/u 138{/.notdef}rp]
ONVRII+ArialNarrow-Bold nf
ONVRII+ArialNarrow-Bold*1 [6.96 0 0 -6.96 0 0 ]msf
365.71 59.74 mo
(user trips )
[3.5914 3.11804 3.11804 2.15759 1.91397 1.90005 2.1785 1.67038 3.5914 3.11804 0 ]xsh
ONVRIJ+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
348.67 66.94 mo
(Including the trailing)
[1.43399 2.63995 2.40002 .960052 2.63995 2.63995 .960052 2.63995 2.63995 2.39398 1.43399 2.63995 
2.63995 1.43399 1.43399 1.67398 2.63995 .960022 .960052 .960052 2.63995 0 ]xsh
ONVRII+ArialNarrow-Bold*1 [6 0 0 -6 0 0 ]msf
362.11 74.14 mo
($)sh
ONVRIJ+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
366.19 74.14 mo
(for each trip)
[1.43399 2.63995 1.67398 1.43396 2.63998 2.63995 2.40002 2.63995 1.67398 1.43399 1.67395 .960052 
0 ]xsh
351.72 55.92 mo
351.72 53.6 353.65 51.72 356.04 51.72 cv
358.43 51.72 360.36 53.6 360.36 55.92 cv
360.36 58.24 358.43 60.12 356.04 60.12 cv
353.65 60.12 351.72 58.24 351.72 55.92 cv
cp
ef
351.72 55.92 mo
351.72 53.6 353.65 51.72 356.04 51.72 cv
358.43 51.72 360.36 53.6 360.36 55.92 cv
360.36 58.24 358.43 60.12 356.04 60.12 cv
353.65 60.12 351.72 58.24 351.72 55.92 cv
cp
@
1 /0 /CSD get_res sepcs
0 sep
ONVRII+ArialNarrow-Bold*1 [6.96 0 0 -6.96 0 0 ]msf
354.58 58.56 mo
(1)sh
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+ArialNarrow-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ONVRII+ArialNarrow-Bold gcheck setglobal} if
1 954 11 <00010057fe5101f805d3000e003e402701001208071001840072078408cc
0b7d2004300450047004043f044f045f047f04af04ef040604b90200000f
10f6715dfdf4edf4ed003f3c3f3c31300123260235341237330a01151413
1601f69e7c85867e9d73513928fe51e101f7ecff01e5dafec8fe5ceaf2fe
f2be>ONVRII+ArialNarrow-Bold AddT42Char 
1 1076 12 <00010037fe5101d805d3000e0062404a0807100e00120b7d04cc08840772
0e8420003000700080009000a000b000c000d000e0000a10002000300040
0050006000700080009000a000b000c000d000e000f0000f000010000200
b90135000f10f672715dedf4edf4ed003f3c3f3c31301336371235340203
331612151402073961273a51739d8183827ffe51fcbb0110f5ea01a40138
e2fe20eff0fe05e6>ONVRII+ArialNarrow-Bold AddT42Char 
1 5432 68 <0002003cffe8036d043e0020002e011c40460f00051605170a198f218f22
8f238f248c258528d6050b24063406aa18e516e517f516f5170715064912
591203d607010f214f218f21df21045f21ef21ff21031f215d210221b801
1c403f401a501a02021a421a861a9e1aaf1a051a1a1e0c0d0a502ae02af0
2a03462a01112a012a57110b01813f00010f001f002f0003090f0001081f
00011f000100b8014140375f1eef1eff1e031e1e011e5704070f30012e1a
5b9f08af08bf08cf08df08ef080608c30d9e300c500c800c900ca00cb00c
d00ce00c080cb8023740131482000100cf018b2027302702276170140114
b901f1002f10f65ded5df4ed7110fd5dedf45dfd3c71003ffd725df47271
5e5d5e5d5de43fed72715d3f3c11392f715ded725d71313001715d005d71
01273e0133321e01150314161723270e0123222635343e01373637342e01
23220601060706070615141633323e01350125d126afa4929a4202161ee4
1e3b874c7fa2427884a03f19433d3e47011e2c5d6b2121493731602502e2
2ea18d528dbafeb88a874c744646ab8e5a86501f252058372338fecf1218
1c2222363d53435c7900>ONVRII+ArialNarrow-Bold AddT42Char 
1 5862 69 <0002006effe803c105ba0010001d00784052760b86079607035b045b0e66
07660b6b0e7607061b57060702010010000a15570c0b110f031018614f09
680970090309b20002035b109d0130000120003000400050000430004000
50006000800090000600b90113001e10f6725d713cedfd3c10fd5ded1112
3939003fed3f3c3f3c3fed3130015d5d331133113e013332121110022322
26271513141e013332363534262322066ee7357f499ad5da934b92330f34
60354c6c6d54507005bafdf04a4afeeafef1fef2fedd5c589c022a89904b
9facb5a19c00>ONVRII+ArialNarrow-Bold AddT42Char 
1 6894 73 <000100140000026005d300160098406e2404016904790489040339044a04
59040315161102141216110e130f00100e13010010021408090b570f0601
0601110f168f160216b810000613140a9f18010f18010900080108c31110
860e135b020f141f142f14bf14df140514c6164f00012000300040005000
8f009f0006002f5d713cfc713cfd3cf43cf47132715d003f3c3f3cfd713c
3f5dfd32330f0f0f0f3130015d5d005d133335343e013332170726232206
1d01331523112311231480377b5a625e1e3833312cacace6800426509182
4a24c41038524bddfcb70349>ONVRII+ArialNarrow-Bold AddT42Char 
1 9172 92 <0001000bfe51038a0426001200ed405c40024b105002c002043402500202
39025a02022a053a0547024e054c06431256025f055b0650128802970294
12a606b606ca05ce11e602f7121305020012120002031102030201037004
051404040502010203017000121400001202b802094009120a0403030100
060cbb017e000a000d018240230f7a0a0f0f14010503111201020c8b0d0d
0200039e405f040150048f04cf04df040404b80218b350020102b80207b1
20002f1a19fd5dfd5d711a18ed1112392fe411123939123971003ffde610
e43f3c3c103c3fed87052e2b087d10c487052e182b087d10c487c408c400
11392e3130015d7100715d13331b013301070e0223222f0116333236370b
f6cfcceefecd3b274d7757434014362b42551b0426fd0e02f2fc02c77068
3811dc0d5874>ONVRII+ArialNarrow-Bold AddT42Char 
ONVRII+ArialNarrow-Bold /CharStrings get begin
/parenleft 11 def
/parenright 12 def
/a 68 def
/b 69 def
/f 73 def
/y 92 def
end
ONVRII+ArialNarrow-Bold /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 97 /a put
dup 98 /b put
dup 102 /f put
dup 121 /y put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ONVRII+ArialNarrow-Bold*1 
[32{/.notdef}rp /space 3{/.notdef}rp /dollar 3{/.notdef}rp /parenleft /parenright /asterisk 
6{/.notdef}rp /one 8{/.notdef}rp /colon 7{/.notdef}rp /B 7{/.notdef}rp /J 
11{/.notdef}rp /V 10{/.notdef}rp /a /b /c /d /e 
/f 2{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o 
/p /.notdef /r /s /t /u 3{/.notdef}rp /y 
134{/.notdef}rp]
ONVRII+ArialNarrow-Bold nf
ONVRII+ArialNarrow-Bold*1 [6.96 0 0 -6.96 0 0 ]msf
309.94 128.38 mo
(Vocabulary of pairs \()
[3.83493 3.59143 3.11801 3.11804 3.59143 3.5914 1.67038 3.11804 2.15759 3.11804 1.91397 3.5914 
1.90005 1.46158 3.5914 3.11804 1.67038 2.15759 3.11804 1.91397 0 ]xsh
367.32 128.38 mo
(stop:line)
[3.11804 1.90002 3.6123 3.5914 1.90005 1.69125 1.67038 3.5914 0 ]xsh
391.58 128.38 mo
(\))sh
299.16 124.68 mo
299.16 122.29 301.04 120.36 303.36 120.36 cv
305.68 120.36 307.56 122.29 307.56 124.68 cv
307.56 127.07 305.68 129 303.36 129 cv
301.04 129 299.16 127.07 299.16 124.68 cv
cp
ef
299.16 124.68 mo
299.16 122.29 301.04 120.36 303.36 120.36 cv
305.68 120.36 307.56 122.29 307.56 124.68 cv
307.56 127.07 305.68 129 303.36 129 cv
301.04 129 299.16 127.07 299.16 124.68 cv
cp
@
1 /0 /CSD get_res sepcs
0 sep
%ADOBeginSubsetFont: PBAAAA+ArialNarrow-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ONVRII+ArialNarrow-Bold gcheck setglobal} if
1 1712 21 <0001002a0000035205c0001c006840328713010713681178110309071301
080fa20ee20c6a1205001cfa01020c051c401c02b01c011c020989151500
400150010201b8021340091e0e890f974f020102b9022d001d10f671f4ed
10f65d3c3c10ed11335d71003f3cfd3c3ffdf4e43130015e5d5e5d5d0111
21361237363736353426232207273e0133321615140e01070e01070352fc
d80d85c09823345646990ce515cfacbdc03166776f3b120105fefb94010b
d9ad3d595a6062e51ce0d2f69f5aa9ab857d5026>ONVRII+ArialNarrow-Bold AddT42Char 
ONVRII+ArialNarrow-Bold /CharStrings get begin
/two 21 def
end
ONVRII+ArialNarrow-Bold /Encoding get
dup 50 /two put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ONVRII+ArialNarrow-Bold*1 
[32{/.notdef}rp /space 3{/.notdef}rp /dollar 3{/.notdef}rp /parenleft /parenright /asterisk 
6{/.notdef}rp /one /two 7{/.notdef}rp /colon 7{/.notdef}rp /B 7{/.notdef}rp 
/J 11{/.notdef}rp /V 10{/.notdef}rp /a /b /c /d 
/e /f 2{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n 
/o /p /.notdef /r /s /t /u 3{/.notdef}rp 
/y 134{/.notdef}rp]
ONVRII+ArialNarrow-Bold nf
ONVRII+ArialNarrow-Bold*1 [6.96 0 0 -6.96 0 0 ]msf
301.92 127.37 mo
(2)sh
1 /0 /CSD get_res sepcs
1 sep
ONVRIJ+ArialNarrow*1 [6 0 0 -6 0 0 ]msf
68.328 56.14 mo
(1)sh
82.92 56.14 mo
(2)sh
97.608 56.14 mo
(3)sh
112.2 56.14 mo
(4)sh
126.77 56.14 mo
(5)sh
141.48 56.14 mo
(6)sh
156.07 56.14 mo
(7)sh
170.76 56.14 mo
(8)sh
185.35 56.14 mo
(9)sh
198.72 56.14 mo
(10)
[2.63997 0 ]xsh
213.43 56.14 mo
(11)
[2.63997 0 ]xsh
228.02 56.14 mo
(12)
[2.63997 0 ]xsh
242.71 56.14 mo
(13)
[2.63997 0 ]xsh
257.3 56.14 mo
(14)
[2.63995 0 ]xsh
271.87 56.14 mo
(15)
[2.63995 0 ]xsh
286.58 56.14 mo
(16)
[2.63995 0 ]xsh
301.18 56.14 mo
(17)
[2.63995 0 ]xsh
315.74 56.14 mo
(18)
[2.63995 0 ]xsh
330.46 56.14 mo
(19)
[2.63995 0 ]xsh
66.144 142.39 mo
(1)sh
80.712 142.39 mo
(2)sh
95.424 142.39 mo
(3)sh
109.99 142.39 mo
(4)sh
124.58 142.39 mo
(5)sh
139.3 142.39 mo
(6)sh
153.86 142.39 mo
(7)sh
168.58 142.39 mo
(8)sh
183.14 142.39 mo
(9)sh
196.54 142.39 mo
(10)
[2.63997 0 ]xsh
211.25 142.39 mo
(11)
[2.63997 0 ]xsh
225.82 142.39 mo
(12)
[2.63997 0 ]xsh
240.53 142.39 mo
(13)
[2.63997 0 ]xsh
255.1 142.39 mo
(14)
[2.63995 0 ]xsh
269.69 142.39 mo
(15)
[2.63995 0 ]xsh
284.38 142.39 mo
(16)
[2.66397 0 ]xsh
298.97 142.39 mo
(17)
[2.63995 0 ]xsh
313.54 142.39 mo
(18)
[2.63995 0 ]xsh
328.25 142.39 mo
(19)
[2.63995 0 ]xsh
%ADOBeginSubsetFont: PBAAAA+ArialNarrow-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ONVRII+ArialNarrow-Bold gcheck setglobal} if
1 2554 36 <00020000000004b605ba0007000a00e340603b003b05023d0632073f0830
0a5b065407d607e906e60709c906c607d90603290626070208020101090a
030404090709010169000714000007060904046905061405050609070203
5a40080a0a0b00010104040508060702400c5f0cb00c0307ba020d000602
0c4014092001e440600001340054008000c000f0000500b8020b400f6009
01340954098009c009f0090509b8020bb52004e405050b103c10ed1a19fd
5d71fd5d711a18ed1a1910fd18f65d003f3c3f3c103c103c11392f3c1afd
3c123987052e2b877dc4872e182b877dc407103c3c8710c4c4313001715d
5d005d212103210321012113030304b6fef869fe2063fefe01d4010122a5
a3014dfeb305bafc8a0220fde000>ONVRII+ArialNarrow-Bold AddT42Char 
1 3120 38 <00010050ffe7046705d3001c00a64024990a99160248024506450a480e04
38023506350a0328022606260a0316151619191b0310ba01870011015540
0a14750c033f014f010201b8018bb79000e000f0000300b801b2400a1a75
04095f1e0111a510b8010ab700a540015f010201b80233401d177e4f0850
08025f087f088f089f08af08bf08cf08df08ef08ff080a08b90189001d10
f6715dedfd5dedf4ed5d003ffdf45de45d3ffdf4e43130015d5d5d5d005d
0117060423222726111037363332171617072e0123220611101633323603
7ceb37ff00bbeb92a8a993f8ca88612df017895d85a8a483608c021b5bf6
e3b5d101630177d4b88a62c146777fe8fef5feebea95>ONVRII+ArialNarrow-Bold AddT42Char 
1 3382 39 <000200790000046905ba000c001a00884042ea11fa110257035511a81603
39084904490803280428083904031a0d5a0100020f0e5a0b0c080d000e0c
147e2f067006ef06030f062f068f06af0604500670060206b80230401a0e
67200c300c500c03000c100c200c03000c100c200c300c040cb90192001b
10f672715dedfd72715ded11123939003f3cfd3c3f3cfd3c3130015d5d5d
005d1321321e01121514020e012321131133323e0235342e012726237901
bba8ab90525684bb93fe38f2b67569432c2d5f44339205ba4bb2fee4d3be
fee7a45304c2fc352c59c09da3bc6c110d00>ONVRII+ArialNarrow-Bold AddT42Char 
1 4194 54 <0001003dffe6040e05d30028014e401d2921690a891086209a0a9920b228
db1f084505016b1f014700011f2121b8015b4042090b1409090b09090a0b
180b390b4b094a0b5b095d0b8b098b0b9b0bad09ad0bdd09ef09ed0b1069
0988099b09a90bd90be809fb0b075a0b6a0b02090b211f040115ba012c00
16021db71975f71201120300b8012c402e00011001400150010440015001
600180019001a001c001d001e001092001510160019001a501d401e301f5
010801b8021c4035037527094f2a01090b211f04240e16a5791589150215
1506a52401a5560076008600030000293f245f2460248024a02405452401
24b8021b40261ca5000e01200e300e420e500e600e700e800e900ec00ee0
0e0a200e300e500ec00e040ef22910f45d7172eded715d7c12392f185ded
10fd7c392f185ded111217395d003fedf55d7172e43f5dedf5e412173972
5d71870e2e2b0e7d10c4313001715d00715d13371233323635342e01272e
0235343e0133321617072e0123220615141716171e0215140223203ded28
de6e7e2c5aad9b90556dc08dd4ee07f3106a62626a3030adb7a356ebfafe
4601dd1cfee7735532462d352f6eb36778c062e6d60d765e523d3c292931
3575b984bffefc00>ONVRII+ArialNarrow-Bold AddT42Char 
ONVRII+ArialNarrow-Bold /CharStrings get begin
/A 36 def
/C 38 def
/D 39 def
/S 54 def
end
ONVRII+ArialNarrow-Bold /Encoding get
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 83 /S put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ONVRII+ArialNarrow-Bold*1 
[32{/.notdef}rp /space 3{/.notdef}rp /dollar 3{/.notdef}rp /parenleft /parenright /asterisk 
6{/.notdef}rp /one /two 7{/.notdef}rp /colon 6{/.notdef}rp /A /B 
/C /D 5{/.notdef}rp /J 8{/.notdef}rp /S 2{/.notdef}rp /V 
10{/.notdef}rp /a /b /c /d /e /f 2{/.notdef}rp 
/i 2{/.notdef}rp /l /.notdef /n /o /p /.notdef 
/r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]
ONVRII+ArialNarrow-Bold nf
ONVRII+ArialNarrow-Bold*1 [6.96 0 0 -6.96 0 0 ]msf
53.328 150.65 mo
(S)sh
53.088 161.4 mo
(A)sh
53.16 178.13 mo
(D)sh
36.312 210.5 mo
(Jcodes)
[3.11803 3.11804 3.59141 3.59141 3.11803 0 ]xsh
ONVRII+ArialNarrow-Bold*1 [6.984 0 0 -6.984 0 0 ]msf
353.64 165.6 mo
(CSA built on S)
[4.07861 3.82025 4.09955 1.67615 3.58984 3.58981 1.67615 1.67612 1.90662 1.45264 3.58984 3.58981 
1.43869 0 ]xsh
344.04 160.44 mo
344.04 158.05 345.92 156.12 348.24 156.12 cv
350.56 156.12 352.44 158.05 352.44 160.44 cv
352.44 162.83 350.56 164.76 348.24 164.76 cv
345.92 164.76 344.04 162.83 344.04 160.44 cv
cp
ef
344.04 160.44 mo
344.04 158.05 345.92 156.12 348.24 156.12 cv
350.56 156.12 352.44 158.05 352.44 160.44 cv
352.44 162.83 350.56 164.76 348.24 164.76 cv
345.92 164.76 344.04 162.83 344.04 160.44 cv
cp
@
1 /0 /CSD get_res sepcs
0 sep
%ADOBeginSubsetFont: PBAAAA+ArialNarrow-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ONVRII+ArialNarrow-Bold gcheck setglobal} if
1 1912 22 <0001003fffe7035e05c0002900d24045061c01051c0109051c01080c210d
6a100a01000a700a02500a800ae00af00a040a0a140400a2000101600170
018001f0010401e2046a270d18a20f178f1702090f17010817b8014a4027
146a1b05211e110d0c0c24001189501e901ea01eb01ec01ed01ee01e071e
1e07d2402450240224b8021340172b10170117cd18181001010189600070
00800090000400b90213002a10f65ded727d392f18ed7210f65dfd7c392f
1871ed1112392f33111239003ffdf45e5d5e5de43ffdf45d71e41112392f
5d7172ed39333130005e5d5e5d7113371e01333236353426232207371637
3635342623220607273e01333216151406071e011514022322263fdf0960
4147625e432c3d195934334a3a3a5508d521c092a4c15757657fefa59edb
018521686e82736b7a15e50232325b4c5663612cc9b6ea8e609a3a1bb88a
c9fef9de>ONVRII+ArialNarrow-Bold AddT42Char 
ONVRII+ArialNarrow-Bold /CharStrings get begin
/three 22 def
end
ONVRII+ArialNarrow-Bold /Encoding get
dup 51 /three put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ONVRII+ArialNarrow-Bold*1 
[32{/.notdef}rp /space 3{/.notdef}rp /dollar 3{/.notdef}rp /parenleft /parenright /asterisk 
6{/.notdef}rp /one /two /three 6{/.notdef}rp /colon 6{/.notdef}rp /A 
/B /C /D 5{/.notdef}rp /J 8{/.notdef}rp /S 2{/.notdef}rp 
/V 10{/.notdef}rp /a /b /c /d /e /f 
2{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o /p 
/.notdef /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]
ONVRII+ArialNarrow-Bold nf
ONVRII+ArialNarrow-Bold*1 [6.96 0 0 -6.96 0 0 ]msf
346.82 163.2 mo
(3)sh
.72 lw
37.08 87.24 mo
391.46 87.24 li
1 /0 /CSD get_res sepcs
1 sep
@
37.08 135.48 mo
391.46 135.48 li
@
37.08 200.76 mo
391.46 200.76 li
@
51.96 182.28 mo
51.96 182.82 52.069 183.24 52.315 183.72 cv
52.589 184.17 52.889 184.48 53.326 184.74 cv
53.764 185.02 54.201 185.13 54.693 185.13 cv
54.72 185.13 li
55.212 185.13 55.649 185.02 56.086 184.74 cv
56.524 184.48 56.824 184.17 57.097 183.72 cv
57.343 183.24 57.453 182.82 57.453 182.28 cv
@
54.84 188.04 mo
54.84 182.76 li
@
50.76 191.64 mo
50.76 192.13 50.884 192.52 51.162 192.96 cv
51.47 193.37 51.81 193.66 52.305 193.89 cv
52.799 194.15 53.293 194.25 53.849 194.25 cv
53.88 194.25 li
54.436 194.25 54.93 194.15 55.425 193.89 cv
55.919 193.66 56.259 193.37 56.568 192.96 cv
56.846 192.52 56.969 192.13 56.969 191.64 cv
@
53.88 197.16 mo
53.88 191.88 li
@
.48 lw
58.32 190.08 mo
58.56 192.96 li
@
%ADOBeginSubsetFont: PBAAAA+ArialNarrow-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ONVRII+ArialNarrow-Bold gcheck setglobal} if
1 3750 48 <000100770000050005ba000c018540a110031f081f0b50035f085f0b9003
9f089f0bd003df08df0b0c00030f080f0b460240034f084f0b80038f088f
0bd003df08df0b0d2f033f034f03b003041608190bd402dc04d409dc0a06
04020a0405090a0a460844094b0a490b83028a04860880098f0a8a0bd702
d608d90b1120022f0430023f0440024f0454025b0453095c0a63026b0463
096c0a73027b0473097c0ab902b403b409b30ac402cb0418084003b8ffc0
40560b40040809098f0304140303040a0302028f0b0a140b0b0a0b080303
00050204010c0906030700040102070a00081f0e016f0e8f0e9f0ecf0e04
0409080a02030b08070b0c07d0405f068f06cf06034406011f060106b802
1940105f038f03bf03cf03044403011f030103b80219401b200cd0000010
005000030000100020007000042000300050000300b90192000d10f65d71
72ed1a19fd72715dfd72715d1a18ed103c103c111239391139395d72003f
3c3c3f3c111217391112393912173987052e2b877dc4872e182b877dc400
3838383130015d7172005d71723311211b01211123110323031177016bda
d8016ce1efeaed05bafc1803e8fa460482fb7e0482fb7e00>ONVRII+ArialNarrow-Bold AddT42Char 
1 4912 58 <000100050000062f05ba000c01cb40c1100310061f0b500350065f0b9003
90069f0bd003d006df0b0c000300060f0b400340064f0b800380068f0bd0
03d006df0b0c2906a70b021e001d04130510099e009d0493059009de00dd
04d305d0090c09000a04040505090b0a050c4a004b044505440969046505
8a008b0485058409970511d900d609e900e609045e0451056e04610504cf
04c005cc0ac40c045f0a500c6f0a600c04550ca80af80c0318095a0ad80c
e80c041700180317060308030806090b700e040908030806090b030803bd
012c00060006ffe00003ffe040780b2009060707690809140808090a0605
05790b0a140b0b0a040b0c0c790304140303040003020269010014010100
03060b03010a0c09000204050704080801020900084f0e5f0e600e900e04
0709080a0506040c0b000203014006500660067006040606080b03030110
08400802240834087008c4080408b8021f400f140b400b02240b340b700b
c40b040bb8021fb120012f1a19fd5d71ed5d7112392f1112392f5d111239
391139391239391139395d00183f3c3f3c1217391112393912173987052e
2b877dc4872e182b877dc4872e182b877dc4872e182b877dc40038383831
30001810e4015e5d5e5d5d5d5d5d5d5d5d7172005d71722101331b01211b
013301210b010124fee1f9b4dc0121d3b9f4fedcfefef0ee05bafc1103ef
fc000400fa460448fbb8>ONVRII+ArialNarrow-Bold AddT42Char 
ONVRII+ArialNarrow-Bold /CharStrings get begin
/M 48 def
/W 58 def
end
ONVRII+ArialNarrow-Bold /Encoding get
dup 77 /M put
dup 87 /W put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ONVRII+ArialNarrow-Bold*1 
[32{/.notdef}rp /space 3{/.notdef}rp /dollar 3{/.notdef}rp /parenleft /parenright /asterisk 
6{/.notdef}rp /one /two /three 6{/.notdef}rp /colon 6{/.notdef}rp /A 
/B /C /D 5{/.notdef}rp /J 2{/.notdef}rp /M 5{/.notdef}rp 
/S 2{/.notdef}rp /V /W 9{/.notdef}rp /a /b /c 
/d /e /f 2{/.notdef}rp /i 2{/.notdef}rp /l /.notdef 
/n /o /p /.notdef /r /s /t /u 
3{/.notdef}rp /y 134{/.notdef}rp]
ONVRII+ArialNarrow-Bold nf
ONVRII+ArialNarrow-Bold*1 [6.96 0 0 -6.96 0 0 ]msf
352.18 212.66 mo
(WM on )
[5.30353 4.81631 1.69821 3.61926 3.61923 0 ]xsh
372.6 212.66 mo
(Jcodes)
[3.11804 3.11804 3.5914 3.5914 3.11804 0 ]xsh
341.16 208.2 mo
341.16 205.81 343.04 203.88 345.36 203.88 cv
347.68 203.88 349.56 205.81 349.56 208.2 cv
349.56 210.59 347.68 212.52 345.36 212.52 cv
343.04 212.52 341.16 210.59 341.16 208.2 cv
cp
ef
.24024 lw
341.16 208.2 mo
341.16 205.81 343.04 203.88 345.36 203.88 cv
347.68 203.88 349.56 205.81 349.56 208.2 cv
349.56 210.59 347.68 212.52 345.36 212.52 cv
343.04 212.52 341.16 210.59 341.16 208.2 cv
cp
@
1 /0 /CSD get_res sepcs
0 sep
%ADOBeginSubsetFont: PBAAAA+ArialNarrow-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ONVRII+ArialNarrow-Bold gcheck setglobal} if
1 2246 23 <0002001f0000037f05c0000a000d009540170c0d040d03010208000c060d
07050a0b0d07000c0c0d0db8014b400f03041403030403020c04070dfa08
02b801af400b000405000c030d02040c00bb0154000a000401fdb5050590
0a010aba01430007022e4009cf02df020200020102b9022d000e10f6715d
fdf45d3c10ee10fd3c39113939003f3f10f43cfd3c1139113987052e2b04
7d10c40f0f0f011139001112393130211121350133113315231103110102
0bfe140209c29595dffeec0127f603a3fc5ef7fed9021e01f5fe0b00>ONVRII+ArialNarrow-Bold AddT42Char 
ONVRII+ArialNarrow-Bold /CharStrings get begin
/four 23 def
end
ONVRII+ArialNarrow-Bold /Encoding get
dup 52 /four put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ONVRII+ArialNarrow-Bold*1 
[32{/.notdef}rp /space 3{/.notdef}rp /dollar 3{/.notdef}rp /parenleft /parenright /asterisk 
6{/.notdef}rp /one /two /three /four 5{/.notdef}rp /colon 6{/.notdef}rp 
/A /B /C /D 5{/.notdef}rp /J 2{/.notdef}rp /M 
5{/.notdef}rp /S 2{/.notdef}rp /V /W 9{/.notdef}rp /a /b 
/c /d /e /f 2{/.notdef}rp /i 2{/.notdef}rp /l 
/.notdef /n /o /p /.notdef /r /s /t 
/u 3{/.notdef}rp /y 134{/.notdef}rp]
ONVRII+ArialNarrow-Bold nf
ONVRII+ArialNarrow-Bold*1 [6.96 0 0 -6.96 0 0 ]msf
343.94 210.98 mo
(4)sh
.72 lw
391.8 204.84 mo
391.8 205.38 391.87 205.8 392.03 206.28 cv
392.21 206.73 392.41 207.04 392.69 207.3 cv
392.98 207.58 393.26 207.69 393.58 207.69 cv
393.6 207.69 li
393.92 207.69 394.21 207.58 394.49 207.3 cv
394.78 207.04 394.97 206.73 395.15 206.28 cv
395.31 205.8 395.38 205.38 395.38 204.84 cv
1 /0 /CSD get_res sepcs
1 sep
@
393.72 210.6 mo
393.72 205.32 li
@
40.805 118.2 mo
40.68 122.45 li
@
62.76 68.76 mo
77.4 68.76 li
77.4 57.24 li
62.76 57.24 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
.24024 lw
62.76 68.76 mo
77.4 68.76 li
77.4 57.24 li
62.76 57.24 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
65.448 65.66 mo
(1:1)
[3.14587 1.69822 0 ]xsh
77.4 68.76 mo
92.04 68.76 li
92.04 57.24 li
77.4 57.24 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
78.6 65.66 mo
(10:2)
[3.11803 3.11803 1.67038 0 ]xsh
92.04 68.76 mo
106.68 68.76 li
106.68 57.24 li
92.04 57.24 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
93.768 65.66 mo
(11:)
[3.11992 3.11991 0 ]xsh
ONVRII+ArialNarrow-Bold*1 [6.96 0 0 -6.96 0 0 ]msf
101.69 65.66 mo
(*)sh
101.63 66.83 mo
103.79 66.83 li
103.79 66.35 li
101.63 66.35 li
cp
ef
106.68 68.76 mo
121.32 68.76 li
121.32 57.24 li
106.68 57.24 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
106.68 68.76 mo
121.32 68.76 li
121.32 57.24 li
106.68 57.24 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
111.7 65.66 mo
($)sh
121.32 68.76 mo
135.72 68.76 li
135.72 57.24 li
121.32 57.24 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
123.86 65.66 mo
(2:1)
[3.11803 1.67037 0 ]xsh
135.96 68.76 mo
150.36 68.76 li
150.36 57.24 li
135.96 57.24 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
139.06 65.66 mo
(7:)
[3.11992 0 ]xsh
ONVRII+ArialNarrow-Bold*1 [6.96 0 0 -6.96 0 0 ]msf
143.86 65.66 mo
(*)sh
143.77 66.83 mo
145.93 66.83 li
145.93 66.35 li
143.77 66.35 li
cp
ef
150.36 68.76 mo
165 68.76 li
165 57.24 li
150.36 57.24 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
150.36 68.76 mo
165 68.76 li
165 57.24 li
150.36 57.24 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
155.54 65.66 mo
($)sh
165.24 68.76 mo
179.64 68.76 li
179.64 57.24 li
165.24 57.24 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
167.83 65.66 mo
(3:1)
[3.11804 1.67036 0 ]xsh
179.64 68.76 mo
194.28 68.76 li
194.28 57.24 li
179.64 57.24 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
180.96 65.66 mo
(10:2)
[3.11804 3.11803 1.67038 0 ]xsh
194.28 68.76 mo
208.92 68.76 li
208.92 57.24 li
194.28 57.24 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
196.01 65.66 mo
(12:)
[3.14392 3.14391 0 ]xsh
ONVRII+ArialNarrow-Bold*1 [6.96 0 0 -6.96 0 0 ]msf
203.95 65.66 mo
(*)sh
203.82 66.83 mo
205.98 66.83 li
205.98 66.35 li
203.82 66.35 li
cp
ef
208.92 68.76 mo
223.56 68.76 li
223.56 57.24 li
208.92 57.24 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
208.92 68.76 mo
223.56 68.76 li
223.56 57.24 li
208.92 57.24 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
214.08 65.66 mo
($)sh
223.56 68.76 mo
238.2 68.76 li
238.2 57.24 li
223.56 57.24 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
226.25 65.66 mo
(6:2)
[3.11804 1.67038 0 ]xsh
238.2 68.76 mo
252.84 68.76 li
252.84 57.24 li
238.2 57.24 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
239.98 65.66 mo
(11:)
[3.14392 3.14391 0 ]xsh
ONVRII+ArialNarrow-Bold*1 [6.96 0 0 -6.96 0 0 ]msf
247.92 65.66 mo
(*)sh
247.76 66.83 mo
249.92 66.83 li
249.92 66.35 li
247.76 66.35 li
cp
ef
252.84 68.76 mo
267.24 68.76 li
267.24 57.24 li
252.84 57.24 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
252.84 68.76 mo
267.24 68.76 li
267.24 57.24 li
252.84 57.24 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
257.93 65.66 mo
($)sh
267.24 68.76 mo
281.88 68.76 li
281.88 57.24 li
267.24 57.24 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
268.66 65.66 mo
(13:2)
[3.11804 3.11804 1.67038 0 ]xsh
282.12 68.76 mo
296.52 68.76 li
296.52 57.24 li
282.12 57.24 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
284.78 65.66 mo
(9:1)
[3.11804 1.67038 0 ]xsh
296.52 68.76 mo
311.16 68.76 li
311.16 57.24 li
296.52 57.24 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
298.39 65.66 mo
(14:)
[3.1199 3.11993 0 ]xsh
ONVRII+ArialNarrow-Bold*1 [6.96 0 0 -6.96 0 0 ]msf
306.31 65.66 mo
(*)sh
306.14 66.83 mo
308.3 66.83 li
308.3 66.35 li
306.14 66.35 li
cp
ef
311.16 65.88 mo
325.8 65.88 li
325.8 57.24 li
311.16 57.24 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
311.16 65.88 mo
325.8 65.88 li
325.8 57.24 li
311.16 57.24 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.984 0 0 -6.984 0 0 ]msf
316.32 64.25 mo
($)sh
325.8 66.12 mo
340.44 66.12 li
340.44 57.24 li
325.8 57.24 li
cp
@
ONVRIJ+ArialNarrow*1 [6.984 0 0 -6.984 0 0 ]msf
331.03 64.32 mo
($)sh
62.76 77.64 mo
77.4 77.64 li
77.4 66.12 li
62.76 66.12 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
62.76 77.64 mo
77.4 77.64 li
77.4 66.12 li
62.76 66.12 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
67.848 74.59 mo
(0)sh
77.4 77.64 mo
92.04 77.64 li
92.04 66.12 li
77.4 66.12 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
77.4 77.64 mo
92.04 77.64 li
92.04 66.12 li
77.4 66.12 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
82.416 74.59 mo
(1)sh
92.04 77.64 mo
106.68 77.64 li
106.68 66.12 li
92.04 66.12 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
92.04 77.64 mo
106.68 77.64 li
106.68 66.12 li
92.04 66.12 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
97.128 74.59 mo
(1)sh
106.68 77.64 mo
121.32 77.64 li
121.32 66.12 li
106.68 66.12 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
106.68 77.64 mo
121.32 77.64 li
121.32 66.12 li
106.68 66.12 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
111.7 74.59 mo
(0)sh
121.32 77.64 mo
135.72 77.64 li
135.72 66.12 li
121.32 66.12 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
121.32 77.64 mo
135.72 77.64 li
135.72 66.12 li
121.32 66.12 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
126.26 74.59 mo
(1)sh
135.96 77.64 mo
150.36 77.64 li
150.36 66.12 li
135.96 66.12 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
135.96 77.64 mo
150.36 77.64 li
150.36 66.12 li
135.96 66.12 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
140.98 74.59 mo
(1)sh
150.36 77.64 mo
165 77.64 li
165 66.12 li
150.36 66.12 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
150.36 77.64 mo
165 77.64 li
165 66.12 li
150.36 66.12 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
155.54 74.59 mo
(1)sh
165.24 77.64 mo
179.64 77.64 li
179.64 66.12 li
165.24 66.12 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
165.24 77.64 mo
179.64 77.64 li
179.64 66.12 li
165.24 66.12 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
170.23 74.59 mo
(1)sh
179.64 77.64 mo
194.28 77.64 li
194.28 66.12 li
179.64 66.12 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
179.64 77.64 mo
194.28 77.64 li
194.28 66.12 li
179.64 66.12 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
184.8 74.59 mo
(2)sh
194.28 77.64 mo
208.92 77.64 li
208.92 66.12 li
194.28 66.12 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
194.28 77.64 mo
208.92 77.64 li
208.92 66.12 li
194.28 66.12 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
199.37 74.59 mo
(2)sh
208.92 77.64 mo
223.56 77.64 li
223.56 66.12 li
208.92 66.12 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
208.92 77.64 mo
223.56 77.64 li
223.56 66.12 li
208.92 66.12 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
214.08 74.59 mo
(1)sh
223.56 77.64 mo
238.2 77.64 li
238.2 66.12 li
223.56 66.12 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
223.56 77.64 mo
238.2 77.64 li
238.2 66.12 li
223.56 66.12 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
228.65 74.59 mo
(0)sh
238.2 77.64 mo
252.84 77.64 li
252.84 66.12 li
238.2 66.12 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
238.2 77.64 mo
252.84 77.64 li
252.84 66.12 li
238.2 66.12 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
243.34 74.59 mo
(0)sh
252.84 77.64 mo
267.24 77.64 li
267.24 66.12 li
252.84 66.12 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
252.84 77.64 mo
267.24 77.64 li
267.24 66.12 li
252.84 66.12 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
257.93 74.59 mo
(0)sh
267.24 77.64 mo
281.88 77.64 li
281.88 66.12 li
267.24 66.12 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
267.24 77.64 mo
281.88 77.64 li
281.88 66.12 li
267.24 66.12 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
272.5 74.59 mo
(2)sh
282.12 77.64 mo
296.52 77.64 li
296.52 66.12 li
282.12 66.12 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
282.12 77.64 mo
296.52 77.64 li
296.52 66.12 li
282.12 66.12 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
287.18 74.59 mo
(2)sh
296.52 77.64 mo
311.16 77.64 li
311.16 66.12 li
296.52 66.12 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
296.52 77.64 mo
311.16 77.64 li
311.16 66.12 li
296.52 66.12 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
301.75 74.59 mo
(2)sh
311.16 77.64 mo
325.8 77.64 li
325.8 66.12 li
311.16 66.12 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
311.16 77.64 mo
325.8 77.64 li
325.8 66.12 li
311.16 66.12 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
316.32 74.59 mo
(2)sh
325.8 77.64 mo
340.44 77.64 li
340.44 66.12 li
325.8 66.12 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
331.03 74.59 mo
(0)sh
60.6 152.52 mo
75.24 152.52 li
75.24 143.64 li
60.6 143.64 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
65.736 150.82 mo
(5)sh
75.24 152.52 mo
89.88 152.52 li
89.88 143.64 li
75.24 143.64 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
78.864 150.82 mo
(10)
[3.11992 0 ]xsh
89.88 152.52 mo
104.52 152.52 li
104.52 143.64 li
89.88 143.64 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
94.992 150.82 mo
(2)sh
104.52 152.52 mo
119.16 152.52 li
119.16 143.64 li
104.52 143.64 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
104.52 152.52 mo
119.16 152.52 li
119.16 143.64 li
104.52 143.64 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
109.58 150.82 mo
(0)sh
119.16 152.52 mo
133.56 152.52 li
133.56 143.64 li
119.16 143.64 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
124.15 150.82 mo
(6)sh
133.8 152.52 mo
148.44 152.52 li
148.44 143.64 li
133.8 143.64 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
138.84 150.82 mo
(1)sh
148.44 152.52 mo
162.84 152.52 li
162.84 143.64 li
148.44 143.64 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
148.44 152.52 mo
162.84 152.52 li
162.84 143.64 li
148.44 143.64 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
153.41 150.82 mo
(0)sh
163.08 152.52 mo
177.48 152.52 li
177.48 143.64 li
163.08 143.64 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
168.12 150.82 mo
(7)sh
177.48 152.52 mo
192.12 152.52 li
192.12 143.64 li
177.48 143.64 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
181.25 150.82 mo
(10)
[3.11992 0 ]xsh
192.12 152.52 mo
206.76 152.52 li
206.76 143.64 li
192.12 143.64 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
197.26 150.82 mo
(3)sh
206.76 152.52 mo
221.4 152.52 li
221.4 143.64 li
206.76 143.64 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
206.76 152.52 mo
221.4 152.52 li
221.4 143.64 li
206.76 143.64 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
211.94 150.82 mo
(0)sh
221.4 152.52 mo
236.04 152.52 li
236.04 143.64 li
221.4 143.64 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
226.51 150.82 mo
(8)sh
236.04 152.52 mo
250.68 152.52 li
250.68 143.64 li
236.04 143.64 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
241.22 150.82 mo
(2)sh
250.68 152.52 mo
265.32 152.52 li
265.32 143.64 li
250.68 143.64 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
250.68 152.52 mo
265.32 152.52 li
265.32 143.64 li
250.68 143.64 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
255.79 150.82 mo
(0)sh
265.32 152.52 mo
279.72 152.52 li
279.72 143.64 li
265.32 143.64 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
268.92 150.82 mo
(11)
[3.1199 0 ]xsh
279.96 152.52 mo
294.36 152.52 li
294.36 143.64 li
279.96 143.64 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
285.07 150.82 mo
(9)sh
294.36 152.52 mo
309 152.52 li
309 143.64 li
294.36 143.64 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
299.64 150.82 mo
(4)sh
309 152.52 mo
323.64 152.52 li
323.64 143.64 li
309 143.64 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
309 152.52 mo
323.64 152.52 li
323.64 143.64 li
309 143.64 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
314.21 150.82 mo
(0)sh
323.64 152.52 mo
338.28 152.52 li
338.28 143.64 li
323.64 143.64 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
328.82 150.82 mo
(0)sh
60.84 171.48 mo
75.48 171.48 li
75.48 162.6 li
60.84 162.6 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
60.84 171.48 mo
75.48 171.48 li
75.48 162.6 li
60.84 162.6 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
64.392 169.85 mo
(19)
[3.11992 0 ]xsh
75.48 171.48 mo
90.12 171.48 li
90.12 162.6 li
75.48 162.6 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
75.48 171.48 mo
90.12 171.48 li
90.12 162.6 li
75.48 162.6 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
79.128 169.85 mo
(18)
[3.11992 0 ]xsh
90.12 171.48 mo
104.76 171.48 li
104.76 162.6 li
90.12 162.6 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
90.12 171.48 mo
104.76 171.48 li
104.76 162.6 li
90.12 162.6 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
95.256 169.85 mo
(4)sh
104.76 171.48 mo
119.4 171.48 li
119.4 162.6 li
104.76 162.6 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
104.76 171.48 mo
119.4 171.48 li
119.4 162.6 li
104.76 162.6 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
109.82 169.85 mo
(7)sh
119.4 171.48 mo
133.8 171.48 li
133.8 162.6 li
119.4 162.6 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
119.4 171.48 mo
133.8 171.48 li
133.8 162.6 li
119.4 162.6 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
122.95 169.85 mo
(11)
[3.14391 0 ]xsh
134.04 171.48 mo
148.68 171.48 li
148.68 162.6 li
134.04 162.6 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
134.04 171.48 mo
148.68 171.48 li
148.68 162.6 li
134.04 162.6 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
137.66 169.85 mo
(14)
[3.11992 0 ]xsh
60.84 180.36 mo
75.24 180.36 li
75.24 171.48 li
60.84 171.48 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
65.76 178.68 mo
(1)sh
75.24 180.36 mo
89.88 180.36 li
89.88 171.48 li
75.24 171.48 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
80.328 178.68 mo
(0)sh
89.88 180.36 mo
104.52 180.36 li
104.52 171.48 li
89.88 171.48 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
95.016 178.68 mo
(0)sh
104.52 180.36 mo
119.16 180.36 li
119.16 171.48 li
104.52 171.48 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
109.58 178.68 mo
(0)sh
119.16 180.36 mo
133.56 180.36 li
133.56 171.48 li
119.16 171.48 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
124.15 178.68 mo
(0)sh
133.8 180.36 mo
148.44 180.36 li
148.44 171.48 li
133.8 171.48 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
138.86 178.68 mo
(0)sh
148.44 180.36 mo
162.84 180.36 li
162.84 171.48 li
148.44 171.48 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
153.43 178.68 mo
(1)sh
163.08 180.36 mo
177.72 180.36 li
177.72 171.48 li
163.08 171.48 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
168.14 178.68 mo
(1)sh
177.72 180.36 mo
192.12 180.36 li
192.12 171.48 li
177.72 171.48 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
182.71 178.68 mo
(0)sh
192.12 180.36 mo
206.76 180.36 li
206.76 171.48 li
192.12 171.48 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
197.28 178.68 mo
(1)sh
206.76 180.36 mo
221.4 180.36 li
221.4 171.48 li
206.76 171.48 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
211.97 178.68 mo
(1)sh
221.4 180.36 mo
236.04 180.36 li
236.04 171.48 li
221.4 171.48 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
226.54 178.68 mo
(1)sh
236.04 180.36 mo
250.68 180.36 li
250.68 171.48 li
236.04 171.48 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
241.25 178.68 mo
(1)sh
250.68 180.36 mo
265.32 180.36 li
265.32 171.48 li
250.68 171.48 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
255.82 178.68 mo
(1)sh
265.32 180.36 mo
279.72 180.36 li
279.72 171.48 li
265.32 171.48 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
270.38 178.68 mo
(1)sh
279.96 180.36 mo
294.6 180.36 li
294.6 171.48 li
279.96 171.48 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
285.07 178.68 mo
(1)sh
294.6 180.36 mo
309 180.36 li
309 171.48 li
294.6 171.48 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
299.66 178.68 mo
(1)sh
309 180.36 mo
323.64 180.36 li
323.64 171.48 li
309 171.48 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
314.23 178.68 mo
(0)sh
323.64 180.36 mo
338.28 180.36 li
338.28 171.48 li
323.64 171.48 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
328.92 178.68 mo
(1)sh
60.84 189.24 mo
75.24 189.24 li
75.24 180.36 li
60.84 180.36 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
60.84 189.24 mo
75.24 189.24 li
75.24 180.36 li
60.84 180.36 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
65.76 187.58 mo
(1)sh
75.24 189.24 mo
89.88 189.24 li
89.88 180.36 li
75.24 180.36 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
75.24 189.24 mo
89.88 189.24 li
89.88 180.36 li
75.24 180.36 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
78.888 187.58 mo
(12)
[3.11992 0 ]xsh
89.88 189.24 mo
104.52 189.24 li
104.52 180.36 li
89.88 180.36 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
89.88 189.24 mo
104.52 189.24 li
104.52 180.36 li
89.88 180.36 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
93.576 187.58 mo
(13)
[3.11992 0 ]xsh
104.52 189.24 mo
119.16 189.24 li
119.16 180.36 li
104.52 180.36 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
104.52 189.24 mo
119.16 189.24 li
119.16 180.36 li
104.52 180.36 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
108.14 187.58 mo
(14)
[3.11992 0 ]xsh
119.16 189.24 mo
133.56 189.24 li
133.56 180.36 li
119.16 180.36 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
119.16 189.24 mo
133.56 189.24 li
133.56 180.36 li
119.16 180.36 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
122.71 187.58 mo
(15)
[3.14391 0 ]xsh
133.8 189.24 mo
148.44 189.24 li
148.44 180.36 li
133.8 180.36 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
133.8 189.24 mo
148.44 189.24 li
148.44 180.36 li
133.8 180.36 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
137.42 187.58 mo
(19)
[3.11992 0 ]xsh
148.44 189.24 mo
162.84 189.24 li
162.84 180.36 li
148.44 180.36 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
153.43 187.58 mo
(3)sh
163.08 189.24 mo
177.72 189.24 li
177.72 180.36 li
163.08 180.36 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
168.14 187.58 mo
(2)sh
177.72 189.24 mo
192.12 189.24 li
192.12 180.36 li
177.72 180.36 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
182.71 187.58 mo
(5)sh
192.12 189.24 mo
206.76 189.24 li
206.76 180.36 li
192.12 180.36 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
197.28 187.58 mo
(4)sh
206.76 189.24 mo
221.4 189.24 li
221.4 180.36 li
206.76 180.36 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
211.97 187.58 mo
(6)sh
221.4 189.24 mo
236.04 189.24 li
236.04 180.36 li
221.4 180.36 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
225.1 187.58 mo
(17)
[3.11992 0 ]xsh
236.04 189.24 mo
250.68 189.24 li
250.68 180.36 li
236.04 180.36 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
241.25 187.58 mo
(7)sh
250.68 189.24 mo
265.32 189.24 li
265.32 180.36 li
250.68 180.36 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
254.38 187.58 mo
(18)
[3.1199 0 ]xsh
265.32 189.24 mo
279.72 189.24 li
279.72 180.36 li
265.32 180.36 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
270.38 187.58 mo
(9)sh
279.96 189.24 mo
294.6 189.24 li
294.6 180.36 li
279.96 180.36 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
283.63 187.58 mo
(11)
[3.1199 0 ]xsh
294.6 189.24 mo
309 189.24 li
309 180.36 li
294.6 180.36 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
299.66 187.58 mo
(8)sh
309 189.24 mo
323.64 189.24 li
323.64 180.36 li
309 180.36 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
312.79 187.58 mo
(10)
[3.1199 0 ]xsh
323.64 189.24 mo
338.28 189.24 li
338.28 180.36 li
323.64 180.36 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
327.48 187.58 mo
(16)
[3.1199 0 ]xsh
60.84 212.76 mo
75.24 212.76 li
75.24 203.88 li
60.84 203.88 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
65.76 211.06 mo
(0)sh
75.24 212.76 mo
89.88 212.76 li
89.88 203.88 li
75.24 203.88 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
80.328 211.06 mo
(0)sh
89.88 212.76 mo
104.52 212.76 li
104.52 203.88 li
89.88 203.88 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
95.016 211.06 mo
(1)sh
104.52 212.76 mo
119.16 212.76 li
119.16 203.88 li
104.52 203.88 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
109.58 211.06 mo
(1)sh
119.16 212.76 mo
133.56 212.76 li
133.56 203.88 li
119.16 203.88 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
124.15 211.06 mo
(0)sh
133.8 212.76 mo
148.44 212.76 li
148.44 203.88 li
133.8 203.88 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
138.86 211.06 mo
(2)sh
148.44 212.76 mo
162.84 212.76 li
162.84 203.88 li
148.44 203.88 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
153.43 211.06 mo
(1)sh
163.08 212.76 mo
177.72 212.76 li
177.72 203.88 li
163.08 203.88 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
168.14 211.06 mo
(1)sh
177.72 212.76 mo
192.12 212.76 li
192.12 203.88 li
177.72 203.88 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
182.71 211.06 mo
(0)sh
192.12 212.76 mo
206.76 212.76 li
206.76 203.88 li
192.12 203.88 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
197.28 211.06 mo
(2)sh
206.76 212.76 mo
221.4 212.76 li
221.4 203.88 li
206.76 203.88 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
211.97 211.06 mo
(2)sh
221.4 212.76 mo
236.04 212.76 li
236.04 203.88 li
221.4 203.88 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
226.54 211.06 mo
(0)sh
236.04 212.76 mo
250.68 212.76 li
250.68 203.88 li
236.04 203.88 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
241.25 211.06 mo
(1)sh
250.68 212.76 mo
265.32 212.76 li
265.32 203.88 li
250.68 203.88 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
255.82 211.06 mo
(1)sh
265.32 212.76 mo
279.72 212.76 li
279.72 203.88 li
265.32 203.88 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
270.38 211.06 mo
(0)sh
279.96 212.76 mo
294.6 212.76 li
294.6 203.88 li
279.96 203.88 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
285.07 211.06 mo
(2)sh
294.6 212.76 mo
309 212.76 li
309 203.88 li
294.6 203.88 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
299.66 211.06 mo
(1)sh
309 212.76 mo
323.64 212.76 li
323.64 203.88 li
309 203.88 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
314.23 211.06 mo
(2)sh
323.64 212.76 mo
338.28 212.76 li
338.28 203.88 li
323.64 203.88 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
328.92 211.06 mo
(2)sh
.72 lw
55.32 204.84 mo
55.32 205.15 55.391 205.4 55.552 205.68 cv
55.73 205.94 55.926 206.12 56.211 206.27 cv
56.496 206.44 56.781 206.5 57.102 206.5 cv
57.12 206.5 li
57.441 206.5 57.726 206.44 58.011 206.27 cv
58.296 206.12 58.492 205.94 58.67 205.68 cv
58.831 205.4 58.902 205.15 58.902 204.84 cv
@
57.24 208.44 mo
57.24 205.08 li
@
60.84 162.84 mo
75.48 162.84 li
75.48 153.96 li
60.84 153.96 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
.24024 lw
60.84 162.84 mo
75.48 162.84 li
75.48 153.96 li
60.84 153.96 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
64.392 161.16 mo
(19)
[3.14391 0 ]xsh
75.48 162.84 mo
90.12 162.84 li
90.12 153.96 li
75.48 153.96 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
75.48 162.84 mo
90.12 162.84 li
90.12 153.96 li
75.48 153.96 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
80.592 161.16 mo
(4)sh
90.36 162.84 mo
104.76 162.84 li
104.76 153.96 li
90.36 153.96 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
90.36 162.84 mo
104.76 162.84 li
104.76 153.96 li
90.36 153.96 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
95.28 161.16 mo
(7)sh
104.76 162.84 mo
119.4 162.84 li
119.4 153.96 li
104.76 153.96 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
104.76 162.84 mo
119.4 162.84 li
119.4 153.96 li
104.76 153.96 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
108.41 161.16 mo
(11)
[3.11992 0 ]xsh
119.4 162.84 mo
134.04 162.84 li
134.04 153.96 li
119.4 153.96 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
119.4 162.84 mo
134.04 162.84 li
134.04 153.96 li
119.4 153.96 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
122.98 161.16 mo
(14)
[3.11992 0 ]xsh
134.04 162.84 mo
148.68 162.84 li
148.68 153.96 li
134.04 153.96 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
134.04 162.84 mo
148.68 162.84 li
148.68 153.96 li
134.04 153.96 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
137.69 161.16 mo
(18)
[3.11992 0 ]xsh
148.68 162.84 mo
163.08 162.84 li
163.08 153.96 li
148.68 153.96 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
153.7 161.16 mo
(6)sh
163.32 162.84 mo
177.96 162.84 li
177.96 153.96 li
163.32 153.96 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
168.38 161.16 mo
(3)sh
177.96 162.84 mo
192.36 162.84 li
192.36 153.96 li
177.96 153.96 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
181.51 161.16 mo
(13)
[3.11992 0 ]xsh
192.36 162.84 mo
207 162.84 li
207 153.96 li
192.36 153.96 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
196.08 161.16 mo
(10)
[3.11992 0 ]xsh
207.24 162.84 mo
221.64 162.84 li
221.64 153.96 li
207.24 153.96 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
210.79 161.16 mo
(17)
[3.11992 0 ]xsh
221.64 162.84 mo
236.28 162.84 li
236.28 153.96 li
221.64 153.96 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
226.8 161.16 mo
(1)sh
236.28 162.84 mo
250.92 162.84 li
250.92 153.96 li
236.28 153.96 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
241.51 161.16 mo
(5)sh
250.92 162.84 mo
265.56 162.84 li
265.56 153.96 li
250.92 153.96 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
256.08 161.16 mo
(8)sh
265.56 162.84 mo
279.96 162.84 li
279.96 153.96 li
265.56 153.96 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
269.21 161.16 mo
(12)
[3.1199 0 ]xsh
280.2 162.84 mo
294.84 162.84 li
294.84 153.96 li
280.2 153.96 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
283.9 161.16 mo
(16)
[3.1199 0 ]xsh
294.84 162.84 mo
309.24 162.84 li
309.24 153.96 li
294.84 153.96 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
299.9 161.16 mo
(2)sh
309.24 162.84 mo
323.88 162.84 li
323.88 153.96 li
309.24 153.96 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
314.47 161.16 mo
(9)sh
324.12 162.84 mo
338.52 162.84 li
338.52 153.96 li
324.12 153.96 li
cp
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
327.74 161.16 mo
(15)
[3.1199 0 ]xsh
%ADOBeginSubsetFont: GFNBAA+ArialNarrow-Bold Initial
ct_T42Dict begin
-0.137 -0.305 0.996 1.105
 256 array 0 1 255 {1 index exch /.notdef put} for  /GFNBAA+ArialNarrow-Bold
Type42DictBegin
[<00010000000c000c000c000c4f532f326ee399f2000000cc000000566376
742084704a2200000124000004ba6670676d51dd1010000005e0000004c4
676c7966fc08346b000033fc0000257e68656164cd39154500000aa40000
0036686865610e65065a00000adc00000024686d747887c90aef00000b00
000006a26c6f63615f0956ad000011a4000005326d61787007430b6c0000
16d8000000206e616d65affb541a000016f8000011f6707265706496ba00
000028f000000b0c676469720000000000000000000000000001032302bc
00030008059a053300000093059a05330000020b006602120805020b0706
02020203020400000287000008000000000000000000544d432000200020
201905d3fe51010d077601af2000009fdfd70000000005ba001905ba0019
05a60019042600190000ffe70000ffe70000ffe7fe6cffe705ba0019fe63
ffee02e7ffee05c1001202d7fff405c0000cffd6000002c0000c00000000
000000000000000000000000000000000000000000000000000000000000
0000023d023d00000000ffd7000000000000000000000000000000000000
00000000000000000000000000ea000000ea000000000000000000000000
000000000000000000000000004f003200d70000007f00f800e701190078
007b0002001700ec00430003009c004fffaf00f2000100fa00e2ffdd0035
00e6ffc7007700e5ff8f00020045007100fd0000001b009f00e000e5ffbd
004e00e100fa001300dc002c003e0091009d00a400a700d000dd00e20009
001a003b0077008900cc00e600f90105ffc4000000160019001b0029004a
007500b700bb00d600e400ffff8a000b001e00b700e700ed00f001120349
ffb2001d004a005c005f0076009900a4022b03520012008b00b100b300c9
00dd00e701020119ff5cff68ffd3ffd80015002300370038004900650070
0095009500a500b600bf00c900cf00d600d900e200e700f101190147015d
017401b80323032e0380ff80005b00890097009800b900cc00d500f700fd
010e012a012b015c0170019801b8027a001f0028002d004e006900730080
00800087009100b600c600e700f70101011c019a01b801e5024502fa030a
031f0398039903ba0401045f048d00020005000c0043004e005100520066
006b0075007b00810081008e00a300ae00b000ba00be00f100fb0104014b
016d01ff02c503140317036003efff9affb0ffd90001000d000f00270028
002b002f003600360038004000490058006300660068006a00700077007c
007e0081008500850095009b00a400a700ab00b000b700bb00bc00c400c6
00ca00d500d700db00dd00e100e600f600fb010201040105011401180119
012701370149014b01630167018e019201ad01d7020902fa034e036d0384
03bf03c603d103ed04170439043c04e80501053d062a068ffee7feefff32
ffb4ffbafff00002000300070009001d00210027002b002e004600460049
005a005b005f0067007300760076007a007f008400850087008800900092
00a700a700c900ca00d300d400db00dc00de00f200f200f600f700ff0100
010801110119011901190119011c0127013201330137013c014e01770194
01a701b901c501d201ee02100212022702310234024f0253026202630267
02930302030f0322032e033303380360042604580464048704b004bc04e8
05000510053e055205a405c3062d068400e900f400e80000000000000000
00000000000001190062008200000000005f082304b9013a027e0041004f
00a1009c01950186015e00e002200198000600e200c200aa00a7005e0351
fcb1fd060188012d015201d0018d0137021b025b007e0101030e010d0383
03c1048e0047030d0085016a020e01ba024503d703a5021301c902280314
00bb0355017d01ce0212053d05c302c500900025016301da0468002a0360
004b03ef0392033804170464043c034e03310352000b0239004601f20052
00a9003700d004e701e901f100430016022700dc00dc01a401a4004e0213
00b600e00154025802300183018301c20035001000c70096009b008200c8
03100000403b3f3e3a39383734333231302f2e2d2c2b2a29282726252423
2221201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a0908070605
04030201002c4523466020b02660b004262348482d2c452346236120b026
61b004262348482d2c45234660b0206120b04660b004262348482d2c4523
462361b0206020b02661b02061b004262348482d2c45234660b0406120b0
6660b004262348482d2c4523462361b0406020b02661b04061b004262348
482d2c0110203c003c2d2c20452320b0cd442320b8015a51582320b08d44
235920b0ed51582320b04d44235920b0042651582320b00d44235921212d
2c20204518684420b001602045b04676688a4560442d2c01b10b0a432343
650a2d2c00b10a0b4323430b2d2c00b0462370b101463e01b0462370b102
46453ab10200080d2d2c45b04a234445b04923442d2c2045b00325456164
b050515845441b2121592d2cb00143632362b0002342b00f2b2d2c2045b0
004360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a
8cb8100062602b0c642364615c58b00361592d2c45b0112bb0472344b047
7ae4182d2cb801a65458b00943b801005458b9004aff80b1498044445959
2d2cb01243588745b0112bb0472344b0477ae41b038a45186920b0472344
8a8a8720b0a05158b0112bb0472344b0477ae41b21b0477ae45959182d2c
2d2c4b52582145441b23458c20b00325455258441b212159592d2c01182f
2d2c20b0032545b049234445b04a23444565234520b00325606a20b00923
4223688a6a606120b01a8ab000527921b21a4a40b9ffe0004a45208a5458
2321b03f1b235961441cb114008a5279b34940204945208a54582321b03f
1b235961442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d4323
430b2d2cb10c0d432343650b2d2cb10e0f432343650b2d2cb11011432343
650b2d2c4b525845441b2121592d2c0120b003252349b04060b0206320b0
00525823b002253823b002256538008a63381b212121212159012d2c4569
b00943608a103a2d2c01b005251023208af500b0016023edec2d2c01b005
251023208af500b0016123edec2d2c01b0062510f500edec2d2c20b00160
0110203c003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b0
0743b006430b2d2c3eb02a2a2d2c352d2c76b04b23701020b04b4520b000
5058b00161593a2f182d2c21210c6423648bb84000622d2c21b08051580c
6423648bb82000621bb200402f2b59b002602d2c21b0c051580c6423648b
b81555621bb200802f2b59b002602d2c0c6423648bb84000626023212d2c
b4000100000015b00826b00826b00826b008260f10161345683ab001162d
2cb4000100000015b00826b00826b00826b008260f1016134568653ab001
162d2c4523204520b10405258a505826618a8b1b26608a8c59442d2c4623
46608a8a462320468a608a61b8ff8062232010238ab14b4b8a70456020b0
005058b00161b8ffc08b1bb0408c5968013a2d2cb0332bb02a2a2d2cb013
4358031b02592d2cb0134358021b03592d2c4b53234b515a58381b212159
2d2c01b00425b004254964234564696120b080626ab00225b00225618cb0
4a2344218a10b04af6212d2c01b0022510d023c101b00113b0001410b001
3cb001162d2c01b00013b001b0032549b0031738b001132d000100000002
6666acb243665f0f3cf5001f080000000000a31fb8bd00000000c3fdaab7
fee7fd8c07ff08df0001000b000200000000000000010000077cfe4e0000
086bfee7fee707ff0001000000000000000000000000000000b901d3002c
0000000001d3000001d30000022f0096031d005c0000000003a6003a0000
00000000000000000000022f0057022f0037028d00170000000000000000
0000000000000000000000000000000003a6008503a6002a03a6003f03a6
001f0000000000000000000000000000000000000000022f00a400000000
000000000000000000000000000000000000000004bc000004bc007a04bc
005004bc0079000000000000000000000000000000000000000003a6001d
000000000000000005770077000000000000000000000000000000000000
00000460003d000000000000000004600000063100050000000000000000
0000000000000000000000000000000000000000000000000000000003a6
003c0402006e03a600460402004503a60036022f00140000000000000000
01d30079000000000000000001d300790000000004020077040200430402
007200000000028d006f03a60028022f0019040200730000000000000000
0000000003a6000b00000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000001d3005d000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000003b003b003b003b008c00d1
00d101dd01dd01dd01dd021a026903160316031603160316031603160358
03bc046304cb04cb04cb04cb04cb04cb04fd04fd04fd04fd04fd04fd04fd
058b0618069b070d070d070d070d070d070d075307530753083108310831
08310831083109160916091609980a9c0a9c0a9c0a9c0a9c0a9c0a9c0a9c
0a9c0a9c0b730bdf0c5f0cc30d770de60de60de60e270e270e270e530e53
0eb80f180f8a0f8a0fe41117118511ea11ea11ea11ea1283128312831283
128312831283128312831283128312831283128312831283128312831283
128312831283128312831283128312831283128312831283128312831283
128312831283128312831283128312831283128312831283128312831283
128312831283128312831283128312831283128312831283128312831283
128312831283128312831283128312831283128312831283128312831283
12831283128312831283128312831283128312831283128312bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf
12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf12bf00000001
00000298002f00030000000000020010002f0040000004570b0c00000000
0000004b038a0001000000000000003500000001000000000001000c0035
000100000000000200040042000100000000000300180035000100000000
0004001100350001000000000005000c004d000100000000000600100059
0001000000000007005d0069000100000000000800180081000100000000
0009002100c6000100000000000d015500e7000100000000001000050069
0001000000000011000b003b0003000104030002000e0256000300010403
00040028023c0003000104050002000a027e000300010405000400240264
0003000104060002000602a2000300010406000400200288000300010407
0002000802c20003000104070004002202a80003000104080002000c02e4
0003000104080004002602ca0003000104090000006a02f0000300010409
00010018035a00030001040900020008037400030001040900030030035a
00030001040900040022035a00030001040900050018038a000300010409
0006002003a2000300010409000700ba03c20003000104090008003003f2
00030001040900090042047c000300010409000a04fc04be000300010409
000d02aa09ba0003000104090010000a053e000300010409001100160366
00030001040a0002000e0c7e00030001040a000400280c6400030001040b
000200120ca600030001040b0004002c0c8c00030001040c000200080cd2
00030001040c000400220cb800030001040e000200100cfe00030001040e
0004002a0ce4000300010410000200120cd20003000104100004002c0cb8
000300010413000200060d28000300010413000400200d0e000300010414
0002000e0d48000300010414000400280d2e000300010415000200140d70
0003000104150004002e0d560003000104160002000e0d9e000300010416
000400280d84000300010419000200140dc60003000104190004002e0dac
00030001041b0002000a0df400030001041b000400240dda00030001041d
0002000602c200030001041d0004002002a800030001041f0002000a0e18
00030001041f000400240dfe0003000104240002000c0e3c000300010424
000400260e2200030001042d0002000a0e6200030001042d000400240e48
00030001080a0002000e0c7e00030001080a000400280c64000300010816
0002000e0d9e000300010816000400280d84000300010c0a0002000e0c7e
000300010c0a000400280c64000300010c0c000200080cd2000300010c0c
000400220cb8a9203230303820546865204d6f6e6f7479706520436f7270
6f726174696f6e2e20416c6c205269676874732052657365727665642e41
7269616c204e6172726f7720426f6c64203a203230303856657273696f6e
20322e3430417269616c4e6172726f772d426f6c64417269616c20697320
612074726164656d61726b206f6620546865204d6f6e6f7479706520436f
72706f726174696f6e20696e2074686520556e6974656420537461746573
20616e642f6f72206f7468657220636f756e74726965732e526f62696e20
4e6963686f6c61732c205061747269636961205361756e64657273596f75
206d617920757365207468697320666f6e7420746f20646973706c617920
616e64207072696e7420636f6e74656e74206173207065726d6974746564
20627920746865206c6963656e7365207465726d7320666f722074686520
70726f6475637420696e207768696368207468697320666f6e7420697320
696e636c756465642e20596f75206d6179206f6e6c792028692920656d62
6564207468697320666f6e7420696e20636f6e74656e7420617320706572
6d69747465642062792074686520656d62656464696e6720726573747269
6374696f6e7320696e636c7564656420696e207468697320666f6e743b20
616e6420286969292074656d706f726172696c7920646f776e6c6f616420
7468697320666f6e7420746f2061207072696e746572206f72206f746865
72206f75747075742064657669636520746f2068656c70207072696e7420
636f6e74656e742e0041007200690061006c0020004e006100720072006f
00770020004e0065006700720065007400610041007200690061006c0020
004e006100720072006f0077002000740075010d006e00e9004100720069
0061006c0020004e006100720072006f0077002000660065006400410072
00690061006c0020004e006100720072006f007700200046006500740074
0041007200690061006c0020004e006100720072006f00770020038803bd
03c403bf03bd03b100a90020003200300030003800200054006800650020
004d006f006e006f007400790070006500200043006f00720070006f0072
006100740069006f006e002e00200041006c006c00200052006900670068
00740073002000520065007300650072007600650064002e004100720069
0061006c0020004e006100720072006f007700200042006f006c00640020
003a0020003200300030003800560065007200730069006f006e00200032
002e003400300041007200690061006c004e006100720072006f0077002d
0042006f006c00640041007200690061006c002000690073002000610020
00740072006100640065006d00610072006b0020006f0066002000540068
00650020004d006f006e006f007400790070006500200043006f00720070
006f0072006100740069006f006e00200069006e00200074006800650020
0055006e0069007400650064002000530074006100740065007300200061
006e0064002f006f00720020006f007400680065007200200063006f0075
006e00740072006900650073002e0052006f00620069006e0020004e0069
00630068006f006c00610073002c00200050006100740072006900630069
00610020005300610075006e0064006500720073004d006f006e006f0074
007900700065002000440072006100770069006e00670020004f00660066
00690063006500200031003900380032002e0020004100200063006f006e
00740065006d0070006f0072006100720079002000730061006e00730020
00730065007200690066002000640065007300690067006e002c00200041
007200690061006c00200063006f006e007400610069006e00730020006d
006f00720065002000680075006d0061006e006900730074002000630068
006100720061006300740065007200690073007400690063007300200074
00680061006e0020006d0061006e00790020006f00660020006900740073
0020007000720065006400650063006500730073006f0072007300200061
006e0064002000610073002000730075006300680020006900730020006d
006f0072006500200069006e002000740075006e00650020007700690074
006800200074006800650020006d006f006f00640020006f006600200074
006800650020006c00610073007400200064006500630061006400650073
0020006f006600200074006800650020007400770065006e007400690065
00740068002000630065006e0074007500720079002e0020005400680065
0020006f0076006500720061006c006c002000740072006500610074006d
0065006e00740020006f0066002000630075007200760065007300200069
007300200073006f006600740065007200200061006e0064002000660075
006c006c006500720020007400680061006e00200069006e0020006d006f
0073007400200069006e0064007500730074007200690061006c002d0073
00740079006c0065002000730061006e0073002000730065007200690066
002000660061006300650073002e0020005400650072006d0069006e0061
006c0020007300740072006f006b00650073002000610072006500200063
007500740020006f006e002000740068006500200064006900610067006f
006e0061006c002000770068006900630068002000680065006c00700073
00200074006f002000670069007600650020007400680065002000660061
00630065002000610020006c0065007300730020006d0065006300680061
006e006900630061006c00200061007000700065006100720061006e0063
0065002e00200041007200690061006c00200069007300200061006e0020
00650078007400720065006d0065006c0079002000760065007200730061
00740069006c0065002000660061006d0069006c00790020006f00660020
007400790070006500660061006300650073002000770068006900630068
002000630061006e00200062006500200075007300650064002000770069
0074006800200065007100750061006c0020007300750063006300650073
007300200066006f00720020007400650078007400200073006500740074
0069006e006700200069006e0020007200650070006f007200740073002c
002000700072006500730065006e0074006100740069006f006e0073002c
0020006d006100670061007a0069006e006500730020006500740063002c
00200061006e006400200066006f007200200064006900730070006c0061
0079002000750073006500200069006e0020006e00650077007300700061
0070006500720073002c0020006100640076006500720074006900730069
006e006700200061006e0064002000700072006f006d006f00740069006f
006e0073002e0059006f00750020006d0061007900200075007300650020
007400680069007300200066006f006e007400200074006f002000640069
00730070006c0061007900200061006e00640020007000720069006e0074
00200063006f006e00740065006e00740020006100730020007000650072
006d0069007400740065006400200062007900200074006800650020006c
006900630065006e007300650020007400650072006d007300200066006f
00720020007400680065002000700072006f006400750063007400200069
006e0020007700680069006300680020007400680069007300200066006f
006e007400200069007300200069006e0063006c0075006400650064002e
00200059006f00750020006d006100790020006f006e006c007900200028
0069002900200065006d0062006500640020007400680069007300200066
006f006e007400200069006e00200063006f006e00740065006e00740020
006100730020007000650072006d00690074007400650064002000620079
002000740068006500200065006d00620065006400640069006e00670020
007200650073007400720069006300740069006f006e007300200069006e
0063006c007500640065006400200069006e002000740068006900730020
0066006f006e0074003b00200061006e0064002000280069006900290020
00740065006d0070006f0072006100720069006c007900200064006f0077
006e006c006f006100640020007400680069007300200066006f006e0074
00200074006f002000610020007000720069006e0074006500720020006f
00720020006f00740068006500720020006f007500740070007500740020
00640065007600690063006500200074006f002000680065006c00700020
007000720069006e007400200063006f006e00740065006e0074002e0041
007200690061006c0020004e006100720072006f00770020004e00650067
00720069007400610041007200690061006c0020004e006100720072006f
00770020004c0069006800610076006f0069007400750041007200690061
006c0020004e006100720072006f00770020004700720061007300730065
00740074006f0041007200690061006c0020004e006100720072006f0077
0020004600e9006c006b00f6007600e900720041007200690061006c0020
004e006100720072006f007700200056006500740041007200690061006c
0020004e006100720072006f0077002000480061006c0076006600650074
0041007200690061006c0020004e006100720072006f007700200050006f
00670072007500620069006f006e00790041007200690061006c0020004e
006100720072006f00770020004e00650067007200690074006f00410072
00690061006c0020004e006100720072006f00770020041f043e043b0443
043604380440043d044b04390041007200690061006c0020004e00610072
0072006f0077002000540075010d006e00e90041007200690061006c0020
004e006100720072006f00770020004b0061006c0131006e004100720069
0061006c0020004e006100720072006f00770020004b007200650070006b
006f0041007200690061006c0020004e006100720072006f00770020004c
006f006400690061000041ff00af025c00b0025c00e0025c00030000025c
00010074025b00010010024c0040024c0080024c000300a0024c00e0024c
00020020024a0030024a0070024a0080024a00c0024a00d0024a00060070
024f00010080025100010060025100a0025100d002510003006002500001
00c0025000f0025000020040025200500252000200100248002002480002
000002480010024800200248008002480090024800a00248000600500248
0060024800700248008002480090024800a0024800c0024800f002480008
0010024700200247003002470040024700b0024700c00247000600600247
008002470090024700a0024700b002470005000002470010024700200247
00300247000400b0024700c0024700d0024700e0024700f0024700050050
02470060024700700247008002470090024700a002470006003002460040
024600600246007002460080024600a00246000600000246002002460030
0246004002460060024600700246000600d0024600e0024600f002460003
0060024600700246008002460090024600b0024600c00246000600000246
001002460020024600300246004002460050024600060080024600900246
00a0024600c0024600d0024600e0024600f0024600070020024600400246
0050024600600246000400700242000100200242006002420070024200a0
024200b0024200f002420006411800200243006002430070024300a00243
0004002002430060024300a0024300e002430004001001b1002001b10030
01b1400b0320793079407970790470ba015b0080015b401602007a807a02
00578057020900750139f07501090d0bb80800b21f090bb80800409b1f00
0f100f200f300f0439900fa00fb00fc00fd00fe00ff00f07090f011f012f
013f0104399f01af01bf01cf01df01ef01ff0107090f051f052f053f0504
399f05af05bf05cf05df05ef05ff0507090f031f032f033f0304399f03af
03bf03cf03df03ef03ff030709000b100b200b300b040f071f072f073f07
0439900ba00bb00bc00bd00be00bf00b079f07af07bf07cf07df07ef07ff
070740b8022040b301008f108f208f308f408f508f608f708f808f908f0a
608ff08f02208f308f408fc08fd08fe08ff08f0720ca30cac0ca038b048b
05bb04bb05041b041b054b044b05043b043b05ab04ab05044f1f9f1f020f
1f1f1f024f1e9f1e020f1e1f1e02090f1e0f1f02086f19013f1940190200
191019026f18013f184018020018101802090018001902086f159015023f
1540150200151015026f149014023f144014020014101402090014001502
08b066061fb066bbfff40006001601c6b2d7071fb801c64017d753071655
60181f556011181600464600000012110840bb01dd0000000901acb27e2b
1fb801a8b27e601fb801a7b27ede1f410b01a20067029a001f01a1015404
a900a70016019a0154b2971616b901990154b2971616b8015eb27e161fb8
015bb27e2d1fb80158b27e861f410b0156007e0534001f01500154027900
590016014b0154b2df2016b9014901544009c91d16fc7e281ff95bbc029a
001f00f801540127b72a16e57e431fe47e410a01bc001f00d00154095201
4d001600cf015402ddb26716cdb90154019ab23a16cbb80154b3f42316ca
b80154b3c21c16c9b801544009901516bb7e2b1fb95bbc029a001f00b701
540143b22e16b5b80154b4b41a16a561b80534b21fa45bbb029a001f00a3
0154b4c91d169f7e410a010b001f009e015412ac029a0016009d01540255
b254169cb80154b4d81f16917e410a289e0534001600900154029a001f00
8f0154016fb2341689be01540952014d00160087015401afb23d1680b901
5403bcb286167dbe01540778010b0016007901540634b2de1670be015425
5f05340016006d0154029ab21f697e4110029a001f01a60075029a001f01
a5005a284b05340016019f0057014d001f0159b275a71fbd014d0057020c
004f00160145b357af1b16b8011fb275bf1f4110011d005a05c100bf0016
011c0057016400360016011b0057012e002e0016011ab357e42316b80119
b557d72116fa5ab9284b0534b216f757b8010db72916d375301fd17ab802
9ab21fce57b922ef0534b216ba75b8010bb61fb857de1fa65ab80507b3a7
169b57b80113400c2a169275a71f8857de1f6a7ab90c6201bc4011165c75
301f460b46054608550909090990b8010040320790e90790c50790590724
08220820081e081c081a08180816081408120810080e080c080a08080806
080408020800080029bf01dd003901dd004801dd00c801dd000401b01303
4b024b5342014bb0c063004b6220b0f65323b8010a515ab005234201b012
4b004b5442b0382b4bb8080052b0372b4bb007505b58b101018e59b00288
b801005458b80119b101018e851bb0124358b900010129858d1bb9000101
ff858d595901731800162b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b18
2b2b2b2b014b5079ba001f011e00072b4b5379ba0090011e00072b181db0
964b5358b0aa1d59b0324b5358b0ff1d594bb06f53205c58b901df01dd45
44b901de01dd45445958b9032101df455258b901df03214459594bb0a753
205c58b9006701de4544b9007e01de45445958b904f20067455258b90067
04f24459594bb8010b53205c58b9005b01df4544b9006101df45445958b9
0789005b455258b9005b07894459594bb8053453205c58b1d2674544b167
6745445958b9275200d2455258b900d227524459594bb8053453205c58b9
0154005b4544b15b5b45445958b925880154455258b90154258844595900
4bb03853205c58b17a7a4544b1757a45445958b9018a007a455258b9007a
018a4459594bb04753205c58b17a7a4544b15a7a45445958b901f5007a45
5258b9007a01f54459594bb06053205c58b17a7a4544b1577a45445958b9
02a8007a455258b9007a02a844595901704bb801f35358b2462146458b44
594bb803e75358b2466146458b4459b27e6746456823456044704bb801f3
5358b2462146458b44594bb803e75358b2466146458b4459b2615b464568
23456044704bb801f35358b2462146458b44594bb803e75358b246614645
8b4459ba00d201540046456823456044002b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
654201b35edb997b456523456023456560234560b08b766818b080622020
b199db4565234520b003266062636820b003266165b0db236544b0992344
20b15e7b4565234520b003266062636820b003266165b07b236544b05e23
44b1007b455458b17b406544b25e405e4523614459b35d71629345652345
6023456560234560b089766818b080622020b162714565234520b0032660
62636820b003266165b071236544b062234420b15d934565234520b00326
6062636820b003266165b093236544b05d2344b10093455458b193406544
b25d405d45236144590145695342014b5058b108004259435c58b1080042
59b3020b0a124358601b2159421610703eb0124358b93b21187e1bba0400
01a8000b2b59b00c2342b00d2342b0124358b92d412d411bba0400040000
0b2b59b00e2342b00f2342b0124358b9187e3b211bba01a80400000b2b59
b0102342b011234201012b2b2b2b2b2b00b0024568b801e84568b0408b60
b0202344b0064568b801e94568b0408b60b0222344b0004568b801eb4568
b0408b60b801ea2344005e735e7373737373735e735e7373737373735e73
5e73737373737474737374757375755e73735e755e735e755e735e755e73
5e755e732b2b5e755e735e74747573730173747374737374747475757373
74747573747575737473747374737473747300>
[9599 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 2554 36 <00020000000004b605ba0007000a00e340603b003b05023d0632073f0830
0a5b065407d607e906e60709c906c607d90603290626070208020101090a
030404090709010169000714000007060904046905061405050609070203
5a40080a0a0b00010104040508060702400c5f0cb00c0307ba020d000602
0c4014092001e440600001340054008000c000f0000500b8020b400f6009
01340954098009c009f0090509b8020bb52004e405050b103c10ed1a19fd
5d71fd5d711a18ed1a1910fd18f65d003f3c3f3c103c103c11392f3c1afd
3c123987052e2b877dc4872e182b877dc407103c3c8710c4c4313001715d
5d005d212103210321012113030304b6fef869fe2063fefe01d4010122a5
a3014dfeb305bafc8a0220fde000>GFNBAA+ArialNarrow-Bold AddT42Char 
1 9478 183 <0001005d0359015605ba000b0049402b05070508da04d505040906080108
0706d40b5c40000006070a0a0190800b7f200730074007500760070507b9
0200000c10f65df41aed392f1133003f1afdf4323130005e5d5e5d133315
14070607273e01372370e62831732d443c026f05bacaaa546633751c6156
>GFNBAA+ArialNarrow-Bold AddT42Char 
1 0 0 <0002002c000001b1050000030007004db10504b80130b2000607bb013000
02000101d5b50303000a0605b80131b60303024a090704b80131b6010049
08566b182b4e10f43c4dfd3c4e10f63c4d10fd3c003f3c10fd3cfd3c10fd
3c313033112111252111212c0185feaa0128fed80500fb003504a000>GFNBAA+ArialNarrow-Bold AddT42Char 
GFNBAA+ArialNarrow-Bold /CharStrings get begin
/A 36 def
/quoteright 183 def
end
GFNBAA+ArialNarrow-Bold /Encoding get
dup 65 /A put
dup 146 /quoteright put
pop
end
%ADOEndSubsetFont
/ONVRIL+ArialNarrow-Bold /GFNBAA+ArialNarrow-Bold findfont ct_VMDictPut
/ONVRIL+ArialNarrow-Bold*1 
[65{/.notdef}rp /A 80{/.notdef}rp /quoteright 109{/.notdef}rp]
ONVRIL+ArialNarrow-Bold nf
ONVRIL+ArialNarrow-Bold*1 [6.984 0 0 -6.984 0 0 ]msf
52.92 169.73 mo
(A\222)
[4.08004 0 ]xsh
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
151.34 169.3 mo
(regular non)
[1.90004 3.13892 3.35468 3.11804 .960526 3.11804 1.90004 2.17149 3.11804 3.11804 0 ]xsh
%ADOBeginSubsetFont: HIBBAA+ArialNarrow AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ONVRIJ+ArialNarrow gcheck setglobal} if
1 1230 16 <0001003501b801fa026d0003002f401c02016d030002f500001000200050
007000900006c000d000e0000300b90129000410f65d71ed002f3cfd3c31
30133521153501c501b8b5b5>ONVRIJ+ArialNarrow AddT42Char 
ONVRIJ+ArialNarrow /CharStrings get begin
/hyphen 16 def
end
ONVRIJ+ArialNarrow /Encoding get
dup 45 /hyphen put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ONVRIJ+ArialNarrow*1 
[32{/.notdef}rp /space 3{/.notdef}rp /dollar 3{/.notdef}rp /parenleft 4{/.notdef}rp /hyphen 
2{/.notdef}rp /zero /one /two /three /four /five /six 
/seven /eight /nine /colon 11{/.notdef}rp /F 2{/.notdef}rp /I 
12{/.notdef}rp /V 10{/.notdef}rp /a /b /c /d /e 
/f /g /h /i 2{/.notdef}rp /l /.notdef /n 
/o /p /.notdef /r /s /t /u /.notdef 
/w /.notdef /y 134{/.notdef}rp]
ONVRIJ+ArialNarrow nf
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
180.38 169.3 mo
(-)sh
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
182.33 169.3 mo
(cyclical)
[2.87451 2.63786 2.8745 .960526 1.19717 2.87451 3.11803 0 ]xsh
60.84 197.88 mo
75.48 197.88 li
75.48 189 li
60.84 189 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
60.84 197.88 mo
75.48 197.88 li
75.48 189 li
60.84 189 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
64.392 196.25 mo
(1)sh
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
67.536 196.25 mo
(2)sh
75.48 197.88 mo
89.88 197.88 li
89.88 189 li
75.48 189 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
75.48 197.88 mo
89.88 197.88 li
89.88 189 li
75.48 189 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
78.984 196.25 mo
(13)
[3.11992 0 ]xsh
90.12 197.88 mo
104.52 197.88 li
104.52 189 li
90.12 189 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
90.12 197.88 mo
104.52 197.88 li
104.52 189 li
90.12 189 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
93.672 196.25 mo
(1)sh
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
96.792 196.25 mo
(4)sh
104.52 197.88 mo
119.16 197.88 li
119.16 189 li
104.52 189 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
104.52 197.88 mo
119.16 197.88 li
119.16 189 li
104.52 189 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
108.24 196.25 mo
(15)
[3.11992 0 ]xsh
119.16 197.88 mo
133.8 197.88 li
133.8 189 li
119.16 189 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
119.16 197.88 mo
133.8 197.88 li
133.8 189 li
119.16 189 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
122.81 196.25 mo
(19)
[3.11992 0 ]xsh
133.8 197.88 mo
148.44 197.88 li
148.44 189 li
133.8 189 li
cp
1 /0 /CSD get_res sepcs
.149 sep
ef
133.8 197.88 mo
148.44 197.88 li
148.44 189 li
133.8 189 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
138.96 196.25 mo
(1)sh
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
151.87 195.82 mo
(regular non)
[1.90004 3.13892 3.35468 3.11804 .960526 3.11804 1.90004 2.17149 3.11804 3.11804 0 ]xsh
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
180.91 195.82 mo
(-)sh
ONVRIJ+ArialNarrow*1 [6.96 0 0 -6.96 0 0 ]msf
182.86 195.82 mo
(cyclical)
[2.87451 2.63786 2.8745 .960526 1.19717 2.87451 3.11803 0 ]xsh
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
/ONVRII+ArialNarrow-Bold*1 uf
/ONVRII+ArialNarrow-Bold uf
/PBAAAA+ArialNarrow-Bold uf
/ONVRIL+ArialNarrow-Bold*1 uf
/ONVRIL+ArialNarrow-Bold uf
/GFNBAA+ArialNarrow-Bold uf
/ONVRIK+ArialNarrow*1 uf
/ONVRIK+ArialNarrow uf
/QJJAAA+ArialNarrow uf
/ONVRIJ+ArialNarrow*1 uf
/ONVRIJ+ArialNarrow uf
/HIBBAA+ArialNarrow uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
